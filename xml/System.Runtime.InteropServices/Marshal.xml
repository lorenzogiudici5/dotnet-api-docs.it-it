<Type Name="Marshal" FullName="System.Runtime.InteropServices.Marshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="790952172cd0e06d067735ca98dcea3e501a4fc0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37471537" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Marshal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Marshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.Marshal" />
  <TypeSignature Language="VB.NET" Value="Public Class Marshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class Marshal abstract sealed" />
  <TypeSignature Language="F#" Value="type Marshal = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="138ef-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="138ef-101">Provides a collection of methods for allocating unmanaged memory, copying unmanaged memory blocks, and converting managed to unmanaged types, as well as other miscellaneous methods used when interacting with unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-102">Il `static` metodi definiti nel <xref:System.Runtime.InteropServices.Marshal> classe sono essenziali per l'uso con codice non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-102">The `static` methods defined on the <xref:System.Runtime.InteropServices.Marshal> class are essential to working with unmanaged code.</span></span> <span data-ttu-id="138ef-103">La maggior parte dei metodi definiti in questa classe vengono in genere utilizzati dagli sviluppatori che desiderano offrire un ponte tra il gestite e i modelli di programmazione.</span><span class="sxs-lookup"><span data-stu-id="138ef-103">Most methods defined in this class are typically used by developers who want to provide a bridge between the managed and unmanaged programming models.</span></span> <span data-ttu-id="138ef-104">Ad esempio, il <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> metodo copia i caratteri ANSI da una stringa specificata (nell'heap gestito) in un buffer nell'heap non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-104">For example, the <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> method copies ANSI characters from a specified string (in the managed heap) to a buffer in the unmanaged heap.</span></span> <span data-ttu-id="138ef-105">Viene anche allocato nell'heap di destinazione della dimensione appropriata.</span><span class="sxs-lookup"><span data-stu-id="138ef-105">It also allocates the target heap of the right size.</span></span>  
  
 <span data-ttu-id="138ef-106">Common language runtime fornisce le funzionalità specifiche di marshalling.</span><span class="sxs-lookup"><span data-stu-id="138ef-106">The common language runtime provides specific marshaling capabilities.</span></span> <span data-ttu-id="138ef-107">Per informazioni dettagliate sul comportamento di marshalling, vedere [marshalling di interoperabilità](~/docs/framework/interop/interop-marshaling.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-107">For details on marshaling behavior, see [Interop Marshaling](~/docs/framework/interop/interop-marshaling.md).</span></span>  
  
 <span data-ttu-id="138ef-108">Il `Read` e `Write` metodi nel <xref:System.Runtime.InteropServices.Marshal> classe supporta l'accesso allineato e non allineato.</span><span class="sxs-lookup"><span data-stu-id="138ef-108">The `Read` and `Write` methods in the <xref:System.Runtime.InteropServices.Marshal> class support both aligned and unaligned access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-109">Nell'esempio seguente viene illustrato come usare i vari metodi definiti dal <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-109">The following example shows how to use various methods defined by the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#1](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#1)]
 [!code-csharp[Marshal#1](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#1)]
 [!code-vb[Marshal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddRef">
      <MemberSignature Language="C#" Value="public static int AddRef (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 AddRef(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddRef (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int AddRef(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member AddRef : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.AddRef pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="138ef-110">The interface reference count to increment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-110">The interface reference count to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-111">Increments the reference count on the specified interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-111">Increments the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-112">The new value of the reference count on the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-113">Common language runtime gestisce il conteggio dei riferimenti di un oggetto COM per l'utente, rendendo inutile utilizzare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-113">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="138ef-114">In rari casi, ad esempio per test di un gestore di marshalling personalizzato, si potrebbe essere necessario modificare manualmente la durata dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-114">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="138ef-115">Dopo avere chiamato <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, è necessario diminuire il conteggio dei riferimenti usando un metodo, ad esempio <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-115">After calling <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, you must decrement the reference count by using a method such as <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-116">Non fare affidamento sul valore restituito di <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, poiché può talvolta risultare instabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-116">Do not rely on the return value of <xref:System.Runtime.InteropServices.Marshal.AddRef%2A>, as it can sometimes be unstable.</span></span>  
  
 <span data-ttu-id="138ef-117">È possibile chiamare <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> per ottenere una <xref:System.IntPtr> valore che rappresenta un' [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore a interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-117">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer.</span></span> <span data-ttu-id="138ef-118">È anche possibile usare questi metodi e le <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> metodo su oggetti gestiti per ottenere le interfacce COM rappresentate dal wrapper chiamabile COM dell'oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-118">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.AddRef%2A> method on managed objects to obtain the COM interfaces represented by the managed object's COM callable wrapper.</span></span> <span data-ttu-id="138ef-119">Se non ha familiarità con i dettagli di questo tipo di wrapper, vedere [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-119">If you are not familiar with the details of this wrapper type, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-120">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-120">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-121">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-121">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr AllocCoTaskMem (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocCoTaskMem(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocCoTaskMem (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocCoTaskMem(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocCoTaskMem : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocCoTaskMem cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="138ef-122">The size of the block of memory to be allocated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-122">The size of the block of memory to be allocated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-123">Allocates a block of memory of specified size from the COM task memory allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-124">An integer representing the address of the block of memory allocated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-124">An integer representing the address of the block of memory allocated.</span>
          </span>
          <span data-ttu-id="138ef-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-125">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> è uno di allocazione della memoria due metodi dell'API nel <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-126"><xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> is one of two memory allocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="138ef-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> è l'altro.) Il contenuto di memoria iniziale restituito è definito e la memoria allocata può superare il numero di byte richiesto.</span><span class="sxs-lookup"><span data-stu-id="138ef-127">(<xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A?displayProperty=nameWithType> is the other.) The initial memory content returned is undefined, and the allocated memory can be larger than the requested number of bytes.</span></span> <span data-ttu-id="138ef-128">Questo metodo espone il modello COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) funzione, che si intende l'allocatore di memoria delle attività COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-128">This method exposes the COM [CoTaskMemAlloc](http://go.microsoft.com/fwlink/?LinkId=148626) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-129">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-129">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-130">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-130">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-131">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-131">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AllocHGlobal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-132">Allocates memory from the unmanaged memory of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-132">Allocates memory from the unmanaged memory of the process.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(int cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="138ef-133">The required number of bytes in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-133">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-134">Allocates memory from the unmanaged memory of the process by using the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-135">A pointer to the newly allocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-135">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="138ef-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-136">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> è uno dei due metodi di allocazione di memoria nel <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-137"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="138ef-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> è l'altro.) Questo metodo espone Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) funzione da Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="138ef-138">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkId=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="138ef-139">Quando <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> chiamate `LocalAlloc`, viene passata una `LMEM_FIXED` flag che determina la memoria allocata da bloccare in posizione.</span><span class="sxs-lookup"><span data-stu-id="138ef-139">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="138ef-140">Inoltre, la memoria allocata non è riempiti con zero.</span><span class="sxs-lookup"><span data-stu-id="138ef-140">Also, the allocated memory is not zero-filled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-141">Nel codice riportato di seguito viene illustrata la chiamata al metodo <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-141">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> method.</span></span> <span data-ttu-id="138ef-142">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-142">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-143">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-143">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-144">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-144">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-145">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-145">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr AllocHGlobal (IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int AllocHGlobal(native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocHGlobal (cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr AllocHGlobal(IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member AllocHGlobal : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.AllocHGlobal cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="138ef-146">The required number of bytes in memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-146">The required number of bytes in memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-147">Allocates memory from the unmanaged memory of the process by using the pointer to the specified number of bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-148">A pointer to the newly allocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-148">A pointer to the newly allocated memory.</span>
          </span>
          <span data-ttu-id="138ef-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-149">This memory must be released using the <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> è uno dei due metodi di allocazione di memoria nel <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-150"><xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> is one of two memory allocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="138ef-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> è l'altro.) Questo metodo espone Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) funzione da Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="138ef-151">(<xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A?displayProperty=nameWithType> is the other.) This method exposes the Win32 [LocalAlloc](http://go.microsoft.com/fwlink/?LinkID=148628) function from Kernel32.dll.</span></span>  
  
 <span data-ttu-id="138ef-152">Quando <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> chiamate `LocalAlloc`, viene passata una `LMEM_FIXED` flag che determina la memoria allocata da bloccare in posizione.</span><span class="sxs-lookup"><span data-stu-id="138ef-152">When <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> calls `LocalAlloc`, it passes a `LMEM_FIXED` flag, which causes the allocated memory to be locked in place.</span></span> <span data-ttu-id="138ef-153">Inoltre, la memoria allocata non è riempiti con zero.</span><span class="sxs-lookup"><span data-stu-id="138ef-153">Also, the allocated memory is not zero-filled.</span></span>  
  
 <span data-ttu-id="138ef-154">Per vedere un codice di esempio, vedere <xref:System.Runtime.InteropServices.Marshal> e <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-154">For example code, see <xref:System.Runtime.InteropServices.Marshal> and <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-155">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-155">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-156">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-156">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-157">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-157">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="AreComObjectsAvailableForCleanup">
      <MemberSignature Language="C#" Value="public static bool AreComObjectsAvailableForCleanup ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreComObjectsAvailableForCleanup() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AreComObjectsAvailableForCleanup () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AreComObjectsAvailableForCleanup();" />
      <MemberSignature Language="F#" Value="static member AreComObjectsAvailableForCleanup : unit -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-158">Indicates whether runtime callable wrappers (RCWs) from any context are available for cleanup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-159">
            <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-159">
              <see langword="true" /> if there are any RCWs available for cleanup; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-160">Se sono presenti molti riferimenti tra codice gestito e nativo con grafici di dipendenza completa che può richiedere molto tempo per tutti gli oggetti pulire.</span><span class="sxs-lookup"><span data-stu-id="138ef-160">If there are a lot of references between managed and native code with deep dependency graphs it can take a long time for all the objects to clean up.</span></span> <span data-ttu-id="138ef-161">Ogni volta che viene eseguito un catalogo globale consente di liberare un certo numero di RCW che rilascerà a sua volta gli oggetti COM sottostanti.</span><span class="sxs-lookup"><span data-stu-id="138ef-161">Each time a GC runs it will free up some number of RCWs, which will in turn release the underlying COM objects.</span></span> <span data-ttu-id="138ef-162">Gli oggetti COM verranno quindi i riferimenti gestiti e rendere più oggetti disponibili per la pulizia la volta successiva che viene eseguito GC, che avvia il processo soggiacente.</span><span class="sxs-lookup"><span data-stu-id="138ef-162">Those COM objects will then release their managed references and make more objects available for cleanup the next time a GC runs, which starts the process over again.</span></span>  
  
 <span data-ttu-id="138ef-163">Il <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> metodo offre un modo per l'applicazione determinare quanti cicli di Garbage Collection. Raccogli e Garbage Collection. WaitForPendingFinalizers devono essere eseguiti per la pulitura di tutti gli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-163">The <xref:System.Runtime.InteropServices.Marshal.AreComObjectsAvailableForCleanup%2A> method provides a way for the application to determine how many cycles of GC.Collect and GC.WaitForPendingFinalizers need to happen in order to clean everything up.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-164">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-164">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-165">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-165">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BindToMoniker">
      <MemberSignature Language="C#" Value="public static object BindToMoniker (string monikerName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object BindToMoniker(string monikerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BindToMoniker (monikerName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BindToMoniker(System::String ^ monikerName);" />
      <MemberSignature Language="F#" Value="static member BindToMoniker : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.BindToMoniker monikerName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="monikerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="monikerName">
          <span data-ttu-id="138ef-166">The moniker corresponding to the desired interface pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-166">The moniker corresponding to the desired interface pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-167">Gets an interface pointer identified by the specified moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-167">Gets an interface pointer identified by the specified moniker.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-168">An object containing a reference to the interface pointer identified by the <paramref name="monikerName" /> parameter.</span>
          </span>
          <span data-ttu-id="138ef-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-169">A moniker is a name, and in this case, the moniker is defined by an interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> espone il modello COM `BindToMoniker` metodo, che produce un oggetto che è possibile eseguire il cast a qualsiasi interfaccia COM è necessario.</span><span class="sxs-lookup"><span data-stu-id="138ef-170"><xref:System.Runtime.InteropServices.Marshal.BindToMoniker%2A> exposes the COM `BindToMoniker` method, which produces an object that you can cast to any COM interface you require.</span></span> <span data-ttu-id="138ef-171">Questo metodo offre la stessa funzionalità come la `GetObject` metodo in Visual Basic 6.0 e [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span><span class="sxs-lookup"><span data-stu-id="138ef-171">This method provides the same functionality as the `GetObject` method in Visual Basic 6.0 and [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="138ef-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-172">An unrecognized HRESULT was returned by the unmanaged <see langword="BindToMoniker" /> method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-173">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-173">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-174">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-174">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BufferToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr BufferToBSTR (Array ptr, int slen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int BufferToBSTR(class System.Array ptr, int32 slen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.BufferToBSTR(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BufferToBSTR (ptr As Array, slen As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr BufferToBSTR(Array ^ ptr, int slen);" />
      <MemberSignature Language="F#" Value="static member BufferToBSTR : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.BufferToBSTR (ptr, slen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Array" />
        <Parameter Name="slen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="slen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeWrapperHandleStrength">
      <MemberSignature Language="C#" Value="public static void ChangeWrapperHandleStrength (object otp, bool fIsWeak);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeWrapperHandleStrength(object otp, bool fIsWeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ChangeWrapperHandleStrength (otp As Object, fIsWeak As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ChangeWrapperHandleStrength(System::Object ^ otp, bool fIsWeak);" />
      <MemberSignature Language="F#" Value="static member ChangeWrapperHandleStrength : obj * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength (otp, fIsWeak)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otp" Type="System.Object" />
        <Parameter Name="fIsWeak" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="otp">
          <span data-ttu-id="138ef-175">The object whose CCW holds a reference counted handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-175">The object whose CCW holds a reference counted handle.</span>
          </span>
          <span data-ttu-id="138ef-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-176">The handle is strong if the reference count on the CCW is greater than zero; otherwise, it is weak.</span>
          </span>
        </param>
        <param name="fIsWeak">
          <span data-ttu-id="138ef-177">
            <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-177">
              <see langword="true" /> to change the strength of the handle on the <c>otp</c> parameter to weak, regardless of its reference count; <see langword="false" /> to reset the handle strength on <c>otp</c> to be reference counted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-178">Changes the strength of an object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) (CCW) handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> viene usato per la funzionalità del pool di oggetti e non deve essere chiamato direttamente dal codice utente.</span><span class="sxs-lookup"><span data-stu-id="138ef-179"><xref:System.Runtime.InteropServices.Marshal.ChangeWrapperHandleStrength%2A> is used for object pooling functionality and should never be called by user code directly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-180">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-180">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-181">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-181">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CleanupUnusedObjectsInCurrentContext">
      <MemberSignature Language="C#" Value="public static void CleanupUnusedObjectsInCurrentContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CleanupUnusedObjectsInCurrentContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CleanupUnusedObjectsInCurrentContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CleanupUnusedObjectsInCurrentContext();" />
      <MemberSignature Language="F#" Value="static member CleanupUnusedObjectsInCurrentContext : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-182">Notifies the runtime to clean up all [Runtime Callable Wrappers](~/docs/framework/interop/runtime-callable-wrapper.md) (RCWs) allocated in the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-183">Il sistema di interoperabilità immette i messaggi mentre tenta di eseguire la pulizia di RCW.</span><span class="sxs-lookup"><span data-stu-id="138ef-183">The interop system pumps messages while it attempts to clean up RCWs.</span></span> <span data-ttu-id="138ef-184">Ciò garantisce che la pulizia per RCW apartment a thread singolo (STA) si verifica in tutte le applicazioni, incluse le applicazioni che non distribuiscono abbastanza frequentemente.</span><span class="sxs-lookup"><span data-stu-id="138ef-184">This ensures that cleanup for single-threaded apartment (STA) RCWs happens in all applications, including applications that do not pump often enough.</span></span> <span data-ttu-id="138ef-185">Tuttavia, alcune applicazioni che distribuiscono in modo appropriato sono molto sensibili in cui si verifica la distribuzione.</span><span class="sxs-lookup"><span data-stu-id="138ef-185">However, some applications that do pump appropriately are very sensitive to where pumping occurs.</span></span> <span data-ttu-id="138ef-186">Quando il sistema di interoperabilità immette i messaggi in queste applicazioni, in punti che sono impreviste, l'applicazione può verificarsi problemi di reentrancy sono difficili da diagnosticare.</span><span class="sxs-lookup"><span data-stu-id="138ef-186">When the interop system pumps messages in these applications, in places that are unexpected, , the application can encounter reentrancy issues that are difficult to diagnose.</span></span> <span data-ttu-id="138ef-187">Di conseguenza, le applicazioni devono essere in grado di controllare la propria distribuzione per un particolare STA e controllare la pulizia di RCW.</span><span class="sxs-lookup"><span data-stu-id="138ef-187">Therefore, applications need to be able to control their own pumping for a particular STA and to control the clean-up of RCWs.</span></span>  
  
 <span data-ttu-id="138ef-188">Tuttavia, gli sviluppatori controllano spesso solo un sottoinsieme dei thread nella propria applicazione e pertanto non possono garantire che tutti i thread stiano eseguendo in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-188">However, developers often only control a subset of the threads in their application and thus cannot ensure that all threads are pumping appropriately.</span></span>  
  
 <span data-ttu-id="138ef-189">Per risolvere questo problema:</span><span class="sxs-lookup"><span data-stu-id="138ef-189">To solve this problem:</span></span>  
  
1.  <span data-ttu-id="138ef-190">Usare il <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> metodo per disattivare la pulizia automatica dei RCW e la distribuzione di messaggi che si verifica, in un singolo thread.</span><span class="sxs-lookup"><span data-stu-id="138ef-190">Use the <xref:System.Threading.Thread.DisableComObjectEagerCleanup%2A?displayProperty=nameWithType> method to turn off automatic cleanup of RCWs, and the message pumping that occurs, on a per-thread basis.</span></span> <span data-ttu-id="138ef-191">Ciò consente agli sviluppatori di rifiutare esplicitamente la pulitura automatica e la corrispondente distribuzione di messaggi.</span><span class="sxs-lookup"><span data-stu-id="138ef-191">This allows developers to opt out of automatic clean-up, and the corresponding message pumping.</span></span>  
  
2.  <span data-ttu-id="138ef-192">Usare il <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> metodo per notificare al runtime di pulizia di RCW tutti allocati nel contesto corrente.</span><span class="sxs-lookup"><span data-stu-id="138ef-192">Use the <xref:System.Runtime.InteropServices.Marshal.CleanupUnusedObjectsInCurrentContext%2A> method to notify the runtime to clean up all RCWs that are allocated in the current context.</span></span> <span data-ttu-id="138ef-193">Questo metodo complementare consente agli sviluppatori di controllare con precisione quando il runtime esegue operazioni di pulitura nel contesto corrente.</span><span class="sxs-lookup"><span data-stu-id="138ef-193">This companion method allows developers to precisely control when the runtime performs cleanup in the current context.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-194">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-195">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-196">Copies data from a managed array to an unmanaged memory pointer, or from an unmanaged memory pointer to a managed array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (byte[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(unsigned int8[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Byte(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;System::Byte&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : byte[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-197">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-197">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-198">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-198">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-199">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-199">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-200">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-200">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-201">Copies data from a one-dimensional, managed 8-bit unsigned integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-202">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-202">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-203">Nell'esempio seguente copia una matrice in memoria non gestita utilizzando il <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> rapporto di overload e quindi copia la matrice non gestita alla memoria gestita mediante il <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span><span class="sxs-lookup"><span data-stu-id="138ef-203">The following example copies an array to unmanaged memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.IntPtr%2CSystem.Int32%29> overload, and then copies the unmanaged array back to managed memory by using the <xref:System.Runtime.InteropServices.Marshal.Copy%28System.IntPtr%2CSystem.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-204">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-204">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-205">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-205">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-206">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-206">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-207">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-207">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (char[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(char[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Char(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;char&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : char[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-208">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-208">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-209">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-209">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-210">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-210">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-211">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-211">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-212">Copies data from a one-dimensional, managed character array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-213">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-213">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-214">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-214">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-215">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-215">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-216">
            <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-216">
              <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-217">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-218">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (double[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Double(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;double&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : double[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-219">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-219">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-220">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-220">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-221">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-221">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-222">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-222">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-223">Copies data from a one-dimensional, managed double-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-224">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-224">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-225">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-225">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-226">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-226">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-227">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-227">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-228">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-228">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-229">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-229">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (short[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int16[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Short(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;short&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int16[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-230">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-230">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-231">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-231">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-232">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-232">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-233">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-233">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-234">Copies data from a one-dimensional, managed 16-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-235">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-235">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-236">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-236">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-237">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-237">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-238">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-238">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-239">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-239">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-240">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-240">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (int[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Integer(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;int&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-241">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-241">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-242">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-242">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-243">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-243">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-244">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-244">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-245">Copies data from a one-dimensional, managed 32-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-246">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-246">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-247">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-247">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-248">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-248">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-249">
            <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-249">
              <paramref name="startIndex" /> or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-250">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-250">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-251">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-251">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (long[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(int64[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Long(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;long&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : int64[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-252">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-252">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-253">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-253">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-254">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-254">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-255">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-255">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-256">Copies data from a one-dimensional, managed 64-bit signed integer array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-257">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-257">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-258">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-258">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-259">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-259">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-260">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-260">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-261">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-261">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-262">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-262">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, byte[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, unsigned int8[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Byte(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;System::Byte&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * byte[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Byte[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-263">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-263">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-264">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-264">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-265">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-265">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-266">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-266">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-267">Copies data from an unmanaged memory pointer to a managed 8-bit unsigned integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-268">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-268">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-269">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-269">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-270">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-270">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-271">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-271">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-byte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-byte/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-272">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-272">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-273">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-273">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-274">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-274">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, char[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, char[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;char&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * char[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-275">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-275">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-276">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-276">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-277">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-277">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-278">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-278">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-279">Copies data from an unmanaged memory pointer to a managed character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-280">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-280">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-281">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-281">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-282">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-282">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-283">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-283">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-char#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-char/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-284">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-284">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-285">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-286">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, double[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Double(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;double&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * double[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Double[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-287">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-287">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-288">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-288">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-289">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-289">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-290">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-290">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-291">Copies data from an unmanaged memory pointer to a managed double-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-292">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-292">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-293">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-293">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-294">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-294">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-295">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-295">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-double/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-296">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-296">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-297">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-298">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, short[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int16[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Short(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;short&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int16[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int16[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-299">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-299">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-300">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-300">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-301">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-301">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-302">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-302">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-303">Copies data from an unmanaged memory pointer to a managed 16-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-304">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-304">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-305">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-305">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-306">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-306">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-307">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-307">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int16/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-308">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-308">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-309">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-309">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-310">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-310">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, int[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Integer(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;int&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int32[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-311">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-311">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-312">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-312">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-313">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-313">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-314">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-314">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-315">Copies data from an unmanaged memory pointer to a managed 32-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-316">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-316">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-317">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-317">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-318">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-318">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-319">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-319">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-320">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-320">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-321">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-321">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-322">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-322">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, long[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, int64[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Long(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;long&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * int64[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Int64[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-323">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-323">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-324">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-324">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-325">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-325">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-326">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-326">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-327">Copies data from an unmanaged memory pointer to a managed 64-bit signed integer array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-328">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-328">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-329">Di conseguenza, i dati non gestiti corrispondente il`source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-329">Thus, the unmanaged data corresponding to the`source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-330">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-330">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-331">Nell'esempio seguente copia una matrice in memoria non gestita e quindi copia la matrice non gestita alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-331">The following example copies an array to unmanaged memory and then copies the unmanaged array back to managed memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.Copy-int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.Copy-int64/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-332">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-332">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-333">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-333">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-334">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-334">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, IntPtr[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, native int[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As IntPtr(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;IntPtr&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * nativeint[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-335">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-335">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-336">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-336">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-337">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-337">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-338">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-338">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-339">Copies data from an unmanaged memory pointer to a managed <see cref="T:System.IntPtr" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-340">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-340">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-341">Di conseguenza, i dati non gestiti che corrisponde alla `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-341">Therefore, the unmanaged data that corresponds to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-342">È necessario inizializzare la matrice gestita con le dimensioni appropriate prima di chiamare il <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-342">You must initialize the managed array with the appropriate size before calling the <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-343">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-343">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-344">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-344">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-345">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-345">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr source, float[] destination, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int source, float32[] destination, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr, destination As Single(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(IntPtr source, cli::array &lt;float&gt; ^ destination, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint * single[] * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, destination, startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr" />
        <Parameter Name="destination" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-346">The memory pointer to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-346">The memory pointer to copy from.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-347">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-347">The array to copy to.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-348">The zero-based index in the destination array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-348">The zero-based index in the destination array where copying should start.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-349">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-349">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-350">Copies data from an unmanaged memory pointer to a managed single-precision floating-point number array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-351">Matrici di tipo C non gestite non contengono informazioni sui limiti che impediscano il `startIndex` e `length` Paramenti da convalidare.</span><span class="sxs-lookup"><span data-stu-id="138ef-351">Unmanaged, C-style arrays do not contain bounds information, which prevents the `startIndex` and `length` parameters from being validated.</span></span> <span data-ttu-id="138ef-352">Di conseguenza, i dati non gestiti corrispondente il `source` parametro consente di popolare la matrice gestita indipendentemente dalla sua utilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-352">Thus, the unmanaged data corresponding to the `source` parameter populates the managed array regardless of its usefulness.</span></span> <span data-ttu-id="138ef-353">Prima di chiamare questo metodo, è necessario inizializzare la matrice gestita con le dimensioni appropriate.</span><span class="sxs-lookup"><span data-stu-id="138ef-353">You must initialize the managed array with the appropriate size before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-354">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-354">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-355">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-355">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-356">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-356">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (IntPtr[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(native int[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As IntPtr(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;IntPtr&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : nativeint[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.IntPtr[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-357">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-357">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-358">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-358">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-359">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-359">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-360">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-360">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-361">Copies data from a one-dimensional, managed <see cref="T:System.IntPtr" /> array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-362">È possibile usare questo metodo per copiare un subset di una matrice unidimensionale gestita <xref:System.IntPtr> matrice da una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-362">You can use this method to copy a subset of a one-dimensional managed <xref:System.IntPtr> array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-363">
            <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-363">
              <paramref name="source" />, <paramref name="destination" />, <paramref name="startIndex" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-364">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-364">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-365">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-365">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (float[] source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(float32[] source, int32 startIndex, native int destination, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (source As Single(), startIndex As Integer, destination As IntPtr, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(cli::array &lt;float&gt; ^ source, int startIndex, IntPtr destination, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : single[] * int * nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Copy (source, startIndex, destination, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Single[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="138ef-366">The one-dimensional array to copy from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-366">The one-dimensional array to copy from.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="138ef-367">The zero-based index in the source array where copying should start.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-367">The zero-based index in the source array where copying should start.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="138ef-368">The memory pointer to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-368">The memory pointer to copy to.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="138ef-369">The number of array elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-369">The number of array elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-370">Copies data from a one-dimensional, managed single-precision floating-point number array to an unmanaged memory pointer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-371">È possibile utilizzare questo metodo per copiare un sottoinsieme di una matrice unidimensionale gestita a una matrice di tipo C non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-371">You can use this method to copy a subset of a one-dimensional managed array to an unmanaged C-style array.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-372">
            <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-372">
              <paramref name="startIndex" /> and <paramref name="length" /> are not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-373">
            <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-373">
              <paramref name="source" />, <paramref name="startIndex" />, <paramref name="destination" />, or <paramref name="length" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-374">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-374">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-375">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-375">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject (IntPtr pOuter, object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject(native int pOuter, object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject (pOuter As IntPtr, o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pOuter">
          <span data-ttu-id="138ef-376">The outer <see langword="IUnknown" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-376">The outer <see langword="IUnknown" /> pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="138ef-377">An object to aggregate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-377">An object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-378">Aggregates a managed object with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-378">Aggregates a managed object with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-379">The inner <see langword="IUnknown" /> pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-380">Il <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> metodo aggrega il puntatore gestito interno di un oggetto gestito con il puntatore esterno specificato e restituisce quindi un inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore dell'oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-380">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object with the specified outer pointer, and then returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-381">
            <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-381">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-382">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-382">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-383">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-383">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateAggregatedObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr CreateAggregatedObject&lt;T&gt; (IntPtr pOuter, T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateAggregatedObject&lt;T&gt;(native int pOuter, !!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateAggregatedObject``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAggregatedObject(Of T) (pOuter As IntPtr, o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr CreateAggregatedObject(IntPtr pOuter, T o);" />
      <MemberSignature Language="F#" Value="static member CreateAggregatedObject : nativeint * 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.CreateAggregatedObject (pOuter, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pOuter" Type="System.IntPtr" />
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-384">Tipo dell'oggetto gestito da aggregare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-384">The type of the managed object to aggregate.</span>
          </span>
        </typeparam>
        <param name="pOuter">
          <span data-ttu-id="138ef-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-385">The outer [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer.</span>
          </span>
        </param>
        <param name="o">
          <span data-ttu-id="138ef-386">The managed object to aggregate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-386">The managed object to aggregate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-387">[Supported in the .NET Framework 4.5.1 and later versions]  Aggregates a managed object of the specified type with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-387">[Supported in the .NET Framework 4.5.1 and later versions]  Aggregates a managed object of the specified type with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-388">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-388">The inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-389">Il <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> metodo aggrega il puntatore gestito interno di un oggetto gestito di un tipo specificato con il puntatore esterno specificato e restituisce un inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore dell'oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-389">The <xref:System.Runtime.InteropServices.Marshal.CreateAggregatedObject%2A> method aggregates the inner managed pointer of a managed object of a specified type with the specified outer pointer, and returns an inner [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer of the managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-390">
            <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-390">
              <paramref name="o" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-391">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-391">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-392">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-392">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType">
      <MemberSignature Language="C#" Value="public static object CreateWrapperOfType (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateWrapperOfType(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType (o As Object, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateWrapperOfType(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : obj * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-393">The object to be wrapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-393">The object to be wrapped.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="138ef-394">The type of wrapper to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-394">The type of wrapper to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-395">Wraps the specified COM object in an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-395">Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-396">The newly wrapped object that is an instance of the desired type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-396">The newly wrapped object that is an instance of the desired type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-397"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> Converte un tipo di classe, in genere la base `__ComObject` tipo, a un altro tipo di classe COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-397"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%2A> converts one COM class type, typically the base `__ComObject` type, to another COM class type.</span></span> <span data-ttu-id="138ef-398">L'oggetto COM di input, rappresentato dal parametro `o`, è una [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="138ef-398">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="138ef-399">Sia la `t` e `o` i parametri devono essere classi le cui firme sono attribuite con <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-399">Both the `t` and `o` parameters must be classes whose signatures are attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-400">Il [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) strumento applica questo attributo per l'utente quando si importa una libreria dei tipi.</span><span class="sxs-lookup"><span data-stu-id="138ef-400">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="138ef-401">Se si crea l'oggetto RCW manualmente nel codice sorgente, è necessario applicare questo attributo per la firma gestita che rappresenta la coclasse originale per indicarne le origini di COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-401">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="138ef-402">Tlbimp.exe importato COM [coclasse](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) come una classe gestita e un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-402">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="138ef-403">L'interfaccia (coclasse) ha lo stesso nome della coclasse originale e la classe gestita ha il nome della coclasse originale aggiunto con "Class".</span><span class="sxs-lookup"><span data-stu-id="138ef-403">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="138ef-404">Ad esempio, denominato una coclasse `MyCoclass` diventa un'interfaccia coclasse chiamata `MyCoclass` e una classe gestita denominata `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="138ef-404">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="138ef-405">Poiché `t` deve essere una classe, non un'interfaccia, assicurarsi di specificare la classe gestita (`MyCoclassClass`) e non l'interfaccia della coclasse.</span><span class="sxs-lookup"><span data-stu-id="138ef-405">Since `t` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the coclass interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-406">L'identità dell'input dell'oggetto COM perché esegue il wrapping di una nuova istanza di oggetto RCW viene persa la [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore esposti da RCW originale.</span><span class="sxs-lookup"><span data-stu-id="138ef-406">You lose the identity of the input COM object because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-407">
            <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-407">
              <paramref name="t" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="138ef-408">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-408">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-409">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-409">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-410">
            <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-410">
              <paramref name="o" /> cannot be converted to the destination type because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-411">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-411">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-412">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-412">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CreateWrapperOfType&lt;T,TWrapper&gt;">
      <MemberSignature Language="C#" Value="public static TWrapper CreateWrapperOfType&lt;T,TWrapper&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TWrapper CreateWrapperOfType&lt;T, TWrapper&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateWrapperOfType(Of T, TWrapper) (o As T) As TWrapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TWrapper&gt;&#xA; static TWrapper CreateWrapperOfType(T o);" />
      <MemberSignature Language="F#" Value="static member CreateWrapperOfType : 'T -&gt; 'Wrapper" Usage="System.Runtime.InteropServices.Marshal.CreateWrapperOfType o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TWrapper</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TWrapper" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-413">Tipo di oggetto di cui eseguire il wrapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-413">The type of object to wrap.</span>
          </span>
        </typeparam>
        <typeparam name="TWrapper">
          <span data-ttu-id="138ef-414">Tipo di oggetto da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-414">The type of object to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="138ef-415">The object to be wrapped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-415">The object to be wrapped.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-416">[Supported in the .NET Framework 4.5.1 and later versions]  Wraps the specified COM object in an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-416">[Supported in the .NET Framework 4.5.1 and later versions]  Wraps the specified COM object in an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-417">The newly wrapped object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-417">The newly wrapped object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-418"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> Converte un oggetto COM di tipo `T` per il `TWrapper` tipo di classe COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-418"><xref:System.Runtime.InteropServices.Marshal.CreateWrapperOfType%60%602%28%60%600%29> converts a COM object of type `T` to the `TWrapper` COM class type.</span></span> <span data-ttu-id="138ef-419">L'oggetto COM di input, rappresentato dal parametro `o`, è una [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span><span class="sxs-lookup"><span data-stu-id="138ef-419">The input COM object, represented by parameter `o`, is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW).</span></span>  
  
 <span data-ttu-id="138ef-420">Entrambi i `T` parametro di tipo generico e il `o` parametro deve essere classi le cui firme sono attribuite con il <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attributo.</span><span class="sxs-lookup"><span data-stu-id="138ef-420">Both the `T` generic type parameter and the `o` parameter must be classes whose signatures are attributed with the <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> attribute.</span></span> <span data-ttu-id="138ef-421">Il [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) strumento applica questo attributo per l'utente quando si importa una libreria dei tipi.</span><span class="sxs-lookup"><span data-stu-id="138ef-421">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span> <span data-ttu-id="138ef-422">Se si crea l'oggetto RCW manualmente nel codice sorgente, è necessario applicare questo attributo per la firma gestita che rappresenta la coclasse originale per indicarne le origini di COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-422">If you create the RCW manually in source code, you should apply this attribute to the managed signature that represents the original coclass to signify its COM origins.</span></span>  
  
 <span data-ttu-id="138ef-423">Tlbimp.exe importato COM [coclasse](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) come una classe gestita e un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-423">Tlbimp.exe imports a COM [coclass](http://msdn.microsoft.com/library/333d0904-ffa2-4d25-878d-7422bcd40582) as a managed class and an interface.</span></span> <span data-ttu-id="138ef-424">L'interfaccia (coclasse) ha lo stesso nome della coclasse originale e la classe gestita ha il nome della coclasse originale aggiunto con "Class".</span><span class="sxs-lookup"><span data-stu-id="138ef-424">The coclass interface has the same name as the original coclass, and the managed class has the original coclass name appended with "Class".</span></span> <span data-ttu-id="138ef-425">Ad esempio, denominato una coclasse `MyCoclass` diventa un'interfaccia coclasse chiamata `MyCoclass` e una classe gestita denominata `MyCoclassClass`.</span><span class="sxs-lookup"><span data-stu-id="138ef-425">For example, a coclass called `MyCoclass` becomes a coclass interface called `MyCoclass` and a managed class called `MyCoclassClass`.</span></span> <span data-ttu-id="138ef-426">In quanto`T` deve essere una classe, non un'interfaccia, assicurarsi di specificare la classe gestita (`MyCoclassClass`) e non il `coclass` interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-426">Because`T` must be a class, not an interface, be sure to specify the managed class (`MyCoclassClass`) and not the `coclass` interface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-427">Si perde l'identità dell'oggetto COM di input, esegue il wrapping di una nuova istanza di oggetto RCW il [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore esposti da RCW originale.</span><span class="sxs-lookup"><span data-stu-id="138ef-427">You lose the identity of the input COM object, because a new RCW instance wraps the [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) pointer exposed by the original RCW.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-428">
            <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-428">
              <typeparamref name="T" /> must derive from <see langword="__ComObject" />.</span>
          </span>
          <span data-ttu-id="138ef-429">-or-  <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-429">-or-  <typeparamref name="T" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-430">
            <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-430">
              <paramref name="o" /> cannot be converted to the <paramref name="TWrapper" /> because it does not support all required interfaces.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-431">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-431">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-432">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-432">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure">
      <MemberSignature Language="C#" Value="public static void DestroyStructure (IntPtr ptr, Type structuretype);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure(native int ptr, class System.Type structuretype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure (ptr As IntPtr, structuretype As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DestroyStructure(IntPtr ptr, Type ^ structuretype);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint * Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure (ptr, structuretype)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structuretype" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-433">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-433">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structuretype">
          <span data-ttu-id="138ef-434">Type of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-434">Type of a formatted class.</span>
          </span>
          <span data-ttu-id="138ef-435">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-435">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-436">Frees all substructures that the specified unmanaged memory block points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-436">Frees all substructures that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-437">È possibile utilizzare questo metodo per liberare i campi di tipo riferimento, ad esempio stringhe, di una struttura non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-437">You can use this method to free reference-type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="138ef-438">A differenza dei relativi campi di una struttura può essere un tipo di valore o un tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="138ef-438">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="138ef-439">Strutture di tipo di valore che contengono campi di tipo di valore (tutti i tipi copiabili) non sono disponibili riferimenti la cui memoria deve essere liberato.</span><span class="sxs-lookup"><span data-stu-id="138ef-439">Value-type structures that contain value-type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="138ef-440">Il <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> metodo Usa questo metodo per evitare perdite di memoria quando si riutilizzano memoria occupata da una struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-440">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="138ef-441"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> chiama il modello COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) (funzione), che a sua volta, libera una stringa allocata.</span><span class="sxs-lookup"><span data-stu-id="138ef-441"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 <span data-ttu-id="138ef-442">Oltre a <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, il <xref:System.Runtime.InteropServices.Marshal> classe fornisce due altri metodi di deallocazione della memoria: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> e <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-442">In addition to <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-443">
            <paramref name="structureType" /> has an automatic layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-443">
              <paramref name="structureType" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="138ef-444">Use sequential or explicit instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-444">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-445">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-445">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-446">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-446">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DestroyStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DestroyStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DestroyStructure(Of T) (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void DestroyStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member DestroyStructure : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.DestroyStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-447">Tipo della struttura formattata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-447">The type of the formatted structure.</span>
          </span>
          <span data-ttu-id="138ef-448">Fornisce le informazioni di layout necessarie per eliminare il buffer nel parametro <c>ptr</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-448">This provides the layout information necessary to delete the buffer in the <c>ptr</c> parameter.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="138ef-449">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-449">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-450">[Supported in the .NET Framework 4.5.1 and later versions]  Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-450">[Supported in the .NET Framework 4.5.1 and later versions]  Frees all substructures of a specified type that the specified unmanaged memory block points to.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-451">È possibile utilizzare questo metodo per liberare i campi di tipo riferimento, ad esempio stringhe, di una struttura non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-451">You can use this method to free reference type fields, such as strings, of an unmanaged structure.</span></span> <span data-ttu-id="138ef-452">A differenza dei relativi campi di una struttura può essere un tipo di valore o un tipo di riferimento.</span><span class="sxs-lookup"><span data-stu-id="138ef-452">Unlike its fields, a structure can be a value type or a reference type.</span></span> <span data-ttu-id="138ef-453">Strutture di tipi di valore che contengono campi di tipi di valore (tutti i tipi copiabili) non sono disponibili riferimenti la cui memoria deve essere liberato.</span><span class="sxs-lookup"><span data-stu-id="138ef-453">Value type structures that contain value type fields (all blittable) have no references whose memory must be freed.</span></span> <span data-ttu-id="138ef-454">Il <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> metodo Usa questo metodo per evitare perdite di memoria quando si riutilizzano memoria occupata da una struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-454">The <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A?displayProperty=nameWithType> method uses this method to prevent memory leaks when reusing memory occupied by a structure.</span></span>  
  
 <span data-ttu-id="138ef-455"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> chiama il modello COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) (funzione), che a sua volta, libera una stringa allocata.</span><span class="sxs-lookup"><span data-stu-id="138ef-455"><xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkId=148633) function, which, in turn, frees an allocated string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-456">
            <typeparamref name="T" /> has an automatic layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-456">
              <typeparamref name="T" /> has an automatic layout.</span>
          </span>
          <span data-ttu-id="138ef-457">Use sequential or explicit instead.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-457">Use sequential or explicit instead.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-458">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-458">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-459">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-459">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FinalReleaseComObject">
      <MemberSignature Language="C#" Value="public static int FinalReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FinalReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FinalReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int FinalReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member FinalReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.FinalReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-460">The RCW to be released.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-460">The RCW to be released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-461">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-461">Releases all references to a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) by setting its reference count to 0.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-462">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-462">The new value of the reference count of the RCW associated with the <paramref name="o" /> parameter, which is 0 (zero) if the release is successful.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-463">Il <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> metodo rilascia il riferimento gestito a un oggetto COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-463">The <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method releases the managed reference to a COM object.</span></span> <span data-ttu-id="138ef-464">Chiamare questo metodo è equivalente alla chiamata di <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> metodo in un ciclo fino a quando non viene restituito 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="138ef-464">Calling this method is equivalent to calling the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until it returns 0 (zero).</span></span>  
  
 <span data-ttu-id="138ef-465">Quando il conteggio dei riferimenti all'oggetto COM è 0, l'oggetto COM viene in genere liberata, anche se ciò dipende dall'implementazione dell'oggetto COM ed è sotto il controllo di runtime.</span><span class="sxs-lookup"><span data-stu-id="138ef-465">When the reference count on the COM object becomes 0, the COM object is usually freed, although this depends on the COM object's implementation and is beyond the control of the runtime.</span></span> <span data-ttu-id="138ef-466">Tuttavia, il RCW comunque può esistere, in attesa di essere sottoposto a garbage collection.</span><span class="sxs-lookup"><span data-stu-id="138ef-466">However, the RCW can still exist, waiting to be garbage-collected.</span></span>  
  
 <span data-ttu-id="138ef-467">Impossibile utilizzare l'oggetto COM dopo che è stato separato dalla relativa RCW sottostante.</span><span class="sxs-lookup"><span data-stu-id="138ef-467">The COM object cannot be used after it has been separated from its underlying RCW.</span></span> <span data-ttu-id="138ef-468">Se si prova a chiamare un metodo sul RCW dopo che il conteggio dei riferimenti 0, è diventato un <xref:System.Runtime.InteropServices.InvalidComObjectException> verrà generata.</span><span class="sxs-lookup"><span data-stu-id="138ef-468">If you try to call a method on the RCW after its reference count becomes 0, a <xref:System.Runtime.InteropServices.InvalidComObjectException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-469">
            <paramref name="o" /> is not a valid COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-469">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-470">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-470">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-471">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-471">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-472">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-472">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="FreeBSTR">
      <MemberSignature Language="C#" Value="public static void FreeBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeBSTR (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-473">The address of the BSTR to be freed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-473">The address of the BSTR to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-474">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-474">Frees a <see langword="BSTR" /> using the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-475">Ad esempio <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, è possibile utilizzare questo metodo per deallocare la memoria.</span><span class="sxs-lookup"><span data-stu-id="138ef-475">Like <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A?displayProperty=nameWithType>, you can use this method to deallocate memory.</span></span> <span data-ttu-id="138ef-476"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> chiama il modello COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) funzione, che libera la memoria allocata da uno qualsiasi dei seguenti metodi non gestiti: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span><span class="sxs-lookup"><span data-stu-id="138ef-476"><xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A> calls the COM [SysFreeString](http://go.microsoft.com/fwlink/?LinkID=148633) function, which frees memory allocated by any of the following unmanaged methods: `SysAllocString`, `SysAllocStringByteLen`, `SysAllocStringLen`, `SysReAllocString`, `SysReAllocStringLen`.</span></span> <span data-ttu-id="138ef-477">È possibile chiamare i metodi non gestiti, ad esempio questi dati con platform invoke.</span><span class="sxs-lookup"><span data-stu-id="138ef-477">You can call unmanaged methods such as these with platform invoke.</span></span> <span data-ttu-id="138ef-478">Per informazioni dettagliate, vedere [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-478">For details, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-479">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-479">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-480">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-480">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeCoTaskMem">
      <MemberSignature Language="C#" Value="public static void FreeCoTaskMem (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeCoTaskMem(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeCoTaskMem (ptr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeCoTaskMem(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member FreeCoTaskMem : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeCoTaskMem ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-481">The address of the memory to be freed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-481">The address of the memory to be freed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-482">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-482">Frees a block of memory allocated by the unmanaged COM task memory allocator.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-483">È possibile usare <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> per liberare la memoria allocata da <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, o un equivalente di metodo non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-483">You can use <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> to free any memory allocated by <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A>, or any equivalent unmanaged method.</span></span> <span data-ttu-id="138ef-484">Se il `ptr` parametro è `null`, il metodo non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="138ef-484">If the `ptr` parameter is `null`, the method does nothing.</span></span>  
  
 <span data-ttu-id="138ef-485"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> espone il modello COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) funzione, che libera tutti i byte in modo che non è possibile usare la memoria che il `ptr` punta il parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-485"><xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A> exposes the COM [CoTaskMemFree](http://go.microsoft.com/fwlink/?LinkId=148638) function, which frees all bytes so that you can no longer use the memory that the `ptr` parameter points to.</span></span>  
  
 <span data-ttu-id="138ef-486">Oltre a <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, il <xref:System.Runtime.InteropServices.Marshal> classe fornisce due altri metodi di deallocazione della memoria: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> e <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-486">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-487">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-487">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-488">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-488">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="FreeHGlobal">
      <MemberSignature Language="C#" Value="public static void FreeHGlobal (IntPtr hglobal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FreeHGlobal(native int hglobal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FreeHGlobal (hglobal As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FreeHGlobal(IntPtr hglobal);" />
      <MemberSignature Language="F#" Value="static member FreeHGlobal : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.FreeHGlobal hglobal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hglobal" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hglobal">
          <span data-ttu-id="138ef-489">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-489">The handle returned by the original matching call to <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-490">Frees memory previously allocated from the unmanaged memory of the process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-490">Frees memory previously allocated from the unmanaged memory of the process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-491">È possibile usare <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> memoria dall'heap globali allocata da liberare <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, o metodo dell'API non gestita alcun equivalente.</span><span class="sxs-lookup"><span data-stu-id="138ef-491">You can use <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> to free any memory from the global heap allocated by <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A>, <xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A>, or any equivalent unmanaged API method.</span></span> <span data-ttu-id="138ef-492">Se il `hglobal` parametro è <xref:System.IntPtr.Zero?displayProperty=nameWithType> il metodo non esegue alcuna operazione.</span><span class="sxs-lookup"><span data-stu-id="138ef-492">If the `hglobal` parameter is <xref:System.IntPtr.Zero?displayProperty=nameWithType> the method does nothing.</span></span>  
  
 <span data-ttu-id="138ef-493"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> espone le [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) funzione da Kernel32.DLL, che libera tutti i byte in modo che non è possibile usare la memoria a cui punta `hglobal`.</span><span class="sxs-lookup"><span data-stu-id="138ef-493"><xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> exposes the [LocalFree](http://go.microsoft.com/fwlink/?LinkId=148640) function from Kernel32.DLL, which frees all bytes so that you can no longer use the memory pointed to by `hglobal`.</span></span>  
  
 <span data-ttu-id="138ef-494">Oltre a <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, il <xref:System.Runtime.InteropServices.Marshal> classe fornisce due deallocazione della memoria metodi dell'API: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> e <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-494">In addition to <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>, the <xref:System.Runtime.InteropServices.Marshal> class provides two other memory-deallocation API methods: <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> and <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-495">Nel codice riportato di seguito viene illustrata la chiamata al metodo <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-495">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A> method.</span></span> <span data-ttu-id="138ef-496">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-496">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#4](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#4)]
 [!code-csharp[Marshal#4](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#4)]
 [!code-vb[Marshal#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#4)]  
  
 <span data-ttu-id="138ef-497">Nell'esempio seguente viene illustrato come convertire il contenuto di un oggetto gestito <xref:System.String> classe nella memoria non gestita e quindi eliminare la memoria non gestita al termine.</span><span class="sxs-lookup"><span data-stu-id="138ef-497">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-498">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-498">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-499">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-499">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateGuidForType">
      <MemberSignature Language="C#" Value="public static Guid GenerateGuidForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GenerateGuidForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateGuidForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GenerateGuidForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateGuidForType : Type -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GenerateGuidForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="138ef-500">The type to generate a GUID for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-500">The type to generate a GUID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-501">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-501">Returns the globally unique identifier (GUID) for the specified type, or generates a GUID using the algorithm used by the Type Library Exporter (Tlbexp.exe).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-502">An identifier for the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-502">An identifier for the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-503">Se il tipo ha un GUID nei metadati, viene restituito.</span><span class="sxs-lookup"><span data-stu-id="138ef-503">If the type has a GUID in the metadata, it is returned.</span></span> <span data-ttu-id="138ef-504">In caso contrario, viene generato automaticamente un GUID.</span><span class="sxs-lookup"><span data-stu-id="138ef-504">Otherwise, a GUID is automatically generated.</span></span> <span data-ttu-id="138ef-505">È possibile utilizzare questo metodo per determinare a livello di programmazione GUID COM per qualsiasi tipo gestito, inclusi i tipi invisibili a COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-505">You can use this method to programmatically determine the COM GUID for any managed type, including COM-invisible types.</span></span> <span data-ttu-id="138ef-506">Le interfacce delle classi sono l'unica eccezione, perché esse non corrispondono a un tipo gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-506">Class interfaces are the only exception because they do not correspond to a managed type.</span></span> <span data-ttu-id="138ef-507"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> fornisce la stessa funzionalità di <xref:System.Type.GUID%2A?displayProperty=nameWithType> proprietà.</span><span class="sxs-lookup"><span data-stu-id="138ef-507"><xref:System.Runtime.InteropServices.Marshal.GenerateGuidForType%2A> provides the same functionality as the <xref:System.Type.GUID%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-508">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-508">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-509">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-509">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="P:System.Type.GUID" />
      </Docs>
    </Member>
    <Member MemberName="GenerateProgIdForType">
      <MemberSignature Language="C#" Value="public static string GenerateProgIdForType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GenerateProgIdForType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GenerateProgIdForType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GenerateProgIdForType : Type -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GenerateProgIdForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="138ef-510">The type to get a ProgID for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-510">The type to get a ProgID for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-511">Returns a programmatic identifier (ProgID) for the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-511">Returns a programmatic identifier (ProgID) for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-512">The ProgID of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-512">The ProgID of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-513">Se il tipo ha un ProgID nei metadati, viene restituito tale valore ProgID.</span><span class="sxs-lookup"><span data-stu-id="138ef-513">If the type has a ProgID in the metadata, that ProgID is returned.</span></span> <span data-ttu-id="138ef-514">In caso contrario, viene generato un ProgID in base al nome completo del tipo.</span><span class="sxs-lookup"><span data-stu-id="138ef-514">Otherwise, a ProgID is generated based on the fully qualified name of the type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-515">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-515">The <paramref name="type" /> parameter is not a class that can be create by COM.</span>
          </span>
          <span data-ttu-id="138ef-516">The class must be public, have a public default constructor, and be COM visible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-516">The class must be public, have a public default constructor, and be COM visible.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-517">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-517">The <paramref name="type" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-518">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-518">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-519">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-519">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetActiveObject">
      <MemberSignature Language="C#" Value="public static object GetActiveObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetActiveObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetActiveObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetActiveObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="static member GetActiveObject : string -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetActiveObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="138ef-520">The programmatic identifier (ProgID) of the object that was requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-520">The programmatic identifier (ProgID) of the object that was requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-521">Obtains a running instance of the specified object from the running object table (ROT).</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-521">Obtains a running instance of the specified object from the running object table (ROT).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-522">The object that was requested; otherwise <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-522">The object that was requested; otherwise <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-523">You can cast this object to any COM interface that it supports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-523">You can cast this object to any COM interface that it supports.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-524"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> espone il modello COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) da OLEAUT32 (funzione). DLL. Tuttavia, quest'ultimo si aspetta un identificatore di classe (CLSID) anziché l'identificatore programmatico (`ProgID`) previsto da questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-524"><xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> exposes the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function from OLEAUT32.DLL; however, the latter expects a class identifier (CLSID) instead of the programmatic identifier (`ProgID`) expected by this method.</span></span> <span data-ttu-id="138ef-525">Per ottenere un'istanza in esecuzione di un oggetto COM senza un oggetto registrato `ProgID`, usare platform invoke per definire il modello COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) (funzione).</span><span class="sxs-lookup"><span data-stu-id="138ef-525">To obtain a running instance of a COM object without a registered `ProgID`, use platform invoke to define the COM [GetActiveObject](https://msdn.microsoft.com/library/ms221467\(v=vs.85\).aspx) function.</span></span> <span data-ttu-id="138ef-526">Per una descrizione di platform invoke, vedere [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-526">For a description of platform invoke, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
## <a name="progid-and-clsid"></a><span data-ttu-id="138ef-527">ProgID e CLSID</span><span class="sxs-lookup"><span data-stu-id="138ef-527">ProgID and CLSID</span></span>  
 <span data-ttu-id="138ef-528">Le chiavi nel sottoalbero HKEY_CLASSES_ROOT del Registro di sistema contengono una varietà di tipi della sottochiave.</span><span class="sxs-lookup"><span data-stu-id="138ef-528">Keys in the HKEY_CLASSES_ROOT subtree of the registry contain a variety of subkey types.</span></span> <span data-ttu-id="138ef-529">La maggior parte delle sottochiavi sono i ProgID, i quali eseguire il mapping di una semplice stringa di un CLSID.</span><span class="sxs-lookup"><span data-stu-id="138ef-529">Most of the subkeys are ProgIDs, which map a user-friendly string to a CLSID.</span></span> <span data-ttu-id="138ef-530">Le applicazioni usano spesso queste stringhe leggibile dall'utente anziché i CLSID numerici.</span><span class="sxs-lookup"><span data-stu-id="138ef-530">Applications often use these human-readable strings instead of the numeric CLSIDs.</span></span> <span data-ttu-id="138ef-531">Spesso, un componente ha un ProgID indipendenti dalla versione che viene eseguito il mapping alla versione più recente del componente a cui è installato nel sistema.</span><span class="sxs-lookup"><span data-stu-id="138ef-531">Often, a component has a version-independent ProgID that is mapped to the latest version of the component that is installed on the system.</span></span>  
  
 <span data-ttu-id="138ef-532">Le applicazioni e componenti usano principalmente i ProgID per recuperare i CLSID corrispondente.</span><span class="sxs-lookup"><span data-stu-id="138ef-532">Applications and components primarily use ProgIDs to retrieve their corresponding CLSIDs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-533">Nell'esempio seguente è stato eseguito in un computer in cui è stato configurato con un'istanza di Microsoft Word.</span><span class="sxs-lookup"><span data-stu-id="138ef-533">The following example was run on a computer that was configured with a running instance of Microsoft Word.</span></span> <span data-ttu-id="138ef-534">Si sono verificati Nessuna istanza di Microsoft Excel in esecuzione.</span><span class="sxs-lookup"><span data-stu-id="138ef-534">There were no instances of Microsoft Excel running.</span></span>  
  
 <span data-ttu-id="138ef-535">L'esempio chiama <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> due volte.</span><span class="sxs-lookup"><span data-stu-id="138ef-535">The example calls <xref:System.Runtime.InteropServices.Marshal.GetActiveObject%2A> twice.</span></span> <span data-ttu-id="138ef-536">La prima chiamata tenta di recuperare un riferimento a un'istanza di Microsoft Word (un'istanza di `Word.Application` oggetto).</span><span class="sxs-lookup"><span data-stu-id="138ef-536">The first call tries to retrieve a reference to an instance of Microsoft Word (an instance of the `Word.Application` object).</span></span> <span data-ttu-id="138ef-537">La seconda chiamata tenta di recuperare un riferimento a un'istanza di Microsoft Excel (un'istanza di un `Excel.Application` oggetto).</span><span class="sxs-lookup"><span data-stu-id="138ef-537">The second call tries to retrieve a reference to an instance of Microsoft Excel (an instance of an `Excel.Application` object).</span></span>  
  
 <span data-ttu-id="138ef-538">Il codice recupera un riferimento a un'istanza di Microsoft Word correttamente.</span><span class="sxs-lookup"><span data-stu-id="138ef-538">The code retrieves a reference to an instance of Microsoft Word successfully.</span></span> <span data-ttu-id="138ef-539">Tuttavia, perché Microsoft Excel non è in esecuzione, il tentativo di recuperare il secondo oggetto genera un <xref:System.Runtime.InteropServices.COMException>.</span><span class="sxs-lookup"><span data-stu-id="138ef-539">However, because Microsoft Excel is not running, the attempt to retrieve the second object raises a <xref:System.Runtime.InteropServices.COMException>.</span></span>  
  
 [!code-csharp[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/cs/marshal.getactiveobject.cs#1)]
 [!code-vb[System.Runtime.InteropServices.Marshal.GetActiveObject#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.marshal.getactiveobject/vb/marshal.getactiveobject.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="138ef-540">The object was not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-540">The object was not found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-541">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-541">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-542">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-542">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComInterfaceForObject">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-543">Returns an interface pointer that represents an interface for an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-543">Returns an interface pointer that represents an interface for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-544">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-544">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="138ef-545">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-545">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-546">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-546">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="138ef-547">Custom query interface access is enabled by default.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-547">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-548">The interface pointer that represents the specified interface for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-548">The interface pointer that represents the specified interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-549">Questo metodo restituisce un puntatore a interfaccia che rappresenta l'interfaccia richiesta sull'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-549">This method returns an interface pointer that represents the requested interface on the specified object.</span></span> <span data-ttu-id="138ef-550">È particolarmente utile se si dispone di un metodo non gestito che prevede che venga passato un puntatore a interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-550">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="138ef-551">La chiamata a un oggetto con questo metodo fa in modo che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-551">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-552">Usare sempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> da decrementare il conteggio dei riferimenti dopo aver completato con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-552">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="138ef-553">È necessario rispettare le regole definite dalle COM quando si usano puntatori a interfaccia COM non elaborati.</span><span class="sxs-lookup"><span data-stu-id="138ef-553">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="138ef-554"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> è utile quando si chiama un metodo che espone il parametro di un oggetto COM come un <xref:System.IntPtr> tipo, o con il marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-554"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="138ef-555">Anche se meno comune, è possibile utilizzare questo metodo su un oggetto gestito per ottenere un puntatore al wrapper chiamabile COM dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-555">Although less common, you can use this method on a managed object to obtain a pointer to the object's COM callable wrapper.</span></span> <span data-ttu-id="138ef-556">Ad esempio, è possibile usare <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> su un oggetto gestito che viene esportato in COM per ottenere un puntatore a interfaccia per <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-556">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-557">Poiché il tipo corrispondente per passare al secondo parametro non dispone di un'interfaccia di classe non è possibile ottenere un puntatore a un'interfaccia di classe (`t`).</span><span class="sxs-lookup"><span data-stu-id="138ef-557">You cannot obtain a pointer to a class interface since a class interface lacks the corresponding type to pass to the second parameter (`t`).</span></span> <span data-ttu-id="138ef-558">Usare invece <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> per richiamare i membri per l'interfaccia predefinita di COM callable wrapper, che è in genere un'interfaccia di classe auto-invio.</span><span class="sxs-lookup"><span data-stu-id="138ef-558">Instead, use <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to invoke the members on the default interface of the COM callable wrapper, which is usually an auto-dispatch class interface.</span></span>  
  
 <span data-ttu-id="138ef-559">Il <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload del metodo che consente la personalizzazione dell'interfaccia di query per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="138ef-559">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="138ef-560">Per specificare se applicare la personalizzazione dell'interfaccia di query, usare il <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-560">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="138ef-561">Per altre informazioni, vedere la [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), e [Introduzione all'interfaccia di classe](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) argomenti.</span><span class="sxs-lookup"><span data-stu-id="138ef-561">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-562">The <typeparamref name="T" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-562">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="138ef-563">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-563">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="138ef-564">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-564">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-565">The <paramref name="o" /> parameter does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-565">The <paramref name="o" /> parameter does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-566">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-566">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-567">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-567">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-568">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-568">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-569">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-569">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject (object o, Type T, System.Runtime.InteropServices.CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject(object o, class System.Type T, valuetype System.Runtime.InteropServices.CustomQueryInterfaceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type,System.Runtime.InteropServices.CustomQueryInterfaceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject (o As Object, T As Type, mode As CustomQueryInterfaceMode) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObject(System::Object ^ o, Type ^ T, System::Runtime::InteropServices::CustomQueryInterfaceMode mode);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : obj * Type * System.Runtime.InteropServices.CustomQueryInterfaceMode -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject (o, T, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="T" Type="System.Type" />
        <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-570">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-570">The object that provides the interface.</span>
          </span>
        </param>
        <param name="T">
          <span data-ttu-id="138ef-571">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-571">The type of interface that is requested.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="138ef-572">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-572">One of the enumeration values that indicates whether to apply an <see langword="IUnknown::QueryInterface" /> customization that is supplied by an <see cref="T:System.Runtime.InteropServices.ICustomQueryInterface" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-573">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-573">Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on the specified object.</span>
          </span>
          <span data-ttu-id="138ef-574">Custom query interface access is controlled by the specified customization mode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-574">Custom query interface access is controlled by the specified customization mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-575">The interface pointer that represents the interface for the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-575">The interface pointer that represents the interface for the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-576"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> Consente di specificare se applicare la personalizzazione dell'interfaccia di query.</span><span class="sxs-lookup"><span data-stu-id="138ef-576"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> lets you specify whether to apply query interface customization.</span></span> <span data-ttu-id="138ef-577">Usare il <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload per applicare la personalizzazione dell'interfaccia di query per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="138ef-577">Use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%29> overload to apply query interface customization by default.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-578">The <typeparamref name="T" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-578">The <typeparamref name="T" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="138ef-579">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-579">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="138ef-580">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-580">-or-  The <typeparamref name="T" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-581">The object <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-581">The object <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-582">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-582">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-583">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-583">-or-  The <typeparamref name="T" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-584">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-584">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-585">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-585">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObject&lt;T,TInterface&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObject&lt;T,TInterface&gt; (T o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObject&lt;T, TInterface&gt;(!!T o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject``2(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObject(Of T, TInterface) (o As T) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TInterface&gt;&#xA; static IntPtr GetComInterfaceForObject(T o);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObject : 'T -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TInterface" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="o" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-586">Il tipo della <c>o</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-586">The type of <c>o</c>.</span>
          </span>
        </typeparam>
        <typeparam name="TInterface">
          <span data-ttu-id="138ef-587">Tipo di interfaccia da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-587">The type of interface to return.</span>
          </span>
        </typeparam>
        <param name="o">
          <span data-ttu-id="138ef-588">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-588">The object that provides the interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-589">[Supported in the .NET Framework 4.5.1 and later versions]  Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-589">[Supported in the .NET Framework 4.5.1 and later versions]  Returns a pointer to an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface that represents the specified interface on an object of the specified type.</span>
          </span>
          <span data-ttu-id="138ef-590">Custom query interface access is enabled by default.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-590">Custom query interface access is enabled by default.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-591">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-591">The interface pointer that represents the <paramref name="TInterface" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-592">Questo metodo restituisce un puntatore a interfaccia che rappresenta il `TInterface` interfaccia sull'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-592">This method returns an interface pointer that represents the `TInterface` interface on the specified object.</span></span> <span data-ttu-id="138ef-593">È particolarmente utile se si dispone di un metodo non gestito che prevede che venga passato un puntatore a interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-593">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span> <span data-ttu-id="138ef-594">La chiamata a un oggetto con questo metodo fa in modo che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-594">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-595">Usare sempre la <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> metodo per decrementare il conteggio dei riferimenti al termine con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-595">Always use the <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> method to decrement the reference count when you have finished with the pointer.</span></span> <span data-ttu-id="138ef-596">È necessario rispettare le regole definite dalle COM quando si usano puntatori a interfaccia COM non elaborati.</span><span class="sxs-lookup"><span data-stu-id="138ef-596">You must adhere to the rules defined by COM when using raw COM interface pointers.</span></span>  
  
 <span data-ttu-id="138ef-597"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> è utile quando si chiama un metodo che espone il parametro di un oggetto COM come un <xref:System.IntPtr> tipo, o con il marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-597"><xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="138ef-598">È anche possibile usare questo metodo su un oggetto gestito per ottenere un puntatore a COM callable wrapper dell'oggetto, sebbene sia meno comune.</span><span class="sxs-lookup"><span data-stu-id="138ef-598">You can also use this method on a managed object to obtain a pointer to the object's COM callable wrapper, although this is less common.</span></span> <span data-ttu-id="138ef-599">Ad esempio, è possibile usare <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> su un oggetto gestito che viene esportato in COM per ottenere un puntatore a interfaccia per <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-599">For example, you can use <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> on a managed object that is exported to COM to obtain an interface pointer for <xref:System.Runtime.InteropServices.UCOMIConnectionPointContainer?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-600">Il <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> overload del metodo che consente la personalizzazione dell'interfaccia di query per impostazione predefinita.</span><span class="sxs-lookup"><span data-stu-id="138ef-600">The <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%60%602%28%60%600%29> method overload allows query interface customization by default.</span></span> <span data-ttu-id="138ef-601">Per specificare se applicare la personalizzazione dell'interfaccia di query, usare il <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-601">To specify whether to apply query interface customization, use the <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%28System.Object%2CSystem.Type%2CSystem.Runtime.InteropServices.CustomQueryInterfaceMode%29> method overload.</span></span>  
  
 <span data-ttu-id="138ef-602">Per altre informazioni, vedere la [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), e [Introduzione all'interfaccia di classe](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) argomenti.</span><span class="sxs-lookup"><span data-stu-id="138ef-602">For additional information, see the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md), [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), and [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-603">The <paramref name="TInterface" /> parameter is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-603">The <paramref name="TInterface" /> parameter is not an interface.</span>
          </span>
          <span data-ttu-id="138ef-604">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-604">-or-  The type is not visible to COM.</span>
          </span>
          <span data-ttu-id="138ef-605">-or-  The <typeparamref name="T" /> parameter is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-605">-or-  The <typeparamref name="T" /> parameter is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-606">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-606">The <paramref name="o" /> parameter does not support the <paramref name="TInterface" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-607">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-607">The <paramref name="o" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-608">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-608">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-609">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-609">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetComInterfaceForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetComInterfaceForObjectInContext (object o, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetComInterfaceForObjectInContext(object o, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComInterfaceForObjectInContext (o As Object, t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetComInterfaceForObjectInContext(System::Object ^ o, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetComInterfaceForObjectInContext : obj * Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext (o, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-610">The object that provides the interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-610">The object that provides the interface.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="138ef-611">The type of interface that is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-611">The type of interface that is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-612">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-612">Returns an interface pointer that represents the specified interface for an object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-613">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-613">The interface pointer specified by <paramref name="t" /> that represents the interface for the specified object, or <see langword="null" /> if the caller is not in the same context as the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-614">Questo metodo è identico <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> ad eccezione del fatto che venga restituito `null` se il chiamante non è presente nello stesso contesto dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-614">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span> <span data-ttu-id="138ef-615">È particolarmente utile se si dispone di un metodo non gestito che prevede che venga passato un puntatore a interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-615">It is particularly useful if you have an unmanaged method that expects to be passed an interface pointer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-616">
            <paramref name="t" /> is not an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-616">
              <paramref name="t" /> is not an interface.</span>
          </span>
          <span data-ttu-id="138ef-617">-or-  The type is not visible to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-617">-or-  The type is not visible to COM.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-618">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-618">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-619">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-619">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-620">-or-  <paramref name="t" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-620">-or-  <paramref name="t" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-621">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-621">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-622">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-622">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMIConnectionPointContainer" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComObjectData">
      <MemberSignature Language="C#" Value="public static object GetComObjectData (object obj, object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetComObjectData(object obj, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComObjectData (obj As Object, key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetComObjectData(System::Object ^ obj, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="static member GetComObjectData : obj * obj -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetComObjectData (obj, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="138ef-623">The COM object that contains the data that you want.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-623">The COM object that contains the data that you want.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="138ef-624">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-624">The key in the internal hash table of <c>obj</c> to retrieve the data from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-625">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-625">Retrieves data that is referenced by the specified key from the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-626">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-626">The data represented by the <paramref name="key" /> parameter in the internal hash table of the <paramref name="obj" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-627">Tutti gli oggetti COM di cui è stato eseguito il wrapping in un [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) dispongono di un hash associato di tabella, quale <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> recupera.</span><span class="sxs-lookup"><span data-stu-id="138ef-627">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) have an associated hash table, which <xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A> retrieves.</span></span> <span data-ttu-id="138ef-628"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> Aggiunge i dati alla tabella hash.</span><span class="sxs-lookup"><span data-stu-id="138ef-628"><xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A?displayProperty=nameWithType> adds data to the hash table.</span></span> <span data-ttu-id="138ef-629">Non si deve mai necessario chiamarli dal codice.</span><span class="sxs-lookup"><span data-stu-id="138ef-629">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-630">
            <paramref name="obj" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-630">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-631">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-631">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-632">
            <paramref name="obj" /> is not a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-632">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="138ef-633">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-633">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-634">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-634">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-635">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-635">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetComSlotForMethodInfo">
      <MemberSignature Language="C#" Value="public static int GetComSlotForMethodInfo (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetComSlotForMethodInfo(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComSlotForMethodInfo (m As MemberInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetComSlotForMethodInfo(System::Reflection::MemberInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member GetComSlotForMethodInfo : System.Reflection.MemberInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="138ef-636">An object that represents an interface method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-636">An object that represents an interface method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-637">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-637">Retrieves the virtual function table (v-table or VTBL) slot for a specified <see cref="T:System.Reflection.MemberInfo" /> type when that type is exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-638">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-638">The VTBL slot <paramref name="m" /> identifier when it is exposed to COM.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-639">Il numero di slot in base zero restituito da questo metodo tiene conto di tre [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) ed eventualmente di quattro [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) metodi, impostando su 3 il valore del primo slot disponibile o 7.</span><span class="sxs-lookup"><span data-stu-id="138ef-639">The zero-based slot number returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="138ef-640"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-640"><xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-641">È possibile utilizzare questo metodo per recuperare i numeri di slot per i membri delle interfacce che non sono visibili in COM e per i membri delle interfacce private.</span><span class="sxs-lookup"><span data-stu-id="138ef-641">You can use this method to retrieve slot numbers for members of interfaces that are not visible from COM and for members of private interfaces.</span></span> <span data-ttu-id="138ef-642">I numeri di slot restituiti corrispondono ai numeri di v-table che potrebbero essere riservati se il tipo è stato esposto a COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-642">The slot numbers returned correspond to the v-table numbers that would be reserved if the type was exposed to COM.</span></span> <span data-ttu-id="138ef-643">Membri invisibili a COM occupano effettivamente uno slot in una tabella di v esposto, anche se il client COM non è possibile usare lo slot.</span><span class="sxs-lookup"><span data-stu-id="138ef-643">COM-invisible members actually occupy a slot in an exposed v-table, even though the COM client cannot use the slot.</span></span> <span data-ttu-id="138ef-644">Non è possibile usare <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> su un'interfaccia di classe, passando <xref:System.Reflection.MemberInfo> da una classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-644">You cannot use <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A> on a class interface by passing <xref:System.Reflection.MemberInfo> from a class.</span></span> <span data-ttu-id="138ef-645">Per altre informazioni, vedere [Introduzione all'interfaccia di classe](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="138ef-645">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-646">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-646">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-647">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-647">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MemberInfo" /> object.</span>
          </span>
          <span data-ttu-id="138ef-648">-or-  The <paramref name="m" /> parameter is not an interface method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-648">-or-  The <paramref name="m" /> parameter is not an interface method.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-649">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-649">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-650">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-650">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Reflection.MemberInfo" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer">
      <MemberSignature Language="C#" Value="public static Delegate GetDelegateForFunctionPointer (IntPtr ptr, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate GetDelegateForFunctionPointer(native int ptr, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer (ptr As IntPtr, t As Type) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ GetDelegateForFunctionPointer(IntPtr ptr, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint * Type -&gt; Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer (ptr, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-651">The unmanaged function pointer to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-651">The unmanaged function pointer to be converted.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="138ef-652">The type of the delegate to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-652">The type of the delegate to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-653">Converts an unmanaged function pointer to a delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-653">Converts an unmanaged function pointer to a delegate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-654">A delegate instance that can be cast to the appropriate delegate type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-654">A delegate instance that can be cast to the appropriate delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-655">Nelle versioni 1.0 e 1.1 di .NET Framework, è possibile passare un delegato che rappresenta un metodo gestito a codice non gestito come un puntatore a funzione, che consente il codice non gestito chiamare il metodo gestito tramite il puntatore a funzione.</span><span class="sxs-lookup"><span data-stu-id="138ef-655">In versions 1.0 and 1.1 of the .NET Framework, it was possible to pass a delegate representing a managed method to unmanaged code as a function pointer, allowing the unmanaged code to call the managed method through the function pointer.</span></span> <span data-ttu-id="138ef-656">Era inoltre possibile che il codice non gestito passare il puntatore a funzione tornare al codice gestito e il puntatore è stato risolto in modo corretto nel metodo gestito sottostante.</span><span class="sxs-lookup"><span data-stu-id="138ef-656">It was also possible for the unmanaged code to pass that function pointer back to the managed code, and the pointer was resolved properly to the underlying managed method.</span></span>  
  
 <span data-ttu-id="138ef-657">In .NET Framework 2.0 e versioni successive, è possibile usare la <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> e <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> metodi per effettuare il marshalling di delegati in entrambe le direzioni.</span><span class="sxs-lookup"><span data-stu-id="138ef-657">In the .NET Framework 2.0 and later versions, you can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> methods to marshal delegates in both directions.</span></span> <span data-ttu-id="138ef-658">Con <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` viene importato come un <xref:System.IntPtr?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-658">With <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A>, `ptr` is imported as a <xref:System.IntPtr?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-659">Oggetto <xref:System.IntPtr?displayProperty=nameWithType> può essere ottenuto per un delegato gestito tramite una chiamata <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> e passato come parametro; può quindi essere chiamato all'interno del metodo non gestito da.</span><span class="sxs-lookup"><span data-stu-id="138ef-659">A <xref:System.IntPtr?displayProperty=nameWithType> can be obtained for a managed delegate by calling <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%2A> and passed as a parameter; it can then be called from inside the unmanaged method.</span></span> <span data-ttu-id="138ef-660">Si noti che il gestore di marshalling del parametro anche effettuare il marshalling di puntatori a funzione per i delegati in .NET Framework 2.0 e versioni successive.</span><span class="sxs-lookup"><span data-stu-id="138ef-660">Note that the parameter marshaler can also marshal function pointers to delegates in the .NET Framework 2.0 and later versions.</span></span>  
  
 <span data-ttu-id="138ef-661">Il <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> metodo presenta le restrizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="138ef-661">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%2A> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="138ef-662">Generics non supportati in scenari di interoperabilità.</span><span class="sxs-lookup"><span data-stu-id="138ef-662">Generics are not supported in interop scenarios.</span></span>  
  
-   <span data-ttu-id="138ef-663">È possibile passare un puntatore a funzione non valido per questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-663">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="138ef-664">È possibile usare questo metodo solo per i puntatori a funzione non gestita pure.</span><span class="sxs-lookup"><span data-stu-id="138ef-664">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="138ef-665">È possibile usare questo metodo con puntatori a funzione ottenuti mediante C++ o dal <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-665">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="138ef-666">È possibile utilizzare questo metodo per creare un delegato da un puntatore a funzione a un altro delegato gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-666">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-667">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-667">The <paramref name="t" /> parameter is not a delegate or is generic.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-668">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-668">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-669">-or-  The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-669">-or-  The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-670">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-670">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-671">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-671">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetDelegateForFunctionPointer&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TDelegate GetDelegateForFunctionPointer&lt;TDelegate&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDelegateForFunctionPointer(Of TDelegate) (ptr As IntPtr) As TDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static TDelegate GetDelegateForFunctionPointer(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member GetDelegateForFunctionPointer : nativeint -&gt; 'Delegate" Usage="System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TDelegate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="138ef-672">Tipo del delegato da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-672">The type of the delegate to return.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="138ef-673">The unmanaged function pointer to convert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-673">The unmanaged function pointer to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-674">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an unmanaged function pointer to a delegate of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-674">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an unmanaged function pointer to a delegate of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-675">A instance of the specified delegate type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-675">A instance of the specified delegate type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-676">È possibile usare la <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> e <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> metodi per effettuare il marshalling di delegati in entrambe le direzioni.</span><span class="sxs-lookup"><span data-stu-id="138ef-676">You can use the <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> and <xref:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate%60%601%28%60%600%29> methods to marshal delegates in both directions.</span></span>  
  
 <span data-ttu-id="138ef-677">Il <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> metodo presenta le restrizioni seguenti:</span><span class="sxs-lookup"><span data-stu-id="138ef-677">The <xref:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer%60%601%28System.IntPtr%29> method has the following restrictions:</span></span>  
  
-   <span data-ttu-id="138ef-678">È possibile passare un puntatore a funzione non valido per questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-678">You cannot pass an invalid function pointer to this method.</span></span>  
  
-   <span data-ttu-id="138ef-679">È possibile usare questo metodo solo per i puntatori a funzione non gestita pure.</span><span class="sxs-lookup"><span data-stu-id="138ef-679">You can use this method only for pure unmanaged function pointers.</span></span>  
  
-   <span data-ttu-id="138ef-680">È possibile usare questo metodo con puntatori a funzione ottenuti mediante C++ o dal <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-680">You cannot use this method with function pointers obtained through C++ or from the <xref:System.RuntimeMethodHandle.GetFunctionPointer%2A> method.</span></span>  
  
-   <span data-ttu-id="138ef-681">È possibile utilizzare questo metodo per creare un delegato da un puntatore a funzione a un altro delegato gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-681">You cannot use this method to create a delegate from a function pointer to another managed delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-682">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-682">The <paramref name="TDelegate" /> generic parameter is not a delegate, or it is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-683">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-683">The <paramref name="ptr" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-684">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-684">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-685">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-685">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetEndComSlot">
      <MemberSignature Language="C#" Value="public static int GetEndComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetEndComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEndComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetEndComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetEndComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetEndComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-686">A type that represents an interface or class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-686">A type that represents an interface or class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-687">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-687">Retrieves the last slot in the virtual function table (v-table or VTBL) of a type when exposed to COM.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-688">The last VTBL slot of the interface when exposed to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-688">The last VTBL slot of the interface when exposed to COM.</span>
          </span>
          <span data-ttu-id="138ef-689">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-689">If the <paramref name="t" /> parameter is a class, the returned VTBL slot is the last slot in the interface that is generated from the class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-690">Questo metodo restituisce il numero di v-table in base zero, per un'interfaccia o una classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-690">This method returns the zero-based, v-table number for an interface or a class.</span></span> <span data-ttu-id="138ef-691">Quando usato in una classe, il numero di slot restituito fa riferimento all'interfaccia di classe per la classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-691">When used on a class, the slot number returned refers to the class interface for the class.</span></span> <span data-ttu-id="138ef-692">Se l'interfaccia della classe è auto-dual, questo metodo restituisce sempre -1 per indicare che l'interfaccia solo dispatch non espone una tabella v ai client gestiti.</span><span class="sxs-lookup"><span data-stu-id="138ef-692">If the class interface is auto-dual, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="138ef-693">È possibile usare <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> e <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> unitamente <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> per passare gli slot in un intervallo specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-693">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="138ef-694">Per altre informazioni, vedere [Introduzione all'interfaccia di classe](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="138ef-694">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-695">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-695">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-696">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-696">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionCode">
      <MemberSignature Language="C#" Value="public static int GetExceptionCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetExceptionCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionCode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetExceptionCode();" />
      <MemberSignature Language="F#" Value="static member GetExceptionCode : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetExceptionCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-697">Retrieves a code that identifies the type of the exception that occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-697">Retrieves a code that identifies the type of the exception that occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-698">The type of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-698">The type of the exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-699"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> viene esposto per il supporto del compilatore di structured exception handling (SEH) solo.</span><span class="sxs-lookup"><span data-stu-id="138ef-699"><xref:System.Runtime.InteropServices.Marshal.GetExceptionCode%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span> <span data-ttu-id="138ef-700">Se questo metodo viene chiamato prima che venga generata un'eccezione, restituisce 0x0.</span><span class="sxs-lookup"><span data-stu-id="138ef-700">If this method is called before an exception is thrown, it returns 0x0.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-701">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-701">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-702">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-702">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-703">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-703">Converts an HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="138ef-704">The HRESULT to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-704">The HRESULT to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-705">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-705">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-706">An object that represents the converted HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-706">An object that represents the converted HRESULT.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-707">Usare la <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> metodo per ottenere un <xref:System.Exception> basato su un valore HRESULT senza la necessità di chiamare il <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> (metodo) e rilevare l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-707">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception.</span></span>  
  
 <span data-ttu-id="138ef-708">L'oggetto corrente [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interfaccia viene utilizzata per costruire l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-708">The current [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface is used to construct the exception.</span></span>  
  
 <span data-ttu-id="138ef-709">Per il mapping tra ogni oggetto HRESULT e la classe di eccezioni corrispondente in .NET Framework, vedere [procedura: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-709">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-710">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-710">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-711">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-711">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionForHR">
      <MemberSignature Language="C#" Value="public static Exception GetExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Exception GetExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionForHR (errorCode As Integer, errorInfo As IntPtr) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Exception ^ GetExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member GetExceptionForHR : int * nativeint -&gt; Exception" Usage="System.Runtime.InteropServices.Marshal.GetExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="138ef-712">The HRESULT to be converted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-712">The HRESULT to be converted.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="138ef-713">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-713">A pointer to the <see langword="IErrorInfo" /> interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="138ef-714">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-714">You can specify <c>IntPtr(0)</c> to use the current <see langword="IErrorInfo" /> interface, or <c>IntPtr(-1)</c> to ignore the current <see langword="IErrorInfo" /> interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-715">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-715">Converts the specified HRESULT error code to a corresponding <see cref="T:System.Exception" /> object, with additional error information passed in an [IErrorInfo](http://msdn.microsoft.com/library/4dda6909-2d9a-4727-ae0c-b5f90dcfa447) interface for the exception object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-716">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-716">An object that represents the converted HRESULT and information obtained from <paramref name="errorInfo" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-717">Usare la <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> metodo per ottenere un <xref:System.Exception> basato su un valore HRESULT senza la necessità di chiamare il <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> (metodo) e rilevare l'eccezione (evitando in tal modo il sovraccarico delle prestazioni corrispondente).</span><span class="sxs-lookup"><span data-stu-id="138ef-717">Use the <xref:System.Runtime.InteropServices.Marshal.GetExceptionForHR%2A> method to get an <xref:System.Exception> based on an HRESULT without having to call the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method and catch the exception (thus avoiding the corresponding performance overhead).</span></span> <span data-ttu-id="138ef-718">Il `errorInfo` parametro fornisce informazioni aggiuntive sull'errore, ad esempio la descrizione testuale e l'identificatore univoco globale (GUID) per l'interfaccia che definisce l'errore.</span><span class="sxs-lookup"><span data-stu-id="138ef-718">The `errorInfo` parameter supplies additional information about the error, such as its textual description and the globally unique identifier (GUID) for the interface that defined the error.</span></span>  
  
 <span data-ttu-id="138ef-719">Utilizzare questo overload del metodo se si dispone di informazioni personalizzate sugli errori che è necessario specificare durante la conversione.</span><span class="sxs-lookup"><span data-stu-id="138ef-719">Use this method overload if you have custom error information that you have to supply in the conversion.</span></span>  
  
 <span data-ttu-id="138ef-720">Per il mapping tra ogni oggetto HRESULT e la classe di eccezioni corrispondente in .NET Framework, vedere [procedura: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-720">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-721">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-721">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-722">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-722">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="Overload:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR" />
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPointers">
      <MemberSignature Language="C#" Value="public static IntPtr GetExceptionPointers ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetExceptionPointers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetExceptionPointers" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExceptionPointers () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetExceptionPointers();" />
      <MemberSignature Language="F#" Value="static member GetExceptionPointers : unit -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetExceptionPointers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-723">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-723">Retrieves a computer-independent description of an exception, and information about the state that existed for the thread when the exception occurred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-724">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-724">A pointer to an [EXCEPTION_POINTERS](http://go.microsoft.com/fwlink/?LinkId=148648) structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-725"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> viene esposto per il supporto del compilatore di structured exception handling (SEH) solo.</span><span class="sxs-lookup"><span data-stu-id="138ef-725"><xref:System.Runtime.InteropServices.Marshal.GetExceptionPointers%2A> is exposed for compiler support of structured exception handling (SEH) only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-726">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-726">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-727">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-727">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate (d As Delegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetFunctionPointerForDelegate(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d">
          <span data-ttu-id="138ef-728">The delegate to be passed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-728">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-729">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-729">Converts a delegate into a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-730">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-730">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-731">Il delegato `d` viene convertito in un puntatore a funzione che può essere passato a codice non gestito utilizzando il [stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) convenzione di chiamata.</span><span class="sxs-lookup"><span data-stu-id="138ef-731">The delegate `d` is converted to a function pointer that can be passed to unmanaged code using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="138ef-732">È necessario mantenere manualmente il delegato venga raccolto dal garbage collector dal codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-732">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="138ef-733">Il garbage collector non rileva i riferimenti a codice non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-733">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-734">The <paramref name="d" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-734">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-735">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-735">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-736">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-736">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-737">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-737">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFunctionPointerForDelegate&lt;TDelegate&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr GetFunctionPointerForDelegate&lt;TDelegate&gt; (TDelegate d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetFunctionPointerForDelegate&lt;TDelegate&gt;(!!TDelegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFunctionPointerForDelegate(Of TDelegate) (d As TDelegate) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDelegate&gt;&#xA; static IntPtr GetFunctionPointerForDelegate(TDelegate d);" />
      <MemberSignature Language="F#" Value="static member GetFunctionPointerForDelegate : 'Delegate -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDelegate" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="d" Type="TDelegate" />
      </Parameters>
      <Docs>
        <typeparam name="TDelegate">
          <span data-ttu-id="138ef-738">Tipo di delegato da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-738">The type of delegate to convert.</span>
          </span>
        </typeparam>
        <param name="d">
          <span data-ttu-id="138ef-739">The delegate to be passed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-739">The delegate to be passed to unmanaged code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-740">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-740">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a delegate of a specified type to a function pointer that is callable from unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-741">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-741">A value that can be passed to unmanaged code, which, in turn, can use it to call the underlying managed delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-742">Il delegato `d` viene convertito in un puntatore a funzione che può essere passato a codice non gestito da tramite il [stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) convenzione di chiamata.</span><span class="sxs-lookup"><span data-stu-id="138ef-742">The delegate `d` is converted to a function pointer that can be passed to unmanaged code by using the [__stdcall](http://msdn.microsoft.com/library/e212594b-1827-4d07-9527-7d412b300df8) calling convention.</span></span>  
  
 <span data-ttu-id="138ef-743">È necessario mantenere manualmente il delegato venga raccolto dal garbage collector dal codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-743">You must manually keep the delegate from being collected by the garbage collector from managed code.</span></span> <span data-ttu-id="138ef-744">Il garbage collector non rileva i riferimenti a codice non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-744">The garbage collector does not track references to unmanaged code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-745">The <paramref name="d" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-745">The <paramref name="d" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-746">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-746">The <paramref name="d" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-747">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-747">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-748">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-748">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHINSTANCE">
      <MemberSignature Language="C#" Value="public static IntPtr GetHINSTANCE (System.Reflection.Module m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHINSTANCE(class System.Reflection.Module m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHINSTANCE (m As Module) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHINSTANCE(System::Reflection::Module ^ m);" />
      <MemberSignature Language="F#" Value="static member GetHINSTANCE : System.Reflection.Module -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetHINSTANCE m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="138ef-749">The module whose HINSTANCE is desired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-749">The module whose HINSTANCE is desired.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-750">Returns the instance handle (HINSTANCE) for the specified module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-750">Returns the instance handle (HINSTANCE) for the specified module.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-751">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-751">The HINSTANCE for <paramref name="m" />; or -1 if the module does not have an HINSTANCE.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-752">Quando i moduli dinamici o in memoria, non è un oggetto HINSTANCE.</span><span class="sxs-lookup"><span data-stu-id="138ef-752">When dynamic or in-memory, modules do not have an HINSTANCE.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-753">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-753">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-754">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-754">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-755">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-755">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHRForException">
      <MemberSignature Language="C#" Value="public static int GetHRForException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForException (e As Exception) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="static member GetHRForException : Exception -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="138ef-756">The exception to convert to an HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-756">The exception to convert to an HRESULT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-757">Converts the specified exception to an HRESULT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-757">Converts the specified exception to an HRESULT.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-758">The HRESULT mapped to the supplied exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-758">The HRESULT mapped to the supplied exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-759"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> Configura anche un [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaccia per l'eccezione che può essere ottenuto chiamando la funzione GetErrorInfoNEEDGUID COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-759"><xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> also sets up an [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface for the exception that can be obtained by calling the COM GetErrorInfoNEEDGUID function.</span></span> <span data-ttu-id="138ef-760">È possibile utilizzare questa funzione per restituire un valore HRESULT sull'implementazione di un'interfaccia COM in cui si applica classe gestita il <xref:System.Runtime.InteropServices.PreserveSigAttribute> attributo.</span><span class="sxs-lookup"><span data-stu-id="138ef-760">You can use this function to return an HRESULT value on a managed class implementation of a COM interface where you apply the <xref:System.Runtime.InteropServices.PreserveSigAttribute> attribute.</span></span> <span data-ttu-id="138ef-761">Il metodo con attributi tutte le eccezioni e utilizzare il <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> per restituire il valore HRESULT appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-761">Have the attributed method catch all exceptions and use the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method to return the appropriate HRESULT value.</span></span> <span data-ttu-id="138ef-762">Consentendo un'eccezione di propagarsi all'esterno del metodo produce un comportamento non corretto.</span><span class="sxs-lookup"><span data-stu-id="138ef-762">Allowing an exception to propagate outside the method produces incorrect behavior.</span></span> <span data-ttu-id="138ef-763">(In effetti, common language runtime non riesce a passare un'eccezione a un client COM che chiama tale metodo tramite una tabella v-table.)</span><span class="sxs-lookup"><span data-stu-id="138ef-763">(In fact, the common language runtime fails to pass an exception to a COM client that calls such a method through a v-table.)</span></span>  
  
 <span data-ttu-id="138ef-764">Si noti che il <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> metodo imposta la [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaccia del thread corrente.</span><span class="sxs-lookup"><span data-stu-id="138ef-764">Note that the <xref:System.Runtime.InteropServices.Marshal.GetHRForException%2A> method sets the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread.</span></span> <span data-ttu-id="138ef-765">Ciò può causare risultati imprevisti, ad esempio i metodi di <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> metodi che per impostazione predefinita il [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) del thread corrente se è impostata.</span><span class="sxs-lookup"><span data-stu-id="138ef-765">This can cause unexpected results for methods like the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> methods that default to using the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) of the current thread if it is set.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-766">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-766">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-767">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-767">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.PreserveSigAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetHRForLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetHRForLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetHRForLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHRForLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetHRForLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetHRForLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-768">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-768">Returns the HRESULT corresponding to the last error incurred by Win32 code executed using <see cref="T:System.Runtime.InteropServices.Marshal" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-769">The HRESULT corresponding to the last Win32 error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-769">The HRESULT corresponding to the last Win32 error code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-770">La funzione di destinazione deve essere stato il `setLastError` set di flag di metadati.</span><span class="sxs-lookup"><span data-stu-id="138ef-770">The target function must have had the `setLastError` metadata flag set.</span></span> <span data-ttu-id="138ef-771">Ad esempio, il `SetLastError` campo le <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> deve essere `true`.</span><span class="sxs-lookup"><span data-stu-id="138ef-771">For example, the `SetLastError` field of the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> must be `true`.</span></span> <span data-ttu-id="138ef-772">Il processo di configurazione questo flag dipende dalla lingua di origine usata: c# e C++ vengono `false` per impostazione predefinita, ma la `Declare` istruzione inclusa in Visual Basic è `true`.</span><span class="sxs-lookup"><span data-stu-id="138ef-772">The process for setting this flag depends on the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-773">Nell'esempio seguente viene illustrato come recuperare un valore HRESULT corrispondente a un codice di errore Win32 usando il <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-773">The following example demonstrates how to retrieve an HRESULT corresponding to a Win32 error code using the <xref:System.Runtime.InteropServices.Marshal.GetHRForLastWin32Error%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetHRForLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetHRForLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-774">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-774">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-775">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-775">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-776">The object whose <see langword="IDispatch" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-776">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-777">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-777">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-778">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-778">The <see langword="IDispatch" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-779">Nel codice gestito, raramente si lavora direttamente con il `IDispatch` interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-779">In managed code, you seldom work directly with the `IDispatch` interface.</span></span> <span data-ttu-id="138ef-780">Tuttavia <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> risulta utile quando si chiama un metodo che espone il parametro di un oggetto COM come un <xref:System.IntPtr> tipo, o con il marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-780">However, <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="138ef-781">La chiamata a un oggetto con questo metodo fa in modo che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-781">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-782">Usare sempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> da decrementare il conteggio dei riferimenti dopo aver completato con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-782">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span>  
  
 <span data-ttu-id="138ef-783">È anche possibile usare questo metodo su un oggetto gestito per ottenere un puntatore a interfaccia a COM callable wrapper per l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-783">You can also use this method on a managed object to obtain an interface pointer to the COM callable wrapper for the object.</span></span> <span data-ttu-id="138ef-784">Per altre informazioni, vedere [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-784">For additional information, see [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-785">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-785">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-786">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-786">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-787">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-787">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetIDispatchForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIDispatchForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIDispatchForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIDispatchForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIDispatchForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIDispatchForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-788">The object whose <see langword="IDispatch" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-788">The object whose <see langword="IDispatch" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-789">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-789">Returns an [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) interface pointer from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-790">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-790">The <see langword="IDispatch" /> interface pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-791">Questo metodo è identico <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> ad eccezione del fatto che venga restituito `null` se il chiamante non è presente nello stesso contesto dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-791">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="138ef-792">
            <paramref name="o" /> does not support the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-792">
              <paramref name="o" /> does not support the requested interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-793">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-793">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-794">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-794">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-795">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-795">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetITypeInfoForType">
      <MemberSignature Language="C#" Value="public static IntPtr GetITypeInfoForType (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetITypeInfoForType(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetITypeInfoForType (t As Type) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetITypeInfoForType(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetITypeInfoForType : Type -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetITypeInfoForType t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-796">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-796">The type whose <see langword="ITypeInfo" /> interface is being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-797">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-797">Returns a <see cref="T:System.Runtime.InteropServices.ComTypes.ITypeInfo" /> interface from a managed type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-798">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-798">A pointer to the <see langword="ITypeInfo" /> interface for the <paramref name="t" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-799">Questo metodo restituisce un puntatore a un `ITypeInfo` implementazione basata sul tipo originale.</span><span class="sxs-lookup"><span data-stu-id="138ef-799">This method returns a pointer to an `ITypeInfo` implementation that is based on the original type.</span></span> <span data-ttu-id="138ef-800">La chiamata a un oggetto con <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> fa sì che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-800">Calling an object with <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-801">Usare sempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> da decrementare il conteggio dei riferimenti dopo aver completato con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-801">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="138ef-802">È possibile applicare il <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> per sostituire il comportamento di marshalling di interoperabilità standard con il gestore di marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-802">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-803">Nell'esempio seguente viene illustrato come recuperare un puntatore per il `ITypeInfo` interfaccia per un tipo usando il <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-803">The following example demonstrates how to retrieve a pointer to the `ITypeInfo` interface for a type using the <xref:System.Runtime.InteropServices.Marshal.GetITypeInfoForType%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetITypeInfoForType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetITypeInfoForType/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-804">
            <paramref name="t" /> is not a visible type to COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-804">
              <paramref name="t" /> is not a visible type to COM.</span>
          </span>
          <span data-ttu-id="138ef-805">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-805">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">
          <span data-ttu-id="138ef-806">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-806">A type library is registered for the assembly that contains the type, but the type definition cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-807">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-807">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-808">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-808">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObject">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObject (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObject : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-809">The object whose <see langword="IUnknown" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-809">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-810">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-810">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-811">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-811">The <see langword="IUnknown" /> pointer for the <paramref name="o" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-812">Nel codice gestito, raramente si lavora direttamente con il `IUnknown` interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-812">In managed code, you seldom work directly with the `IUnknown` interface.</span></span> <span data-ttu-id="138ef-813">Tuttavia <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> risulta utile quando si chiama un metodo che espone il parametro di un oggetto COM come un <xref:System.IntPtr> tipo, o con il marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-813">However, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> is useful when calling a method that exposes a COM object parameter as an <xref:System.IntPtr> type, or with custom marshaling.</span></span> <span data-ttu-id="138ef-814">La chiamata a un oggetto con questo metodo fa in modo che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-814">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-815">Usare sempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> da decrementare il conteggio dei riferimenti dopo aver completato con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-815">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="138ef-816">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-816">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="138ef-817">È anche possibile usare questo metodo su un oggetto gestito per ottenere un puntatore a interfaccia per il [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) per l'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-817">You can also use this method on a managed object to obtain an interface pointer to the [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md) for the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-818">Nell'esempio seguente viene illustrato come recuperare un [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interfaccia per un oggetto gestito usando la <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-818">The following example demonstrates how to retrieve an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-819">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-819">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-820">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-820">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetIUnknownForObjectInContext">
      <MemberSignature Language="C#" Value="public static IntPtr GetIUnknownForObjectInContext (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetIUnknownForObjectInContext(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIUnknownForObjectInContext (o As Object) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetIUnknownForObjectInContext(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetIUnknownForObjectInContext : obj -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-821">The object whose <see langword="IUnknown" /> interface is requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-821">The object whose <see langword="IUnknown" /> interface is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-822">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-822">Returns an [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface from a managed object, if the caller is in the same context as that object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-823">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-823">The <see langword="IUnknown" /> pointer for the specified object, or <see langword="null" /> if the caller is not in the same context as the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-824">Questo metodo è identico <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> ad eccezione del fatto che venga restituito `null` se il chiamante non è presente nello stesso contesto dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-824">This method is the same as <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> except that it returns `null` if the caller is not in the same context as the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-825">Nell'esempio seguente viene illustrato come recuperare un `IUnknown` interfaccia per un oggetto gestito usando la <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-825">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObjectInContext-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-826">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-826">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-827">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-827">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetLastWin32Error">
      <MemberSignature Language="C#" Value="public static int GetLastWin32Error ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetLastWin32Error() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLastWin32Error () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetLastWin32Error();" />
      <MemberSignature Language="F#" Value="static member GetLastWin32Error : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetLastWin32Error " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-828">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-828">Returns the error code returned by the last unmanaged function that was called using platform invoke that has the <see cref="F:System.Runtime.InteropServices.DllImportAttribute.SetLastError" /> flag set.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-829">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-829">The last error code set by a call to the Win32 [SetLastError](http://go.microsoft.com/fwlink/?LinkId=148656) function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-830"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> espone Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) funzione da Kernel32.DLL.</span><span class="sxs-lookup"><span data-stu-id="138ef-830"><xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> exposes the Win32 [GetLastError](http://go.microsoft.com/fwlink/?LinkId=148657) function from Kernel32.DLL.</span></span> <span data-ttu-id="138ef-831">Questo metodo è disponibile perché non è consigliabile effettuare una piattaforma direct chiamata invoke a `GetLastError` per ottenere queste informazioni.</span><span class="sxs-lookup"><span data-stu-id="138ef-831">This method exists because it is not safe to make a direct platform invoke call to `GetLastError` to obtain this information.</span></span> <span data-ttu-id="138ef-832">Se si desidera accedere a questo codice di errore, è necessario chiamare <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> invece di scrivere la propria definizione di platform invoke per `GetLastError` e chiamata.</span><span class="sxs-lookup"><span data-stu-id="138ef-832">If you want to access this error code, you must call <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> instead of writing your own platform invoke definition for `GetLastError` and calling it.</span></span> <span data-ttu-id="138ef-833">Common language runtime può effettuare chiamate interne per le API che sovrascrivono il `GetLastError` gestiti dal sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="138ef-833">The common language runtime can make internal calls to APIs that overwrite the `GetLastError` maintained by the operating system.</span></span>  
  
 <span data-ttu-id="138ef-834">È possibile usare questo metodo per ottenere i codici di errore solo se si applicano i <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> per la firma del metodo e impostare il <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> campo`true`.</span><span class="sxs-lookup"><span data-stu-id="138ef-834">You can use this method to obtain error codes only if you apply the <xref:System.Runtime.InteropServices.DllImportAttribute?displayProperty=nameWithType> to the method signature and set the <xref:System.Runtime.InteropServices.DllImportAttribute.SetLastError> field to`true`.</span></span> <span data-ttu-id="138ef-835">La procedura varia a seconda la lingua di origine utilizzata: c# e C++ vengono `false` per impostazione predefinita, ma la `Declare` istruzione inclusa in Visual Basic è `true`.</span><span class="sxs-lookup"><span data-stu-id="138ef-835">The process for this varies depending upon the source language used: C# and C++ are `false` by default, but the `Declare` statement in Visual Basic is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-836">Nel codice riportato di seguito viene illustrata la chiamata al metodo <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-836">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.GetLastWin32Error%2A> method.</span></span> <span data-ttu-id="138ef-837">Nell'esempio viene illustrato prima di chiamare il metodo senza errori presenti e quindi viene illustrata la chiamata al metodo con un errore presentano.</span><span class="sxs-lookup"><span data-stu-id="138ef-837">The example first demonstrates calling the method with no error present and then demonstrates calling the method with an error present.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetLastWin32Error#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetLastWin32Error/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-838">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-838">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-839">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-839">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.DllImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetManagedThunkForUnmanagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetManagedThunkForUnmanagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetManagedThunkForUnmanagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetManagedThunkForUnmanagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetManagedThunkForUnmanagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="138ef-840">A pointer to the method to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-840">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="138ef-841">A pointer to the method signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-841">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="138ef-842">The number of bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-842">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-843">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-843">Gets a pointer to a runtime-generated function that marshals a call from managed to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-844">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-844">A pointer to the function that will marshal a call from the <paramref name="pfnMethodToWrap" /> parameter to unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-845"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> viene esposto per il supporto del compilatore.</span><span class="sxs-lookup"><span data-stu-id="138ef-845"><xref:System.Runtime.InteropServices.Marshal.GetManagedThunkForUnmanagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-846">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-846">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-847">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-847">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodInfoForComSlot">
      <MemberSignature Language="C#" Value="public static System.Reflection.MemberInfo GetMethodInfoForComSlot (Type t, int slot, ref System.Runtime.InteropServices.ComMemberType memberType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MemberInfo GetMethodInfoForComSlot(class System.Type t, int32 slot, valuetype System.Runtime.InteropServices.ComMemberType&amp; memberType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodInfoForComSlot (t As Type, slot As Integer, ByRef memberType As ComMemberType) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::MemberInfo ^ GetMethodInfoForComSlot(Type ^ t, int slot, System::Runtime::InteropServices::ComMemberType % memberType);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfoForComSlot : Type * int *  -&gt; System.Reflection.MemberInfo" Usage="System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot (t, slot, memberType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="slot" Type="System.Int32" />
        <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-848">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-848">The type for which the <see cref="T:System.Reflection.MemberInfo" /> is to be retrieved.</span>
          </span>
        </param>
        <param name="slot">
          <span data-ttu-id="138ef-849">The VTBL slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-849">The VTBL slot.</span>
          </span>
        </param>
        <param name="memberType">
          <span data-ttu-id="138ef-850">On successful return, one of the enumeration values that specifies the type of the member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-850">On successful return, one of the enumeration values that specifies the type of the member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-851">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-851">Retrieves a <see cref="T:System.Reflection.MemberInfo" /> object for the specified virtual function table (v-table or VTBL) slot.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-852">The object that represents the member at the specified VTBL slot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-852">The object that represents the member at the specified VTBL slot.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-853">Il valore restituito può essere un' <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, o <xref:System.Reflection.PropertyInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-853">The return value may be a <xref:System.Reflection.FieldInfo>, <xref:System.Reflection.MethodInfo>, or <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="138ef-854">Il valore restituito dipende dal tipo di membro gestito esistente nello slot di COM specificato (di conseguenza il tipo restituito generalizzato <xref:System.Reflection.MemberInfo> dal quale derivano tutti i tre).</span><span class="sxs-lookup"><span data-stu-id="138ef-854">The return value depends on the type of managed member that exists in the given COM slot (hence the generalized return type <xref:System.Reflection.MemberInfo> from which all three derive).</span></span>  
  
 <span data-ttu-id="138ef-855">Il numero di slot in base zero che viene restituito da questo metodo tiene conto di tre [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) ed eventualmente di quattro [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) metodi, impostando su 3 il valore del primo slot disponibile o 7.</span><span class="sxs-lookup"><span data-stu-id="138ef-855">The zero-based slot number that is returned by this method accounts for three [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) and possibly four [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5) methods, making the value of the first available slot either 3 or 7.</span></span> <span data-ttu-id="138ef-856"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-856"><xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-857">È possibile usare <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> unitamente <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> per passare gli slot in un intervallo specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-857">You can use <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A> to pass slots within a specified range.</span></span>  
  
 <span data-ttu-id="138ef-858">Il `memberType` parametro è importante solo in caso di esito.</span><span class="sxs-lookup"><span data-stu-id="138ef-858">The `memberType` parameter is important only on return.</span></span> <span data-ttu-id="138ef-859">Contiene il tipo del membro COM (un metodo regolare o una funzione di accesso) che corrisponde all'oggetto restituito <xref:System.Reflection.MemberInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-859">It contains the type of the COM member (a regular method or a property accessor) that corresponds to the returned <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-860">
            <paramref name="t" /> is not visible from COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-860">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-861">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-861">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-862">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-862">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.ComMemberType" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject (object obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject(object obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject (obj As Object, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetNativeVariantForObject(System::Object ^ obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : obj * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="138ef-863">The object for which to get a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-863">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="138ef-864">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-864">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-865">Converts an object to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-865">Converts an object to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-866">Il `pDstNativeVariant` parametro deve puntare a una memoria sufficiente per archiviare la variante risulta.</span><span class="sxs-lookup"><span data-stu-id="138ef-866">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="138ef-867">Inoltre, l'implementazione di questo metodo chiama il [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) funzione nella memoria non elaborata che il `pDstNativeVariant` punta il parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-867">Also, the implementation of this method calls the [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-868">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-868">The <paramref name="obj" /> parameter is an instance of a generic type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-869">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-869">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-870">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-870">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetNativeVariantForObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void GetNativeVariantForObject&lt;T&gt; (T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetNativeVariantForObject&lt;T&gt;(!!T obj, native int pDstNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject``1(``0,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetNativeVariantForObject(Of T) (obj As T, pDstNativeVariant As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void GetNativeVariantForObject(T obj, IntPtr pDstNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetNativeVariantForObject : 'T * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetNativeVariantForObject (obj, pDstNativeVariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="T" />
        <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-871">Tipo dell'oggetto da convertire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-871">The type of the object to convert.</span>
          </span>
        </typeparam>
        <param name="obj">
          <span data-ttu-id="138ef-872">The object for which to get a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-872">The object for which to get a COM VARIANT.</span>
          </span>
        </param>
        <param name="pDstNativeVariant">
          <span data-ttu-id="138ef-873">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-873">A pointer to receive the VARIANT that corresponds to the <c>obj</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-874">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an object of a specified type to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-874">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an object of a specified type to a COM VARIANT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-875">Il `pDstNativeVariant` parametro deve puntare a una memoria sufficiente per archiviare la variante risulta.</span><span class="sxs-lookup"><span data-stu-id="138ef-875">The `pDstNativeVariant` parameter must point to sufficient memory to store the resulting VARIANT.</span></span> <span data-ttu-id="138ef-876">Inoltre, l'implementazione di questo metodo chiama [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) funzione nella memoria non elaborata che il `pDstNativeVariant` punta il parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-876">Also, the implementation of this method calls [VariantInit](https://msdn.microsoft.com/library/ms221402\(v=vs.85\).aspx) function on the raw memory that the `pDstNativeVariant` parameter points to.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-877">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-877">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-878">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-878">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetObjectForIUnknown (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForIUnknown(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForIUnknown (pUnk As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForIUnknown(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member GetObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForIUnknown pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="138ef-879">A pointer to the <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-879">A pointer to the <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-880">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-880">Returns an instance of a type that represents a COM object by a pointer to its [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-881">An object that represents the specified unmanaged COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-881">An object that represents the specified unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-882">Questo metodo esegue il wrapping `IUnknown` in un oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-882">This method wraps `IUnknown` in a managed object.</span></span> <span data-ttu-id="138ef-883">Questo ha l'effetto di incrementare il conteggio dei riferimenti del componente COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-883">This has the effect of incrementing the reference count of the COM component.</span></span> <span data-ttu-id="138ef-884">Il conteggio dei riferimenti saranno decrementato quando il runtime esegue garbage collection nell'oggetto gestito che rappresenta l'oggetto COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-884">The reference count will be decremented when the runtime performs garbage collection on the managed object that represents the COM object.</span></span>  
  
 <span data-ttu-id="138ef-885">Il `pUnk` parametro rappresenta un `IUnknown` puntatore a interfaccia; tuttavia, poiché tutte le interfacce COM derivano direttamente o indirettamente da `IUnknown`, è possibile passare qualsiasi interfaccia COM a questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-885">The `pUnk` parameter represents an `IUnknown` interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="138ef-886">L'oggetto restituito da <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> è un [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), che common language runtime gestisce perché esegue qualsiasi altro oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-886">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md), which the common language runtime manages as it does any other managed object.</span></span> <span data-ttu-id="138ef-887">Il tipo di questo wrapper è spesso una base `System.__ComObject` tipo, ovvero un tipo nascosto utilizzato quando il tipo di wrapper è ambiguo.</span><span class="sxs-lookup"><span data-stu-id="138ef-887">The type of this wrapper is often a base `System.__ComObject` type, which is a hidden type used when the wrapper type is ambiguous.</span></span> <span data-ttu-id="138ef-888">Si può comunque effettuare chiamate con associazione tardiva per questo tipo è un tipo di base, purché l'oggetto COM implementi il [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-888">You can still make late-bound calls to such a base type as long as the COM object implements the [IDispatch](https://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5(vs.85)) interface.</span></span> <span data-ttu-id="138ef-889">Allo stesso modo, è possibile eseguire il cast l'oggetto restituito a un'interfaccia COM appropriata.</span><span class="sxs-lookup"><span data-stu-id="138ef-889">Likewise, you can cast the returned object to an appropriate COM interface.</span></span>  
  
 <span data-ttu-id="138ef-890">Per un oggetto di cui eseguire il wrapping con un tipo classe gestito specifici (e non è un tipo di wrapper generica), è necessario soddisfare i requisiti seguenti:</span><span class="sxs-lookup"><span data-stu-id="138ef-890">For an object to be wrapped with a specific managed class type (and not a generic wrapper type), you must adhere to the following requirements:</span></span>  
  
-   <span data-ttu-id="138ef-891">Implementare il [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interfaccia per l'oggetto COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-891">Implement the [IProvideClassInfo](http://go.microsoft.com/fwlink/?LinkID=148012) interface for the COM object.</span></span>  
  
-   <span data-ttu-id="138ef-892">Registrare l'assembly che contiene con il [Regasm.exe (strumento di registrazione di Assembly)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-892">Register the containing assembly with the [Regasm.exe (Assembly Registration Tool)](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md).</span></span>  
  
 <span data-ttu-id="138ef-893">In alternativa, è possibile evitare questi requisiti e ottenere comunque un oggetto che viene eseguito il wrapping con un tipo classe gestito specifico usando la <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-893">Alternatively, you can avoid these requirements and still get an object that is wrapped with a specific managed class type by using the <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-894">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-894">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-895">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-895">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant">
      <MemberSignature Language="C#" Value="public static object GetObjectForNativeVariant (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObjectForNativeVariant(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant (pSrcNativeVariant As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="138ef-896">A pointer to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-896">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-897">Converts a COM VARIANT to an object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-897">Converts a COM VARIANT to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-898">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-898">An object that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-899"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> Restituisce un oggetto gestito che corrisponde a un puntatore non elaborato a un tipo di variante non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-899"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns a managed object that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="138ef-900">Il interopmarshaler esegue la trasformazione identica quando si espone un tipo di variante al codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-900">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="138ef-901"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-901"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-902">Quando il tipo di variante, VT_ERROR <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> restituisce un oggetto di tipo `Int32` invece di `UInt32`.</span><span class="sxs-lookup"><span data-stu-id="138ef-902">When the VARIANT type is VT_ERROR, <xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%2A> returns an object of type `Int32` instead of `UInt32`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="138ef-903">
            <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-903">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-904">
            <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-904">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-905">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-905">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-906">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-906">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject(System.Object,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectForNativeVariant&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetObjectForNativeVariant&lt;T&gt; (IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetObjectForNativeVariant&lt;T&gt;(native int pSrcNativeVariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectForNativeVariant(Of T) (pSrcNativeVariant As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T GetObjectForNativeVariant(IntPtr pSrcNativeVariant);" />
      <MemberSignature Language="F#" Value="static member GetObjectForNativeVariant : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant pSrcNativeVariant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-907">Tipo in cui convertire COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-907">The type to which to convert the COM VARIANT.</span>
          </span>
        </typeparam>
        <param name="pSrcNativeVariant">
          <span data-ttu-id="138ef-908">A pointer to a COM VARIANT.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-908">A pointer to a COM VARIANT.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-909">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a COM VARIANT to an object of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-909">[Supported in the .NET Framework 4.5.1 and later versions]  Converts a COM VARIANT to an object of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-910">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-910">An object of the specified type that corresponds to the <paramref name="pSrcNativeVariant" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-911"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> Restituisce un oggetto gestito di tipo `T` che corrisponde a un puntatore non elaborato a un tipo di variante non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-911"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> returns a managed object of type `T` that corresponds to a raw pointer to an unmanaged VARIANT type.</span></span> <span data-ttu-id="138ef-912">Il interopmarshaler esegue la trasformazione identica quando si espone un tipo di variante al codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-912">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span>  
  
 <span data-ttu-id="138ef-913"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span><span class="sxs-lookup"><span data-stu-id="138ef-913"><xref:System.Runtime.InteropServices.Marshal.GetObjectForNativeVariant%60%601%28System.IntPtr%29> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.GetNativeVariantForObject%60%601%28%60%600%2CSystem.IntPtr%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.InvalidOleVariantTypeException">
          <span data-ttu-id="138ef-914">
            <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-914">
              <paramref name="pSrcNativeVariant" /> is not a valid VARIANT type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-915">
            <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-915">
              <paramref name="pSrcNativeVariant" /> has an unsupported type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-916">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-916">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-917">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-917">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants">
      <MemberSignature Language="C#" Value="public static object[] GetObjectsForNativeVariants (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetObjectsForNativeVariants(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants (aSrcNativeVariant As IntPtr, cVars As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; obj[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="138ef-918">A pointer to the first element of an array of COM VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-918">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="138ef-919">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-919">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-920">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-920">Converts an array of COM [VARIANTs](http://go.microsoft.com/fwlink/?LinkId=148670) to an array of objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-921">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-921">An object array that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-922"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> Restituisce una matrice di oggetti gestiti che corrisponde a un puntatore non elaborato in una matrice di tipo C di tipi VARIANT non gestiti.</span><span class="sxs-lookup"><span data-stu-id="138ef-922"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%2A> returns an array of managed objects that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="138ef-923">Il interopmarshaler esegue la trasformazione identica quando si espone un tipo di variante al codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-923">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="138ef-924">Il metodo restituisce una matrice vuota quando le `cVars` parametro è 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-924">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="138ef-925">Matrice di oggetti (il valore restituito) Ottiene sottoposto a garbage collection come di consueto.</span><span class="sxs-lookup"><span data-stu-id="138ef-925">The object array (the return value) gets garbage collected as usual.</span></span> <span data-ttu-id="138ef-926">La matrice di input non gestita o singoli varianti nella matrice di input non vengono liberate.</span><span class="sxs-lookup"><span data-stu-id="138ef-926">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="138ef-927">Pertanto è responsabilità del cliente liberarle in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-927">Therefore it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-928">
            <paramref name="cVars" /> is a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-928">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-929">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-929">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-930">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-930">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectsForNativeVariants&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] GetObjectsForNativeVariants&lt;T&gt; (IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] GetObjectsForNativeVariants&lt;T&gt;(native int aSrcNativeVariant, int32 cVars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants``1(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectsForNativeVariants(Of T) (aSrcNativeVariant As IntPtr, cVars As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ GetObjectsForNativeVariants(IntPtr aSrcNativeVariant, int cVars);" />
      <MemberSignature Language="F#" Value="static member GetObjectsForNativeVariants : nativeint * int -&gt; 'T[]" Usage="System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants (aSrcNativeVariant, cVars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
        <Parameter Name="cVars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-931">Tipo della matrice da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-931">The type of the array to return.</span>
          </span>
        </typeparam>
        <param name="aSrcNativeVariant">
          <span data-ttu-id="138ef-932">A pointer to the first element of an array of COM VARIANTs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-932">A pointer to the first element of an array of COM VARIANTs.</span>
          </span>
        </param>
        <param name="cVars">
          <span data-ttu-id="138ef-933">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-933">The count of COM VARIANTs in <c>aSrcNativeVariant</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-934">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an array of COM VARIANTs to an array of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-934">[Supported in the .NET Framework 4.5.1 and later versions]  Converts an array of COM VARIANTs to an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-935">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-935">An array of <typeparamref name="T" /> objects that corresponds to <paramref name="aSrcNativeVariant" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> Restituisce una matrice di `T` che corrisponde a un puntatore non elaborato in una matrice di tipo C di tipi VARIANT non gestiti.</span><span class="sxs-lookup"><span data-stu-id="138ef-936"><xref:System.Runtime.InteropServices.Marshal.GetObjectsForNativeVariants%60%601%28System.IntPtr%2CSystem.Int32%29> returns an array of `T` that corresponds to a raw pointer to a C-style array of unmanaged VARIANT types.</span></span> <span data-ttu-id="138ef-937">Il interopmarshaler esegue la trasformazione identica quando si espone un tipo di variante al codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-937">The interopmarshaler performs the identical transformation when exposing a VARIANT type to managed code.</span></span> <span data-ttu-id="138ef-938">Il metodo restituisce una matrice vuota quando le `cVars` parametro è 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-938">The method returns an empty array when the `cVars` parameter is 0.</span></span>  
  
 <span data-ttu-id="138ef-939">La matrice restituita è sottoposto a garbage collection come di consueto.</span><span class="sxs-lookup"><span data-stu-id="138ef-939">The returned array is garbage-collected as usual.</span></span> <span data-ttu-id="138ef-940">La matrice di input non gestita o singoli varianti nella matrice di input non vengono liberate.</span><span class="sxs-lookup"><span data-stu-id="138ef-940">The unmanaged input array or individual VARIANTs in the input array are not freed.</span></span> <span data-ttu-id="138ef-941">Pertanto, è responsabilità del cliente liberarle in modo appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-941">Therefore, it is your responsibility to free them as appropriate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-942">
            <paramref name="cVars" /> is a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-942">
              <paramref name="cVars" /> is a negative number.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-943">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-943">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-944">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-944">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetStartComSlot">
      <MemberSignature Language="C#" Value="public static int GetStartComSlot (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetStartComSlot(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetStartComSlot(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStartComSlot (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetStartComSlot(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetStartComSlot : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetStartComSlot t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-945">A type that represents an interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-945">A type that represents an interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-946">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-946">Gets the first slot in the virtual function table (v-table or VTBL) that contains user-defined methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-947">The first VTBL slot that contains user-defined methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-947">The first VTBL slot that contains user-defined methods.</span>
          </span>
          <span data-ttu-id="138ef-948">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-948">The first slot is 3 if the interface is based on [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003), and 7 if the interface is based on [IDispatch](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-949">Questo metodo restituisce il numero di v-table in base zero di un'interfaccia o una classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-949">This method returns the zero-based v-table number for an interface or a class.</span></span> <span data-ttu-id="138ef-950">Quando usato in una classe, il numero di slot restituito fa riferimento all'interfaccia di classe per la classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-950">When used on a class, the slot number that is returned refers to the class interface for the class.</span></span> <span data-ttu-id="138ef-951">Se l'interfaccia della classe è auto-invio, questo metodo restituisce sempre -1 per indicare che l'interfaccia solo dispatch non espone una tabella v ai client gestiti.</span><span class="sxs-lookup"><span data-stu-id="138ef-951">If the class interface is auto-dispatch, this method always returns -1 to indicate that the dispatch-only interface does not expose a v-table to managed clients.</span></span> <span data-ttu-id="138ef-952">È possibile usare <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> e <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> unitamente <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> per passare gli slot in un intervallo specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-952">You can use <xref:System.Runtime.InteropServices.Marshal.GetStartComSlot%2A> and <xref:System.Runtime.InteropServices.Marshal.GetEndComSlot%2A?displayProperty=nameWithType> in conjunction with <xref:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot%2A?displayProperty=nameWithType> to pass slots within a specified range.</span></span> <span data-ttu-id="138ef-953">Per altre informazioni, vedere [Introduzione all'interfaccia di classe](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span><span class="sxs-lookup"><span data-stu-id="138ef-953">For additional information, see [Introducing the Class Interface](http://msdn.microsoft.com/library/733c0dd2-12e5-46e6-8de1-39d5b25df024).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-954">
            <paramref name="t" /> is not visible from COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-954">
              <paramref name="t" /> is not visible from COM.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-955">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-955">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-956">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-956">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetEndComSlot(System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetMethodInfoForComSlot(System.Type,System.Int32,System.Runtime.InteropServices.ComMemberType@)" />
      </Docs>
    </Member>
    <Member MemberName="GetThreadFromFiberCookie">
      <MemberSignature Language="C#" Value="public static System.Threading.Thread GetThreadFromFiberCookie (int cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Thread GetThreadFromFiberCookie(int32 cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetThreadFromFiberCookie (cookie As Integer) As Thread" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Thread ^ GetThreadFromFiberCookie(int cookie);" />
      <MemberSignature Language="F#" Value="static member GetThreadFromFiberCookie : int -&gt; System.Threading.Thread" Usage="System.Runtime.InteropServices.Marshal.GetThreadFromFiberCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Thread</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cookie">
          <span data-ttu-id="138ef-957">An integer that represents a fiber cookie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-957">An integer that represents a fiber cookie.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-958">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-958">Converts a fiber cookie into the corresponding <see cref="T:System.Threading.Thread" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-959">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-959">A thread that corresponds to the <paramref name="cookie" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-960">Fiber cookie sono opachi token utilizzati dall'host durante la segnalazione di common language runtime per le decisioni di pianificazione fiber.</span><span class="sxs-lookup"><span data-stu-id="138ef-960">Fiber cookies are opaque tokens that are used by the host when alerting the common language runtime to its fiber-scheduling decisions.</span></span> <span data-ttu-id="138ef-961">Sono costituiti da uno stack e registrare contesto.</span><span class="sxs-lookup"><span data-stu-id="138ef-961">They consist of a stack and register context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-962">The <paramref name="cookie" /> parameter is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-962">The <paramref name="cookie" /> parameter is 0.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-963">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-963">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-964">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-964">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName="GetTypedObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetTypedObjectForIUnknown (IntPtr pUnk, Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetTypedObjectForIUnknown(native int pUnk, class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypedObjectForIUnknown (pUnk As IntPtr, t As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetTypedObjectForIUnknown(IntPtr pUnk, Type ^ t);" />
      <MemberSignature Language="F#" Value="static member GetTypedObjectForIUnknown : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown (pUnk, t)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="138ef-965">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-965">A pointer to the <see langword="IUnknown" /> interface of the unmanaged object.</span>
          </span>
        </param>
        <param name="t">
          <span data-ttu-id="138ef-966">The type of the requested managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-966">The type of the requested managed class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-967">Returns a managed object of a specified type that represents a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-967">Returns a managed object of a specified type that represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-968">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-968">An instance of the class corresponding to the <see cref="T:System.Type" /> object that represents the requested unmanaged COM object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-969">Il `t` parametro deve essere un tipo di importazione COM o un sottotipo di un tipo importato da COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-969">The `t` parameter must be either a COM-imported type or a subtype of a COM-imported type.</span></span> <span data-ttu-id="138ef-970">È inoltre `t` deve essere un tipo i cui metadati sono stati importati dal [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) dello strumento.</span><span class="sxs-lookup"><span data-stu-id="138ef-970">In addition, `t` must be a type whose metadata was imported by the [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool.</span></span> <span data-ttu-id="138ef-971">Questo tipo deve essere una classe e non un'interfaccia, coclasse associato che trasporta il nome della classe COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-971">This type must be a class and not an associated coclass interface, which carries the name of the COM class.</span></span> <span data-ttu-id="138ef-972">Se, ad esempio, Importa Tlbimp.exe `Myclass` come una classe denominata `MyclassClass` e come un'interfaccia (coclasse) denominata `Myclass`, è necessario utilizzare `MyclassClass` (non `Myclass`) con questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-972">For example, if Tlbimp.exe imports `Myclass` as a class called `MyclassClass` and as a coclass interface called `Myclass`, you must use `MyclassClass` (not `Myclass`) with this method.</span></span> <span data-ttu-id="138ef-973">Per altre informazioni sulle classi importate e le interfacce (coclasse), vedere [conversione di tipi importati](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span><span class="sxs-lookup"><span data-stu-id="138ef-973">For additional information about imported classes and coclass interfaces, see [Imported Type Conversion](http://msdn.microsoft.com/library/cb1ee67d-8ef0-4e40-b2a5-13714b9f33c3).</span></span>  
  
 <span data-ttu-id="138ef-974">Se ha già ottenuto un oggetto per il `pUnk` parametro, `t` viene ignorato e viene restituito l'oggetto esistente.</span><span class="sxs-lookup"><span data-stu-id="138ef-974">If an object has already been obtained for the `pUnk` parameter, `t` is ignored and the existing object is returned.</span></span> <span data-ttu-id="138ef-975">`pUnk` rappresenta un'[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore a interfaccia; tuttavia, poiché tutte le interfacce COM derivano direttamente o indirettamente da `IUnknown`, è possibile passare qualsiasi interfaccia COM a questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-975">`pUnk` represents an[IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer; however, because all COM interfaces derive directly or indirectly from `IUnknown`, you can pass any COM interface to this method.</span></span> <span data-ttu-id="138ef-976">L'oggetto restituito da <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> è un [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), che common language runtime gestisce perché esegue qualsiasi altro oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-976">The object returned by <xref:System.Runtime.InteropServices.Marshal.GetTypedObjectForIUnknown%2A> is a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW), which the common language runtime manages as it does any other managed object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-977">
            <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-977">
              <paramref name="t" /> is not attributed with <see cref="T:System.Runtime.InteropServices.ComImportAttribute" />.</span>
          </span>
          <span data-ttu-id="138ef-978">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-978">-or-  <paramref name="t" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-979">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-979">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-980">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-980">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeForITypeInfo">
      <MemberSignature Language="C#" Value="public static Type GetTypeForITypeInfo (IntPtr piTypeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeForITypeInfo(native int piTypeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeForITypeInfo (piTypeInfo As IntPtr) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeForITypeInfo(IntPtr piTypeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeForITypeInfo : nativeint -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo piTypeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piTypeInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="piTypeInfo">
          <span data-ttu-id="138ef-981">The <see langword="ITypeInfo" /> interface to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-981">The <see langword="ITypeInfo" /> interface to marshal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-982">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-982">Converts an unmanaged [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object into a managed <see cref="T:System.Type" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-983">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-983">A managed type that represents the unmanaged <see langword="ITypeInfo" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-984"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> Restituisce un <xref:System.Type?displayProperty=nameWithType> istanza che si basa sul tipo originale.</span><span class="sxs-lookup"><span data-stu-id="138ef-984"><xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> returns a <xref:System.Type?displayProperty=nameWithType> instance that is based on the original type.</span></span> <span data-ttu-id="138ef-985">È possibile applicare il <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> per sostituire il comportamento di marshalling di interoperabilità standard con il gestore di marshalling personalizzato.</span><span class="sxs-lookup"><span data-stu-id="138ef-985">You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute?displayProperty=nameWithType> to replace standard interop marshaling behavior with this custom marshaler.</span></span> <span data-ttu-id="138ef-986">Il [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) utilizzato dallo strumento Gestore di marshalling personalizzato per tradurre `ITypeInfo` parametri <xref:System.Type?displayProperty=nameWithType> parametri.</span><span class="sxs-lookup"><span data-stu-id="138ef-986">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool uses the custom marshaler to translate `ITypeInfo` parameters to <xref:System.Type?displayProperty=nameWithType> parameters.</span></span> <span data-ttu-id="138ef-987">Tuttavia, se si ottiene un' `ITypeInfo` grazie all'interfaccia da alcuni, diverso da Tlbimp.exe, è possibile usare <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> eseguire manualmente la stessa conversione.</span><span class="sxs-lookup"><span data-stu-id="138ef-987">However, if you obtain an `ITypeInfo` interface by some means other than Tlbimp.exe, you can use <xref:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo%2A> to manually perform the same translation.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-988">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-988">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-989">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-989">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetITypeInfoForType(System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.MarshalAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromCLSID">
      <MemberSignature Language="C#" Value="public static Type GetTypeFromCLSID (Guid clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetTypeFromCLSID(valuetype System.Guid clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeFromCLSID(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeFromCLSID (clsid As Guid) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetTypeFromCLSID(Guid clsid);" />
      <MemberSignature Language="F#" Value="static member GetTypeFromCLSID : Guid -&gt; Type" Usage="System.Runtime.InteropServices.Marshal.GetTypeFromCLSID clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="138ef-990">The CLSID of the type to return.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-990">The CLSID of the type to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-991">Returns the type associated with the specified class identifier (CLSID).</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-991">Returns the type associated with the specified class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-992">
            <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-992">
              <see langword="System.__ComObject" /> regardless of whether the CLSID is valid.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeInfoName">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-993">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-993">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.ComTypes.ITypeInfo typeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (typeInfo As ITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::ComTypes::ITypeInfo ^ typeInfo);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.ComTypes.ITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName typeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
      </Parameters>
      <Docs>
        <param name="typeInfo">
          <span data-ttu-id="138ef-994">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-994">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-995">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-995">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-996">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-996">The name of the type that the <paramref name="typeInfo" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-997">È anche possibile recuperare il nome del tipo rappresentato da un `ITypeInfo` chiamando il <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> metodo e il passaggio di -1 per il primo parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-997">You can also retrieve the name of the type represented by an `ITypeInfo` by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-998">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-998">The <paramref name="typeInfo" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-999">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-999">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1000">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1000">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoName">
      <MemberSignature Language="C#" Value="public static string GetTypeInfoName (System.Runtime.InteropServices.UCOMITypeInfo pTI);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeInfoName(class System.Runtime.InteropServices.UCOMITypeInfo pTI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeInfoName (pTI As UCOMITypeInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeInfoName(System::Runtime::InteropServices::UCOMITypeInfo ^ pTI);" />
      <MemberSignature Language="F#" Value="static member GetTypeInfoName : System.Runtime.InteropServices.UCOMITypeInfo -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeInfoName pTI" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
      </Parameters>
      <Docs>
        <param name="pTI">
          <span data-ttu-id="138ef-1001">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1001">An object that represents an <see langword="ITypeInfo" /> pointer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1002">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1002">Retrieves the name of the type represented by an [ITypeInfo](http://msdn.microsoft.com/library/f3356463-3373-4279-bae1-953378aa2680) object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1003">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1003">The name of the type that the <paramref name="pTI" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1004">È anche possibile recuperare il nome del tipo rappresentato da un `ITypeInfo` chiamando il <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> metodo e il passaggio di -1 per il primo parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-1004">You can also retrieve the name of the type represented by an `ITypeInfo` object by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1005">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1005">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1006">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1006">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibGuid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1007">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1007">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (typelib As ITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="138ef-1008">The type library whose LIBID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1008">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1009">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1009">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1010">The LIBID of the specified type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1010">The LIBID of the specified type library.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> estrae il LIBID direttamente da una libreria dei tipi esistente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1011"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="138ef-1012">Questa azione è diverso da quello di <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> metodo, che consente di calcolare quali devono essere LIBID in base all'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1012">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="138ef-1013">Per altre informazioni sugli identificatori di libreria, vedere [conversione degli Assembly esportati](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="138ef-1013">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1014">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1014">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1015">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1015">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuid">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuid (pTLB As UCOMITypeLib) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuid : System.Runtime.InteropServices.UCOMITypeLib -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="138ef-1016">The type library whose LIBID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1016">The type library whose LIBID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1017">Retrieves the library identifier (LIBID) of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1017">Retrieves the library identifier (LIBID) of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1018">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1018">The LIBID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1019"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> estrae il LIBID direttamente da una libreria dei tipi esistente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1019"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> extracts the LIBID directly from an existing type library.</span></span> <span data-ttu-id="138ef-1020">Questa azione è diverso da quello di <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> metodo, che consente di calcolare quali devono essere LIBID in base all'assembly corrente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1020">This action differs from that of the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A?displayProperty=nameWithType> method, which calculates what the LIBID should be based on the current assembly.</span></span>  
  
 <span data-ttu-id="138ef-1021">Per altre informazioni sugli identificatori di libreria, vedere [conversione degli Assembly esportati](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span><span class="sxs-lookup"><span data-stu-id="138ef-1021">For more information about library identifiers, see [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1022">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1022">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1023">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1023">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
        <altmember cref="T:System.Runtime.InteropServices.UCOMITypeLib" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibGuidForAssembly">
      <MemberSignature Language="C#" Value="public static Guid GetTypeLibGuidForAssembly (System.Reflection.Assembly asm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetTypeLibGuidForAssembly(class System.Reflection.Assembly asm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibGuidForAssembly (asm As Assembly) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid GetTypeLibGuidForAssembly(System::Reflection::Assembly ^ asm);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibGuidForAssembly : System.Reflection.Assembly -&gt; Guid" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly asm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asm" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="asm">
          <span data-ttu-id="138ef-1024">The assembly from which the type library was exported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1024">The assembly from which the type library was exported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1025">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1025">Retrieves the library identifier (LIBID) that is assigned to a type library when it was exported from the specified assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1026">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1026">The LIBID that is assigned to a type library when it is exported from the specified assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1027">Quando vengono esportati gli assembly di librerie dei tipi, la libreria dei tipi viene assegnata un LIBID.</span><span class="sxs-lookup"><span data-stu-id="138ef-1027">When assemblies are exported to type libraries, the type library is assigned a LIBID.</span></span> <span data-ttu-id="138ef-1028">È possibile impostare LIBID in modo esplicito applicando il <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> di assembly a livello oppure può essere generato automaticamente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1028">You can set the LIBID explicitly by applying the <xref:System.Runtime.InteropServices.GuidAttribute?displayProperty=nameWithType> at the assembly level, or it can be generated automatically.</span></span> <span data-ttu-id="138ef-1029">Il [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) lo strumento calcola un valore LIBID basato sull'identità dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="138ef-1029">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool calculates a LIBID value based on the identity of the assembly.</span></span> <span data-ttu-id="138ef-1030"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> Restituisce il LIBID che viene associato il <xref:System.Runtime.InteropServices.GuidAttribute>, se l'attributo viene applicato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1030"><xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> returns the LIBID that is associated with the <xref:System.Runtime.InteropServices.GuidAttribute>, if the attribute is applied.</span></span> <span data-ttu-id="138ef-1031">In caso contrario, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> restituisce il valore calcolato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1031">Otherwise, <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly%2A> returns the calculated value.</span></span> <span data-ttu-id="138ef-1032">In alternativa, è possibile usare il <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> metodo per estrarre il LIBID effettivo da una libreria dei tipi esistente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1032">Alternatively, you can use the <xref:System.Runtime.InteropServices.Marshal.GetTypeLibGuid%2A> method to extract the actual LIBID from an existing type library.</span></span>  
  
 <span data-ttu-id="138ef-1033">Vedere le [conversione degli Assembly esportati](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) argomento per altre informazioni sugli identificatori di libreria.</span><span class="sxs-lookup"><span data-stu-id="138ef-1033">See the [Exported Assembly Conversion](http://msdn.microsoft.com/library/3fffd8db-240f-4fde-a558-a5bcc01e1a86) topic for more information about library identifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1034">
            <paramref name="asm" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1034">
              <paramref name="asm" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1035">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1035">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1036">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1036">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GuidAttribute" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuid(System.Runtime.InteropServices.UCOMITypeLib)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibLcid">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1037">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1037">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (typelib As ITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="138ef-1038">The type library whose LCID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1038">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1039">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1039">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1040">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1040">The LCID of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1041">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1041">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1042">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1042">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibLcid">
      <MemberSignature Language="C#" Value="public static int GetTypeLibLcid (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetTypeLibLcid(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibLcid(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibLcid (pTLB As UCOMITypeLib) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetTypeLibLcid(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibLcid : System.Runtime.InteropServices.UCOMITypeLib -&gt; int" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibLcid pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="138ef-1043">The type library whose LCID is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1043">The type library whose LCID is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1044">Retrieves the LCID of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1044">Retrieves the LCID of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1045">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1045">The LCID of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1046">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1046">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1047">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1047">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeLibName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1048">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1048">Retrieves the name of a type library.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.ComTypes.ITypeLib typelib);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.ComTypes.ITypeLib typelib) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (typelib As ITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::ComTypes::ITypeLib ^ typelib);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.ComTypes.ITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName typelib" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
      </Parameters>
      <Docs>
        <param name="typelib">
          <span data-ttu-id="138ef-1049">The type library whose name is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1049">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1050">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1050">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1051">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1051">The name of the type library that the <paramref name="typelib" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1052">Il nome restituito da questo metodo è l'identificatore utilizzato con l'istruzione library, ad esempio per la libreria dei tipi Microsoft ADO ADODB.</span><span class="sxs-lookup"><span data-stu-id="138ef-1052">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="138ef-1053">Il nome non è un nome di file.</span><span class="sxs-lookup"><span data-stu-id="138ef-1053">The name is not a file name.</span></span>  
  
 <span data-ttu-id="138ef-1054">È anche possibile recuperare il nome libreria dei tipi tramite la chiamata di <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> metodo e il passaggio di -1 per il primo parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-1054">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1055">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1055">The <paramref name="typelib" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1056">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1056">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1057">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1057">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibName">
      <MemberSignature Language="C#" Value="public static string GetTypeLibName (System.Runtime.InteropServices.UCOMITypeLib pTLB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeLibName(class System.Runtime.InteropServices.UCOMITypeLib pTLB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeLibName (pTLB As UCOMITypeLib) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeLibName(System::Runtime::InteropServices::UCOMITypeLib ^ pTLB);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibName : System.Runtime.InteropServices.UCOMITypeLib -&gt; string" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibName pTLB" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
      </Parameters>
      <Docs>
        <param name="pTLB">
          <span data-ttu-id="138ef-1058">The type library whose name is to be retrieved.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1058">The type library whose name is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1059">Retrieves the name of a type library.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1059">Retrieves the name of a type library.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1060">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1060">The name of the type library that the <paramref name="pTLB" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1061">Il nome restituito da questo metodo è l'identificatore utilizzato con l'istruzione library, ad esempio per la libreria dei tipi Microsoft ADO ADODB.</span><span class="sxs-lookup"><span data-stu-id="138ef-1061">The name returned by this method is the identifier used with the library statement, such as ADODB for the Microsoft ADO type library.</span></span> <span data-ttu-id="138ef-1062">Il nome non è un nome di file.</span><span class="sxs-lookup"><span data-stu-id="138ef-1062">The name is not a file name.</span></span>  
  
 <span data-ttu-id="138ef-1063">È anche possibile recuperare il nome libreria dei tipi tramite la chiamata di <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> metodo e il passaggio di -1 per il primo parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-1063">You can also retrieve the type library name by calling the <xref:System.Runtime.InteropServices.UCOMITypeInfo.GetDocumentation%2A?displayProperty=nameWithType> method and passing -1 for its first parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1064">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1064">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1065">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1065">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeLibVersionForAssembly">
      <MemberSignature Language="C#" Value="public static void GetTypeLibVersionForAssembly (System.Reflection.Assembly inputAssembly, out int majorVersion, out int minorVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetTypeLibVersionForAssembly(class System.Reflection.Assembly inputAssembly, [out] int32&amp; majorVersion, [out] int32&amp; minorVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub GetTypeLibVersionForAssembly (inputAssembly As Assembly, ByRef majorVersion As Integer, ByRef minorVersion As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetTypeLibVersionForAssembly(System::Reflection::Assembly ^ inputAssembly, [Runtime::InteropServices::Out] int % majorVersion, [Runtime::InteropServices::Out] int % minorVersion);" />
      <MemberSignature Language="F#" Value="static member GetTypeLibVersionForAssembly : System.Reflection.Assembly *  *  -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly (inputAssembly, majorVersion, minorVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="majorVersion" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="minorVersion" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inputAssembly">
          <span data-ttu-id="138ef-1066">A managed assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1066">A managed assembly.</span>
          </span>
        </param>
        <param name="majorVersion">
          <span data-ttu-id="138ef-1067">The major version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1067">The major version number.</span>
          </span>
        </param>
        <param name="minorVersion">
          <span data-ttu-id="138ef-1068">The minor version number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1068">The minor version number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1069">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1069">Retrieves the version number of a type library that will be exported from the specified assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1070">Prima di esportare un assembly tramite <xref:System.Runtime.InteropServices.TypeLibExporterFlags> con il `CallerResolvedReferences` valore, è possibile usare questo metodo per recuperare la versione della libreria dei tipi dall'assembly.</span><span class="sxs-lookup"><span data-stu-id="138ef-1070">Before exporting an assembly by using <xref:System.Runtime.InteropServices.TypeLibExporterFlags> with the `CallerResolvedReferences` value, you can use this method to retrieve the type library version from the assembly.</span></span>  
  
 <span data-ttu-id="138ef-1071">Se non si applica il <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attributo a un assembly esportato per controllare in modo esplicito il numero di versione della libreria dei tipi generata, la libreria dei tipi avrà lo stesso numero di versione dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="138ef-1071">If you do not apply the <xref:System.Runtime.InteropServices.TypeLibVersionAttribute> attribute to an exported assembly to explicitly control the version number of the generated type library, the type library will have the same version number as the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1072">
            <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1072">
              <paramref name="inputAssembly" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1073">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1073">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1074">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1074">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" />
        <altmember cref="T:System.Runtime.InteropServices.TypeLibVersionAttribute" />
        <altmember cref="T:System.Runtime.InteropServices.ITypeLibConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetUniqueObjectForIUnknown">
      <MemberSignature Language="C#" Value="public static object GetUniqueObjectForIUnknown (IntPtr unknown);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetUniqueObjectForIUnknown(native int unknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUniqueObjectForIUnknown (unknown As IntPtr) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetUniqueObjectForIUnknown(IntPtr unknown);" />
      <MemberSignature Language="F#" Value="static member GetUniqueObjectForIUnknown : nativeint -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown unknown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknown" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="unknown">
          <span data-ttu-id="138ef-1075">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1075">A managed pointer to an <see langword="IUnknown" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1076">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1076">Creates a unique [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) object for a given [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1077">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1077">A unique RCW for the specified <see langword="IUnknown" /> interface.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1078">Il <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> metodo garantisce che venga ricevuto un RCW univoco, perché non corrisponde un `IUnknown` puntatore a un oggetto esistente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1078">The <xref:System.Runtime.InteropServices.Marshal.GetUniqueObjectForIUnknown%2A> method ensures that you receive a unique RCW, because it does not match an `IUnknown` pointer to an existing object.</span></span> <span data-ttu-id="138ef-1079">Utilizzare questo metodo quando è necessario creare un RCW univoco che non venga interessato da altro codice che chiama il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1079">Use this method when you have to create a unique RCW that is not impacted by other code that calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1080">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1080">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1081">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1081">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedThunkForManagedMethodPtr">
      <MemberSignature Language="C#" Value="public static IntPtr GetUnmanagedThunkForManagedMethodPtr (IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetUnmanagedThunkForManagedMethodPtr(native int pfnMethodToWrap, native int pbSignature, int32 cbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr(System.IntPtr,System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap As IntPtr, pbSignature As IntPtr, cbSignature As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetUnmanagedThunkForManagedMethodPtr(IntPtr pfnMethodToWrap, IntPtr pbSignature, int cbSignature);" />
      <MemberSignature Language="F#" Value="static member GetUnmanagedThunkForManagedMethodPtr : nativeint * nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr (pfnMethodToWrap, pbSignature, cbSignature)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
        <Parameter Name="pbSignature" Type="System.IntPtr" />
        <Parameter Name="cbSignature" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pfnMethodToWrap">
          <span data-ttu-id="138ef-1082">A pointer to the method to marshal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1082">A pointer to the method to marshal.</span>
          </span>
        </param>
        <param name="pbSignature">
          <span data-ttu-id="138ef-1083">A pointer to the method signature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1083">A pointer to the method signature.</span>
          </span>
        </param>
        <param name="cbSignature">
          <span data-ttu-id="138ef-1084">The number of bytes in <c>pbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1084">The number of bytes in <c>pbSignature</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1085">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1085">Gets a pointer to a runtime-generated function that marshals a call from unmanaged to managed code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1086">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1086">A pointer to a function that will marshal a call from <paramref name="pfnMethodToWrap" /> to managed code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1087"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> viene esposto per il supporto del compilatore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1087"><xref:System.Runtime.InteropServices.Marshal.GetUnmanagedThunkForManagedMethodPtr%2A> is exposed for compiler support only.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1088">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1088">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1089">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1089">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsComObject">
      <MemberSignature Language="C#" Value="public static bool IsComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsComObject (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member IsComObject : obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-1090">The object to check.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1090">The object to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1091">Indicates whether a specified object represents a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1091">Indicates whether a specified object represents a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1092">
            <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1092">
              <see langword="true" /> if the <paramref name="o" /> parameter is a COM type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1093"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> Restituisce `true` se il tipo di classe dell'istanza è attribuito <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> oppure se deriva direttamente o indirettamente da una classe con attributi <xref:System.Runtime.InteropServices.ComImportAttribute>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1093"><xref:System.Runtime.InteropServices.Marshal.IsComObject%2A> returns `true` if the class type of the instance is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute?displayProperty=nameWithType> or if it derives directly or indirectly from a class attributed with <xref:System.Runtime.InteropServices.ComImportAttribute>.</span></span> <span data-ttu-id="138ef-1094">Il [Tlbimp.exe (tipo di libreria utilità di importazione)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) strumento applica questo attributo per l'utente quando si importa una libreria dei tipi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1094">The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) tool applies this attribute for you when it imports a type library.</span></span>  
  
 <span data-ttu-id="138ef-1095">Altri due metodi inoltre determinano se un oggetto specificato rappresenta un oggetto COM, ma i requisiti per la restituzione `true` differiscono da requisiti di questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1095">Two other methods also determine whether a specified object represents a COM object, but the requirements for returning `true` differ from this method's requirements.</span></span> <span data-ttu-id="138ef-1096"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> Restituisce `true` se la classe (o l'interfaccia) è attribuito <xref:System.Runtime.InteropServices.ComImportAttribute> direttamente; non restituisce `true` per i tipi derivati.</span><span class="sxs-lookup"><span data-stu-id="138ef-1096"><xref:System.Type.IsImport%2A?displayProperty=nameWithType> returns `true` if the class (or interface) is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> directly; it does not return `true` for derived types.</span></span> <span data-ttu-id="138ef-1097"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> Restituisce `true` se il tipo viene attribuito <xref:System.Runtime.InteropServices.ComImportAttribute> o deriva da un tipo con lo stesso GUID.</span><span class="sxs-lookup"><span data-stu-id="138ef-1097"><xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A?displayProperty=nameWithType> returns `true` if the type is attributed with <xref:System.Runtime.InteropServices.ComImportAttribute> or derives from a type with the same GUID.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1098">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1098">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.ComImportAttribute" />
        <altmember cref="P:System.Type.IsImport" />
        <altmember cref="M:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="IsTypeVisibleFromCom">
      <MemberSignature Language="C#" Value="public static bool IsTypeVisibleFromCom (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTypeVisibleFromCom(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeVisibleFromCom (t As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeVisibleFromCom(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member IsTypeVisibleFromCom : Type -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-1099">The type to check for COM visibility.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1099">The type to check for COM visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1100">Indicates whether a type is visible to COM clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1100">Indicates whether a type is visible to COM clients.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1101">
            <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1101">
              <see langword="true" /> if the type is visible to COM; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1102"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> Consente di controllare la visibilità COM in un unico passaggio.</span><span class="sxs-lookup"><span data-stu-id="138ef-1102"><xref:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom%2A> enables you to check for COM visibility in one step.</span></span> <span data-ttu-id="138ef-1103">Impossibile utilizzare tipi che non sono visibili in COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-1103">Types that are not visible cannot be used from COM.</span></span> <span data-ttu-id="138ef-1104">Un tipo è visibile se si tratta `public` e non nascoste con il <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1104">A type is visible if it is `public` and not hidden with the <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.ComVisibleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="NumParamBytes">
      <MemberSignature Language="C#" Value="public static int NumParamBytes (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 NumParamBytes(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NumParamBytes (m As MethodInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int NumParamBytes(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member NumParamBytes : System.Reflection.MethodInfo -&gt; int" Usage="System.Runtime.InteropServices.Marshal.NumParamBytes m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="138ef-1105">The method to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1105">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1106">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1106">Calculates the number of bytes in unmanaged memory that are required to hold the parameters for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1107">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1107">The number of bytes required to represent the method parameters in unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1108">Il <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> metodo restituisce la dimensione dello stack, in byte, necessaria per rappresentare i parametri della firma di un metodo nella memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1108">The <xref:System.Runtime.InteropServices.Marshal.NumParamBytes%2A> method returns the stack size (in bytes) needed to represent the parameters of a method signature in unmanaged memory.</span></span>  
  
 <span data-ttu-id="138ef-1109">Si noti che il valore restituito di questo metodo è dipendente dalla piattaforma.</span><span class="sxs-lookup"><span data-stu-id="138ef-1109">Note that the return value of this method is platform-dependent.</span></span> <span data-ttu-id="138ef-1110">Ad esempio, una firma con un solo parametro integer restituisce un valore pari a 4 nelle piattaforme a 32 bit e un valore pari a 8 su piattaforme a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="138ef-1110">For example, a signature with a single integer parameter returns a value of 4 on 32-bit platforms and a value of 8 on 64-bit platforms.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1111">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1111">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1112">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1112">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1113">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1113">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1114">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1114">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="OffsetOf">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf (Type t, string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf(class System.Type t, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf (t As Type, fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr OffsetOf(Type ^ t, System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : Type * string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf (t, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-1115">A value type or formatted reference type that specifies the managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1115">A value type or formatted reference type that specifies the managed class.</span>
          </span>
          <span data-ttu-id="138ef-1116">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1116">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> to the class.</span>
          </span>
        </param>
        <param name="fieldName">
          <span data-ttu-id="138ef-1117">The field within the <c>t</c> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1117">The field within the <c>t</c> parameter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1118">Returns the field offset of the unmanaged form of the managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1118">Returns the field offset of the unmanaged form of the managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1119">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1119">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1120"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> fornisce la differenza in termini di layout della struttura non gestita, che non corrisponde necessariamente all'offset del layout della struttura gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1120"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="138ef-1121">La struttura di marshalling possono trasformare il layout e modificare l'offset.</span><span class="sxs-lookup"><span data-stu-id="138ef-1121">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="138ef-1122">Il `t` parametro può essere un tipo di valore o un tipo di riferimento formattato (con layout sequenziale o esplicito).</span><span class="sxs-lookup"><span data-stu-id="138ef-1122">The `t` parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="138ef-1123">È possibile ottenere le dimensioni dell'intero layout usando i <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1123">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="138ef-1124">Per altre informazioni, vedere [marshalling predefinito per i tipi di valore](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="138ef-1124">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-1125">A partire da .NET Framework versione 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> può esporre campi privati.</span><span class="sxs-lookup"><span data-stu-id="138ef-1125">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1126">The class cannot be exported as a structure or the field is nonpublic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1126">The class cannot be exported as a structure or the field is nonpublic.</span>
          </span>
          <span data-ttu-id="138ef-1127">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1127">Beginning with the .NET Framework version 2.0, the field may be private.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1128">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1128">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr OffsetOf&lt;T&gt; (string fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int OffsetOf&lt;T&gt;(string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.OffsetOf``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OffsetOf(Of T) (fieldName As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr OffsetOf(System::String ^ fieldName);" />
      <MemberSignature Language="F#" Value="static member OffsetOf : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.OffsetOf fieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1129">Tipo di valore definito o tipo di riferimento formattato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1129">A managed value type or formatted reference type.</span>
          </span>
          <span data-ttu-id="138ef-1130">È necessario applicare l'attributo <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> alla classe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1130">You must apply the <see cref="T:System.Runtime.InteropServices.StructLayoutAttribute" /> attribute to the class.</span>
          </span>
        </typeparam>
        <param name="fieldName">
          <span data-ttu-id="138ef-1131">The name of the field in the <c>T</c> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1131">The name of the field in the <c>T</c> type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1132">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the field offset of the unmanaged form of a specified managed class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1132">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the field offset of the unmanaged form of a specified managed class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1133">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1133">The offset, in bytes, for the <paramref name="fieldName" /> parameter within the specified class that is declared by platform invoke.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1134"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> fornisce la differenza in termini di layout della struttura non gestita, che non corrisponde necessariamente all'offset del layout della struttura gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1134"><xref:System.Runtime.InteropServices.Marshal.OffsetOf%60%601%28System.String%29> provides the offset in terms of the unmanaged structure layout, which does not necessarily correspond to the offset of the managed structure layout.</span></span> <span data-ttu-id="138ef-1135">La struttura di marshalling possono trasformare il layout e modificare l'offset.</span><span class="sxs-lookup"><span data-stu-id="138ef-1135">Marshaling the structure can transform the layout and alter the offset.</span></span> <span data-ttu-id="138ef-1136">Il `T` parametro di tipo generico può essere un tipo di valore o un tipo di riferimento formattato (con layout sequenziale o esplicito).</span><span class="sxs-lookup"><span data-stu-id="138ef-1136">The `T` generic type parameter can be a value type or a formatted reference type (with either a sequential or explicit layout).</span></span> <span data-ttu-id="138ef-1137">È possibile ottenere le dimensioni dell'intero layout usando i <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1137">You can obtain the size of the entire layout by using the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method.</span></span> <span data-ttu-id="138ef-1138">Per altre informazioni, vedere [marshalling predefinito per i tipi di valore](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span><span class="sxs-lookup"><span data-stu-id="138ef-1138">For additional information, see [Default Marshaling for Value Types](http://msdn.microsoft.com/library/4d9a876c-e05a-40ba-bd85-bd22877f984a).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-1139">A partire da .NET Framework versione 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> può esporre campi privati.</span><span class="sxs-lookup"><span data-stu-id="138ef-1139">Beginning with the .NET Framework version 2.0, <xref:System.Runtime.InteropServices.Marshal.OffsetOf%2A> may expose private fields.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      </Docs>
    </Member>
    <Member MemberName="Prelink">
      <MemberSignature Language="C#" Value="public static void Prelink (System.Reflection.MethodInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Prelink(class System.Reflection.MethodInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Prelink (m As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Prelink(System::Reflection::MethodInfo ^ m);" />
      <MemberSignature Language="F#" Value="static member Prelink : System.Reflection.MethodInfo -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.Prelink m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="138ef-1140">The method to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1140">The method to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1141">Executes one-time method setup tasks without calling the method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1141">Executes one-time method setup tasks without calling the method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1142">Le attività di configurazione forniscono l'inizializzazione anticipata e vengono eseguite automaticamente quando viene richiamato il metodo di destinazione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1142">Setup tasks provide early initialization and are performed automatically when the target method is invoked.</span></span> <span data-ttu-id="138ef-1143">Le prime attività includono quanto segue:</span><span class="sxs-lookup"><span data-stu-id="138ef-1143">First-time tasks include the following:</span></span>  
  
-   <span data-ttu-id="138ef-1144">Verifica che i metadati di PInvoke è formattato correttamente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1144">Verifying that the platform invoke metadata is correctly formatted.</span></span>  
  
-   <span data-ttu-id="138ef-1145">Verifica che tutti i tipi gestiti e i parametri validi della piattaforma di richiamare le funzioni.</span><span class="sxs-lookup"><span data-stu-id="138ef-1145">Verifying that all the managed types are valid parameters of platform invoke functions.</span></span>  
  
-   <span data-ttu-id="138ef-1146">Individuare e caricare la DLL non gestita nel processo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1146">Locating and loading the unmanaged DLL into the process.</span></span>  
  
-   <span data-ttu-id="138ef-1147">Individuare il punto di ingresso del processo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1147">Locating the entry point in the process.</span></span>  
  
 <span data-ttu-id="138ef-1148">La chiamata a <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> su un metodo all'esterno di platform invoke non ha alcun effetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1148">Calling <xref:System.Runtime.InteropServices.Marshal.Prelink%2A> on a method outside of platform invoke has no effect.</span></span> <span data-ttu-id="138ef-1149">Per eseguire il programma di installazione nella piattaforma tutte le attività di richiamare metodi in un tipo, usare <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1149">To execute setup tasks on all platform invoke methods in a type, use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1150">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1150">The <paramref name="m" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1151">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1151">The <paramref name="m" /> parameter is not a <see cref="T:System.Reflection.MethodInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1152">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1152">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1153">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1153">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="PrelinkAll">
      <MemberSignature Language="C#" Value="public static void PrelinkAll (Type c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrelinkAll(class System.Type c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PrelinkAll (c As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PrelinkAll(Type ^ c);" />
      <MemberSignature Language="F#" Value="static member PrelinkAll : Type -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PrelinkAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="138ef-1154">The class whose methods are to be checked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1154">The class whose methods are to be checked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1155">Performs a pre-link check for all methods on a class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1155">Performs a pre-link check for all methods on a class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1156">Il <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> Richiama metodo <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> su ogni metodo per un determinato tipo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1156">The <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> method invokes <xref:System.Runtime.InteropServices.Marshal.Prelink%2A?displayProperty=nameWithType> on every method for a given type.</span></span> <span data-ttu-id="138ef-1157"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> esegue le attività di configurazione una tantum senza chiamare ogni metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1157"><xref:System.Runtime.InteropServices.Marshal.Prelink%2A> executes one-time method setup tasks without calling each method.</span></span> <span data-ttu-id="138ef-1158">È possibile usare <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> solo per chiamate platform invoke.</span><span class="sxs-lookup"><span data-stu-id="138ef-1158">You can use <xref:System.Runtime.InteropServices.Marshal.PrelinkAll%2A> only for platform invoke calls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1159">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1159">The <paramref name="c" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1160">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1160">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1161">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1161">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAnsi">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1162">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1162">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged ANSI string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1163">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1163">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1164">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1164">Copies all characters up to the first null character from an unmanaged ANSI string to a managed <see cref="T:System.String" />, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1165">A managed string that holds a copy of the unmanaged ANSI string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1165">A managed string that holds a copy of the unmanaged ANSI string.</span>
          </span>
          <span data-ttu-id="138ef-1166">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1166">If <paramref name="ptr" /> is <see langword="null" />, the method returns a null string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1167"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1167"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1168">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1168">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1169">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1169">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1170">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> metodo per creare una stringa gestita da una funzione non gestita `char` matrice.</span><span class="sxs-lookup"><span data-stu-id="138ef-1170">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged `char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1171">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1171">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1172">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1172">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAnsi">
      <MemberSignature Language="C#" Value="public static string PtrToStringAnsi (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAnsi(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAnsi (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAnsi(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAnsi : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAnsi (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1173">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1173">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="138ef-1174">The byte count of the input string to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1174">The byte count of the input string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1175">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1175">Allocates a managed <see cref="T:System.String" />, copies a specified number of characters from an unmanaged ANSI string into it, and widens each ANSI character to Unicode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1176">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1176">A managed string that holds a copy of the native ANSI string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1177"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1177"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1178">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1178">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1179">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1179">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A?displayProperty=nameWithType> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1180">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> metodo per creare una stringa gestita da una funzione non gestita`char` matrice.</span><span class="sxs-lookup"><span data-stu-id="138ef-1180">The following example uses the <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A> method to create a managed string from an unmanaged`char` array.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStringAnsi-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1181">
            <paramref name="len" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1181">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1182">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1182">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1183">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1183">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringAuto">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1184">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1184">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1185">For Unicode platforms, the address of the first Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1185">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="138ef-1186">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1186">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1187">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1187">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1188">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1188">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1189">Se la piattaforma corrente è in formato Unicode, ogni carattere ANSI viene trasformato in un carattere Unicode e questo metodo chiama <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1189">If the current platform is Unicode, each ANSI character is widened to a Unicode character and this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>.</span></span> <span data-ttu-id="138ef-1190">In caso contrario, questo metodo chiama <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1190">Otherwise, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span>  
  
 <span data-ttu-id="138ef-1191"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1191"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1192">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1192">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1193"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1193"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1194">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1194">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1195">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1195">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringAuto">
      <MemberSignature Language="C#" Value="public static string PtrToStringAuto (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringAuto(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringAuto (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringAuto(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringAuto : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringAuto (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1196">For Unicode platforms, the address of the first Unicode character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1196">For Unicode platforms, the address of the first Unicode character.</span>
          </span>
          <span data-ttu-id="138ef-1197">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1197">-or-  For ANSI plaforms, the address of the first ANSI character.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="138ef-1198">The number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1198">The number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1199">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1199">Allocates a managed <see cref="T:System.String" /> and copies the specified number of characters from a string stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1200">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1200">A managed string that holds a copy of the native string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1201">Su piattaforme Unicode, questo metodo chiama <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; per le piattaforme ANSI, chiama <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1201">On Unicode platforms, this method calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A>; on ANSI platforms, it calls <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A>.</span></span> <span data-ttu-id="138ef-1202">Prima di questi metodi vengono chiamati, viene eseguita alcuna trasformazione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1202">No transformations are done before these methods are called.</span></span>  
  
 <span data-ttu-id="138ef-1203"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1203"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1204">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1204">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> fornisce la funzionalità di opposto <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1205"><xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1206">
            <paramref name="len" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1206">
              <paramref name="len" /> is less than zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1207">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1207">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1208">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1208">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringBSTR">
      <MemberSignature Language="C#" Value="public static string PtrToStringBSTR (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringBSTR(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringBSTR (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringBSTR(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringBSTR : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringBSTR ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1209">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1209">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1210">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1210">Allocates a managed <see cref="T:System.String" /> and copies a [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) stored in unmanaged memory into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1211">A managed string that holds a copy of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1211">A managed string that holds a copy of the unmanaged string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1212">Chiama questo metodo solo per le stringhe che sono state allocate con non gestito [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) e [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) funzioni.</span><span class="sxs-lookup"><span data-stu-id="138ef-1212">Call this method only on strings that were allocated with the unmanaged [SysAllocString](https://msdn.microsoft.com/library/ms221458\(v=vs.85\).aspx) and [SysAllocStringLen](https://msdn.microsoft.com/library/ms221639\(v=vs.85\).aspx) functions.</span></span>  
  
 <span data-ttu-id="138ef-1213"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1213"><xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1214">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1214">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1215">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1215">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1216">
            <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1216">
              <paramref name="ptr" /> equals <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1217">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1217">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1218">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1218">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStringUni">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1219">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1219">Allocates a managed <see cref="T:System.String" /> and copies all or part of an unmanaged Unicode string into it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1220">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1220">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1221">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1221">Allocates a managed <see cref="T:System.String" /> and copies all characters up to the first null character from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1222">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1222">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1223"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> è utile per effettuare il marshalling personalizzato o per l'uso quando si combinano codice non gestito e non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1223"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1224">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1224">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1225">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1225">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1226">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1226">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1227">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1227">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUni">
      <MemberSignature Language="C#" Value="public static string PtrToStringUni (IntPtr ptr, int len);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUni(native int ptr, int32 len) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUni (ptr As IntPtr, len As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUni(IntPtr ptr, int len);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUni : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUni (ptr, len)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1228">The address of the first character of the unmanaged string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1228">The address of the first character of the unmanaged string.</span>
          </span>
        </param>
        <param name="len">
          <span data-ttu-id="138ef-1229">The number of Unicode characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1229">The number of Unicode characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1230">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1230">Allocates a managed <see cref="T:System.String" /> and copies a specified number of characters from an unmanaged Unicode string into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1231">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1231">A managed string that holds a copy of the unmanaged string if the value of the <paramref name="ptr" /> parameter is not <see langword="null" />; otherwise, this method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1232"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1232"><xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1233">Poiché questo metodo crea una copia del contenuto della stringa non gestita, è necessario liberare la stringa originale come appropriato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1233">Because this method creates a copy of the unmanaged string's contents, you must free the original string as appropriate.</span></span> <span data-ttu-id="138ef-1234">Questo metodo fornisce la funzionalità opposta del <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> e <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1234">This method provides the opposite functionality of the <xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1235">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1235">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1236">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1236">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PtrToStringUTF8">
      <MemberSignature Language="C#" Value="public static string PtrToStringUTF8 (IntPtr ptr, int byteLen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string PtrToStringUTF8(native int ptr, int32 byteLen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStringUTF8(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStringUTF8 (ptr As IntPtr, byteLen As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ PtrToStringUTF8(IntPtr ptr, int byteLen);" />
      <MemberSignature Language="F#" Value="static member PtrToStringUTF8 : nativeint * int -&gt; string" Usage="System.Runtime.InteropServices.Marshal.PtrToStringUTF8 (ptr, byteLen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="byteLen" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">To be added.</param>
        <param name="byteLen">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PtrToStructure">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1237">Marshals data from an unmanaged block of memory to a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1237">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static void PtrToStructure (IntPtr ptr, object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure(native int ptr, object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure (ptr As IntPtr, structure As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PtrToStructure(IntPtr ptr, System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * obj -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1238">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1238">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="138ef-1239">The object to which the data is to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1239">The object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="138ef-1240">This must be an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1240">This must be an instance of a formatted class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1241">Marshals data from an unmanaged block of memory to a managed object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1241">Marshals data from an unmanaged block of memory to a managed object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1242"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> è spesso necessario in COM interop e platform invoke quando i parametri della struttura vengono rappresentati come un <xref:System.IntPtr?displayProperty=nameWithType> valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1242"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="138ef-1243">È possibile utilizzare questo metodo di overload con i tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1243">You cannot use this overload method with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1244">Structure layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1244">Structure layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="138ef-1245">-or-  Structure is a boxed value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1245">-or-  Structure is a boxed value type.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1246">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1246">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1247">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1247">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure">
      <MemberSignature Language="C#" Value="public static object PtrToStructure (IntPtr ptr, Type structureType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object PtrToStructure(native int ptr, class System.Type structureType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure(System.IntPtr,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure (ptr As IntPtr, structureType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PtrToStructure(IntPtr ptr, Type ^ structureType);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * Type -&gt; obj" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structureType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structureType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1248">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1248">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structureType">
          <span data-ttu-id="138ef-1249">The type of object to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1249">The type of object to be created.</span>
          </span>
          <span data-ttu-id="138ef-1250">This object must represent a formatted class or a structure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1250">This object must represent a formatted class or a structure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1251">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1251">Marshals data from an unmanaged block of memory to a newly allocated managed object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1252">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1252">A managed object containing the data pointed to by the <paramref name="ptr" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> è spesso necessario in COM interop e platform invoke quando i parametri della struttura vengono rappresentati come un <xref:System.IntPtr?displayProperty=nameWithType> valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1253"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> is often necessary in COM interop and platform invoke when structure parameters are represented as an <xref:System.IntPtr?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="138ef-1254">È possibile passare un tipo di valore a questo metodo di overload.</span><span class="sxs-lookup"><span data-stu-id="138ef-1254">You can pass a value type to this overload method.</span></span> <span data-ttu-id="138ef-1255">In questo caso, l'oggetto restituito è un'istanza sottoposto a conversione boxing.</span><span class="sxs-lookup"><span data-stu-id="138ef-1255">In this case, the returned object is a boxed instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1256">Nell'esempio seguente crea una struttura gestita, li trasferisce in memoria non gestita e quindi trasferita alla memoria gestita tramite il <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1256">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 <span data-ttu-id="138ef-1257">Nell'esempio seguente viene illustrato come effettuare il marshalling di un blocco non gestita di memoria da una struttura gestita usando il <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1257">The following example demonstrates how to marshal an unmanaged block of memory to a managed structure using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="138ef-1258">Questo codice presuppone che la compilazione di 32 bit.</span><span class="sxs-lookup"><span data-stu-id="138ef-1258">This code assumes 32-bit compilation.</span></span> <span data-ttu-id="138ef-1259">Prima di usare un compilatore a 64 bit, sostituire <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> con <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1259">Before using a 64-bit compiler, replace <xref:System.IntPtr.ToInt32%2A?displayProperty=nameWithType> with <xref:System.IntPtr.ToInt64%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[PtrToStructure#1](~/samples/snippets/cpp/VS_Snippets_CLR/PtrToStructure/CPP/pts.cpp#1)]
 [!code-csharp[PtrToStructure#1](~/samples/snippets/csharp/VS_Snippets_CLR/PtrToStructure/CS/pts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1260">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1260">The <paramref name="structureType" /> parameter layout is not sequential or explicit.</span>
          </span>
          <span data-ttu-id="138ef-1261">-or-  The <paramref name="structureType" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1261">-or-  The <paramref name="structureType" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1262">
            <paramref name="structureType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1262">
              <paramref name="structureType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="138ef-1263">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1263">The class specified by <paramref name="structureType" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1264">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1264">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1265">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1265">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.UCOMITypeInfo.GetTypeAttr(System.IntPtr@)" />
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T PtrToStructure&lt;T&gt; (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T PtrToStructure&lt;T&gt;(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PtrToStructure(Of T) (ptr As IntPtr) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T PtrToStructure(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint -&gt; 'T" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1266">Tipo dell'oggetto nel quale devono essere copiati i dati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1266">The type of the object to which the data is to be copied.</span>
          </span>
          <span data-ttu-id="138ef-1267">Questo deve rappresentare una classe formattata o una struttura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1267">This must be a formatted class or a structure.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="138ef-1268">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1268">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1269">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1269">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a newly allocated managed object of the type specified by a generic type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1270">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1270">A managed object that contains the data that the <paramref name="ptr" /> parameter points to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1271"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> è spesso necessario in COM interop e platform invoke quando i parametri della struttura vengono rappresentati come <xref:System.IntPtr?displayProperty=nameWithType> valori.</span><span class="sxs-lookup"><span data-stu-id="138ef-1271"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="138ef-1272">È possibile passare un tipo di valore per questo overload del metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1272">You can pass a value type to this method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1273">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1273">The layout of <typeparamref name="T" /> is not sequential or explicit.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="138ef-1274">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1274">The class specified by <typeparamref name="T" /> does not have an accessible default constructor.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1275">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1275">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1276">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1276">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PtrToStructure&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void PtrToStructure&lt;T&gt; (IntPtr ptr, T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PtrToStructure&lt;T&gt;(native int ptr, !!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PtrToStructure(Of T) (ptr As IntPtr, structure As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void PtrToStructure(IntPtr ptr, T structure);" />
      <MemberSignature Language="F#" Value="static member PtrToStructure : nativeint * 'T -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.PtrToStructure (ptr, structure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1277">Il tipo della <c>struttura</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1277">The type of <c>structure</c>.</span>
          </span>
          <span data-ttu-id="138ef-1278">Deve essere una classe formattata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1278">This must be a formatted class.</span>
          </span>
        </typeparam>
        <param name="ptr">
          <span data-ttu-id="138ef-1279">A pointer to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1279">A pointer to an unmanaged block of memory.</span>
          </span>
        </param>
        <param name="structure">
          <span data-ttu-id="138ef-1280">The object to which the data is to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1280">The object to which the data is to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1281">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1281">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from an unmanaged block of memory to a managed object of the specified type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1282"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> è spesso necessario in COM interop e platform invoke quando i parametri della struttura vengono rappresentati come <xref:System.IntPtr> valori.</span><span class="sxs-lookup"><span data-stu-id="138ef-1282"><xref:System.Runtime.InteropServices.Marshal.PtrToStructure%60%601%28System.IntPtr%2C%60%600%29> is often necessary in COM interop and platform invoke when structure parameters are represented as <xref:System.IntPtr> values.</span></span> <span data-ttu-id="138ef-1283">È possibile utilizzare questo overload del metodo con i tipi di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1283">You cannot use this method overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1284">Structure layout is not sequential or explicit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1284">Structure layout is not sequential or explicit.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1285">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1285">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1286">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1286">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="QueryInterface">
      <MemberSignature Language="C#" Value="public static int QueryInterface (IntPtr pUnk, ref Guid iid, out IntPtr ppv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 QueryInterface(native int pUnk, valuetype System.Guid&amp; iid, [out] native int&amp; ppv) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryInterface (pUnk As IntPtr, ByRef iid As Guid, ByRef ppv As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int QueryInterface(IntPtr pUnk, Guid % iid, [Runtime::InteropServices::Out] IntPtr % ppv);" />
      <MemberSignature Language="F#" Value="static member QueryInterface : nativeint *  *  -&gt; int" Usage="System.Runtime.InteropServices.Marshal.QueryInterface (pUnk, iid, ppv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
        <Parameter Name="iid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppv" Type="System.IntPtr&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="138ef-1287">The interface to be queried.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1287">The interface to be queried.</span>
          </span>
        </param>
        <param name="iid">
          <span data-ttu-id="138ef-1288">The interface identifier (IID) of the requested interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1288">The interface identifier (IID) of the requested interface.</span>
          </span>
        </param>
        <param name="ppv">
          <span data-ttu-id="138ef-1289">When this method returns, contains a reference to the returned interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1289">When this method returns, contains a reference to the returned interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1290">Requests a pointer to a specified interface from a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1290">Requests a pointer to a specified interface from a COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1291">An HRESULT that indicates the success or failure of the call.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1291">An HRESULT that indicates the success or failure of the call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1292">Il <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> metodo espone il [IUnknown:: QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) metodo di un oggetto COM, che tenta di ottenere un puntatore di interfaccia specifica.</span><span class="sxs-lookup"><span data-stu-id="138ef-1292">The <xref:System.Runtime.InteropServices.Marshal.QueryInterface%2A> method exposes the [IUnknown::QueryInterface](http://go.microsoft.com/fwlink/?LinkID=144867) method of a COM object, which attempts to obtain a specific interface pointer.</span></span> <span data-ttu-id="138ef-1293">Usando `QueryInterface` su COM oggetto è uguale all'esecuzione di un'operazione cast in codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1293">Using `QueryInterface` on a COM object is the same as performing a cast operation in managed code.</span></span> <span data-ttu-id="138ef-1294">La chiamata a un oggetto con questo metodo fa in modo che il conteggio dei riferimenti incrementare sul puntatore a interfaccia prima che venga restituito il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-1294">Calling an object with this method causes the reference count to increment on the interface pointer before the pointer is returned.</span></span> <span data-ttu-id="138ef-1295">Usare sempre <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> da decrementare il conteggio dei riferimenti dopo aver completato con il puntatore del mouse.</span><span class="sxs-lookup"><span data-stu-id="138ef-1295">Always use <xref:System.Runtime.InteropServices.Marshal.Release%2A?displayProperty=nameWithType> to decrement the reference count once you have finished with the pointer.</span></span> <span data-ttu-id="138ef-1296">Per ottenere un <xref:System.IntPtr> valore che rappresenta un [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore a interfaccia, è possibile chiamare <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1296">To obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer, you can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1297">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1297">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1298">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1298">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetObjectForIUnknown(System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1299">Reads a single byte from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1299">Reads a single byte from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1300">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1300">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1301">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1301">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1302">Reads a single byte from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1302">Reads a single byte from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1303">The byte read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1303">The byte read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1304"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> dispone di un offset implicito di 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-1304"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> has an implied offset of 0.</span></span> <span data-ttu-id="138ef-1305">Questo metodo consente l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1305">This method enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1306">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1306">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1307">Nell'esempio seguente crea un blocco di memoria non gestita, scrive un byte nella memoria non gestita, legge i byte da memoria non gestita e quindi elimina la memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1307">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 <span data-ttu-id="138ef-1308">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> metodo per leggere il valore di un carattere non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1308">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1309">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1309">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1310">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1310">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1311">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1311">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1312">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1312">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1313">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1313">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As IntPtr, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : nativeint * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1314">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1314">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1315">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1315">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1316">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1316">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1317">The byte read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1317">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1318"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1318"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1319">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1319">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1320">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1320">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 <span data-ttu-id="138ef-1321">Nell'esempio seguente viene illustrato come utilizzare il <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> metodo per leggere il valore di un carattere non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1321">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> method to read the value of an unmanaged character.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadByte-IntPtr-int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte-IntPtr-int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1322">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1322">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1323">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1323">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1324">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1324">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public static byte ReadByte (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ReadByte([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadByte (ptr As Object, ofs As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ReadByte(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadByte : obj * int -&gt; byte" Usage="System.Runtime.InteropServices.Marshal.ReadByte (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1325">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1325">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1326">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1326">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1327">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1327">Reads a single byte at a given offset (or index) from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1328">The byte read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1328">The byte read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1329"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1329"><xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1330">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1330">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1331">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1331">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1332">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1332">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1333">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1333">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1334">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1334">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1335">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1335">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1336">Reads a 16-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1336">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1337">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1337">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1338">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1338">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1339">Reads a 16-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1339">Reads a 16-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1340">The 16-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1340">The 16-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1341"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> dispone di un offset implicito di 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-1341"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> has an implied offset of 0.</span></span> <span data-ttu-id="138ef-1342">Questo metodo consente l'interazione diretta con un tipo C non gestito `Int16` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1342">This method enables direct interaction with an unmanaged C-style `Int16` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1343">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1343">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1344">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1344">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="138ef-1345">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> metodo per leggere il valore di una funzione non gestita `short` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1345">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1346">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1346">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1347">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1347">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1348">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1348">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1349">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1349">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1350">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1350">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As IntPtr, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : nativeint * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1351">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1351">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1352">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1352">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1353">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1353">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1354">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1354">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1355"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1355"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1356">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1356">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1357">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1357">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 <span data-ttu-id="138ef-1358">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> metodo per leggere il valore di una funzione non gestita `short` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1358">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> method to read the value of an unmanaged `short` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt16-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1359">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1359">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1360">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1360">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1361">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1361">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt16">
      <MemberSignature Language="C#" Value="public static short ReadInt16 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ReadInt16([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt16(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt16 (ptr As Object, ofs As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ReadInt16(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt16 : obj * int -&gt; int16" Usage="System.Runtime.InteropServices.Marshal.ReadInt16 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1362">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1362">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1363">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1363">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1364">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1364">Reads a 16-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1365">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1365">The 16-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1366"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1366"><xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1367">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1367">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1368">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1368">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1369">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1369">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1370">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1370">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1371">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1371">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1372">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1372">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1373">Reads a 32-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1373">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1374">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1374">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1375">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1375">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1376">Reads a 32-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1376">Reads a 32-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1377">The 32-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1377">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1378"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> dispone di un offset implicito di 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-1378"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> has an implied offset of 0.</span></span> <span data-ttu-id="138ef-1379">Questo metodo consente l'interazione diretta con un tipo C non gestito `Int32` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1379">This method enables direct interaction with an unmanaged C-style `Int32` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1380">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1380">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1381">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1381">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="138ef-1382">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> metodo per leggere il valore di una funzione non gestita `int` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1382">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1383">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1383">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1384">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1384">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1385">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1385">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1386">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1386">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1387">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1387">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As IntPtr, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : nativeint * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1388">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1388">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1389">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1389">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1390">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1390">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1391">The 32-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1391">The 32-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1392"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> Abilita l'interazione diretta con una matrice con segno a 32 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1392"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1393">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1393">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1394">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1394">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 <span data-ttu-id="138ef-1395">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> metodo per leggere il valore di una funzione non gestita `int` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1395">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> method to read the value of an unmanaged `int` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt32-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1396">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1396">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1397">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1397">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1398">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1398">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt32">
      <MemberSignature Language="C#" Value="public static int ReadInt32 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReadInt32([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt32(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt32 (ptr As Object, ofs As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReadInt32(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt32 : obj * int -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReadInt32 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1399">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1399">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1400">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1400">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1401">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1401">Reads a 32-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1402">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1402">The 32-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1403"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> Abilita l'interazione diretta con una matrice con segno a 32 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1403"><xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1404">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1404">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1405">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1405">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1406">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1406">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1407">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1407">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1408">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1408">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1409">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1409">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1410">Reads a 64-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1410">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1411">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1411">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1412">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1412">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1413">Reads a 64-bit signed integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1413">Reads a 64-bit signed integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1414">The 64-bit signed integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1414">The 64-bit signed integer read from unmanaged memory.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1415"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> dispone di un offset implicito di 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-1415"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> has an implied offset of 0.</span></span> <span data-ttu-id="138ef-1416">Questo metodo consente l'interazione diretta con un tipo C non gestito `Int64` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1416">This method enables direct interaction with an unmanaged C-style `Int64` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1417">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1417">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1418">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1418">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="138ef-1419">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> metodo per leggere il valore di una funzione non gestita `__int64` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1419">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1420">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1420">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1421">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1421">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1422">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1422">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1423">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1423">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1424">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1424">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As IntPtr, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : nativeint * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1425">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1425">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1426">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1426">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1427">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1427">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1428">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1428">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1429"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> Abilita l'interazione diretta con una matrice con segno a 64 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1429"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1430">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1430">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1431">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1431">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 <span data-ttu-id="138ef-1432">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> metodo per leggere il valore di una funzione non gestita `__int64` variabile.</span><span class="sxs-lookup"><span data-stu-id="138ef-1432">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> method to read the value of an unmanaged `__int64` variable.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadInt64-IntPtr-Int/cpp/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1433">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1433">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1434">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1434">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1435">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1435">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadInt64">
      <MemberSignature Language="C#" Value="public static long ReadInt64 (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ReadInt64([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadInt64(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadInt64 (ptr As Object, ofs As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ReadInt64(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadInt64 : obj * int -&gt; int64" Usage="System.Runtime.InteropServices.Marshal.ReadInt64 (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1436">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1436">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1437">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1437">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1438">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1438">Reads a 64-bit signed integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1439">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1439">The 64-bit signed integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1440"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> Abilita l'interazione diretta con una matrice con segno a 64 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1440"><xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1441">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1441">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1442">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1442">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1443">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1443">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1444">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1444">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1445">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1445">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1446">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1446">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1447">Reads a processor native sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1447">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1448">Reading from unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1448">Reading from unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr ptr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1449">The address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1449">The address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1450">Reads a processor native-sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1450">Reads a processor native-sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1451">The integer read from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1451">The integer read from unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1452">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1452">A 32 bit integer is returned on 32 bit machines and a 64 bit integer is returned on 64 bit machines.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1453"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> dispone di un offset implicito di 0.</span><span class="sxs-lookup"><span data-stu-id="138ef-1453"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> has an implied offset of 0.</span></span> <span data-ttu-id="138ef-1454">Questo metodo consente l'interazione diretta con un tipo C non gestito `IntPtr` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1454">This method enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1455">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1455">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1456">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1456">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1457">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1457">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1458">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1458">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1459">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1459">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1460">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1460">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1461">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1461">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (IntPtr ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr(native int ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As IntPtr, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(IntPtr ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1462">The base address in unmanaged memory from which to read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1462">The base address in unmanaged memory from which to read.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1463">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1463">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1464">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1464">Reads a processor native sized integer at a given offset from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1465">The integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1465">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1466"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> Abilita l'interazione diretta con un tipo C non gestito `IntPtr` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1466"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1467">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1467">Reading from unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1468">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1468">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1469">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1469">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1470">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1470">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1471">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1471">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReadByte(System.Object,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ReadIntPtr (object ptr, int ofs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReadIntPtr([in]object ptr, int32 ofs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReadIntPtr(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadIntPtr (ptr As Object, ofs As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReadIntPtr(System::Object ^ ptr, int ofs);" />
      <MemberSignature Language="F#" Value="static member ReadIntPtr : obj * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReadIntPtr (ptr, ofs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1472">The base address in unmanaged memory of the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1472">The base address in unmanaged memory of the source object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1473">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1473">An additional byte offset, which is added to the <c>ptr</c> parameter before reading.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1474">Reads a processor native sized integer from unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1474">Reads a processor native sized integer from unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1475">The integer read from unmanaged memory at the given offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1475">The integer read from unmanaged memory at the given offset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1476"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> Abilita l'interazione diretta con un tipo C non gestito `IntPtr` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di leggere i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1476"><xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before reading its element values.</span></span>  
  
 <span data-ttu-id="138ef-1477">La lettura da posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1477">Reading from unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1478">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1478">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1479">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1479">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1480">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1480">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1481">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1481">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1482">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1482">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocCoTaskMem">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocCoTaskMem (IntPtr pv, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocCoTaskMem(native int pv, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocCoTaskMem (pv As IntPtr, cb As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocCoTaskMem(IntPtr pv, int cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocCoTaskMem : nativeint * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="138ef-1483">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1483">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="138ef-1484">The new size of the allocated block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1484">The new size of the allocated block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1485">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1485">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocCoTaskMem(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1486">An integer representing the address of the reallocated block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1486">An integer representing the address of the reallocated block of memory.</span>
          </span>
          <span data-ttu-id="138ef-1487">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1487">This memory must be released with <see cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1488"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> è uno dei due metodi di riallocazione di memoria nel <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1488"><xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A> is one of two memory reallocation methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="138ef-1489">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> è l'altro.) Inizio del contenuto della memoria riallocata è lo stesso come il contenuto originale. Tuttavia, l'intero blocco di memoria può trovarsi in un percorso diverso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1489">(<xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is the other.) The beginning of the reallocated memory content is the same as the original content; however, the entire memory block can be in a different location.</span></span> <span data-ttu-id="138ef-1490">Questo metodo espone il modello COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) funzione, che si intende l'allocatore di memoria delle attività COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-1490">This method exposes the COM [CoTaskMemRealloc](http://go.microsoft.com/fwlink/?LinkId=148778) function, which is referred to as the COM task memory allocator.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1491">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1491">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1492">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1492">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1493">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1493">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ReAllocHGlobal">
      <MemberSignature Language="C#" Value="public static IntPtr ReAllocHGlobal (IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ReAllocHGlobal(native int pv, native int cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReAllocHGlobal(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReAllocHGlobal (pv As IntPtr, cb As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ReAllocHGlobal(IntPtr pv, IntPtr cb);" />
      <MemberSignature Language="F#" Value="static member ReAllocHGlobal : nativeint * nativeint -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.ReAllocHGlobal (pv, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pv" Type="System.IntPtr" />
        <Parameter Name="cb" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pv">
          <span data-ttu-id="138ef-1494">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1494">A pointer to memory allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="138ef-1495">The new size of the allocated block.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1495">The new size of the allocated block.</span>
          </span>
          <span data-ttu-id="138ef-1496">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1496">This is not a pointer; it is the byte count you are requesting, cast to type <see cref="T:System.IntPtr" />.</span>
          </span>
          <span data-ttu-id="138ef-1497">If you pass a pointer, it is treated as a size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1497">If you pass a pointer, it is treated as a size.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1498">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1498">Resizes a block of memory previously allocated with <see cref="M:System.Runtime.InteropServices.Marshal.AllocHGlobal(System.IntPtr)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1499">A pointer to the reallocated memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1499">A pointer to the reallocated memory.</span>
          </span>
          <span data-ttu-id="138ef-1500">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1500">This memory must be released using <see cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1501"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> è uno dei riallocazione della memoria due metodi dell'API nel <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1501"><xref:System.Runtime.InteropServices.Marshal.ReAllocHGlobal%2A> is one of two memory reallocation API methods in the <xref:System.Runtime.InteropServices.Marshal> class.</span></span> <span data-ttu-id="138ef-1502">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> è l'altro.)</span><span class="sxs-lookup"><span data-stu-id="138ef-1502">(<xref:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem%2A?displayProperty=nameWithType> is the other.)</span></span>  
  
 <span data-ttu-id="138ef-1503">Questo metodo espone Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) funzione da Kernel32.dll.</span><span class="sxs-lookup"><span data-stu-id="138ef-1503">This method exposes the Win32 [GlobalReAlloc](http://go.microsoft.com/fwlink/?LinkId=148780) function from Kernel32.dll.</span></span> <span data-ttu-id="138ef-1504">Il puntatore restituito può essere diverso dall'originale.</span><span class="sxs-lookup"><span data-stu-id="138ef-1504">The returned pointer can differ from the original.</span></span> <span data-ttu-id="138ef-1505">Se è diverso, il contenuto del blocco di memoria originale è stato copiato nel nuovo blocco e il blocco di memoria originale è stato liberato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1505">If it is different, the contents of the original memory block have been copied to the new block, and the original memory block has been freed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1506">There is insufficient memory to satisfy the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1506">There is insufficient memory to satisfy the request.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1507">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1507">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1508">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1508">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.ReAllocCoTaskMem(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeHGlobal(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public static int Release (IntPtr pUnk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Release(native int pUnk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.Release(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Release (pUnk As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Release(IntPtr pUnk);" />
      <MemberSignature Language="F#" Value="static member Release : nativeint -&gt; int" Usage="System.Runtime.InteropServices.Marshal.Release pUnk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnk" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="pUnk">
          <span data-ttu-id="138ef-1509">The interface to release.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1509">The interface to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1510">Decrements the reference count on the specified interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1510">Decrements the reference count on the specified interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1511">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1511">The new value of the reference count on the interface specified by the <paramref name="pUnk" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1512">Common language runtime gestisce il conteggio dei riferimenti di un oggetto COM per l'utente, rendendo inutile utilizzare direttamente questo metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1512">The common language runtime manages the reference count of a COM object for you, making it unnecessary to use this method directly.</span></span> <span data-ttu-id="138ef-1513">Usare questo valore solo per scopi di test.</span><span class="sxs-lookup"><span data-stu-id="138ef-1513">Use this value only for testing purposes.</span></span> <span data-ttu-id="138ef-1514">In rari casi, ad esempio per test di un gestore di marshalling personalizzato, si potrebbe essere necessario modificare manualmente la durata dell'oggetto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1514">In rare cases, such as testing a custom marshaler, you might find it necessary to manipulate an object's lifetime manually.</span></span> <span data-ttu-id="138ef-1515">Solo i programmi che chiamano <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> consigliabile chiamare <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1515">Only programs that call <xref:System.Runtime.InteropServices.Marshal.AddRef%2A?displayProperty=nameWithType> should call <xref:System.Runtime.InteropServices.Marshal.Release%2A>.</span></span> <span data-ttu-id="138ef-1516">La chiamata <xref:System.Runtime.InteropServices.Marshal.Release%2A> l'il conteggio dei riferimenti raggiunge zero genera un comportamento indefinito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1516">Calling <xref:System.Runtime.InteropServices.Marshal.Release%2A> after the reference count has reached zero causes undefined behavior.</span></span>  
  
 <span data-ttu-id="138ef-1517">È possibile chiamare <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, o <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> per ottenere una <xref:System.IntPtr> valore che rappresenta un [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) puntatore a interfaccia da liberare.</span><span class="sxs-lookup"><span data-stu-id="138ef-1517">You can call <xref:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject%2A?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.Marshal.GetIDispatchForObject%2A?displayProperty=nameWithType> to obtain an <xref:System.IntPtr> value that represents a [IUnknown](http://go.microsoft.com/fwlink/?LinkId=148003) interface pointer to release.</span></span> <span data-ttu-id="138ef-1518">È anche possibile usare questi metodi e le <xref:System.Runtime.InteropServices.Marshal.Release%2A> metodo su oggetti gestiti per rilasciare le interfacce COM rappresentate dall'oggetto gestito [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-1518">You can also use these methods and the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method on managed objects to release the COM interfaces represented by the managed object's [COM Callable Wrapper](~/docs/framework/interop/com-callable-wrapper.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1519">Nell'esempio seguente viene illustrato come recuperare un `IUnknown` interfaccia per un oggetto gestito usando la <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1519">The following example demonstrates how to retrieve an `IUnknown` interface for a managed object using the <xref:System.Runtime.InteropServices.Marshal.GetIUnknownForObject%2A> method.</span></span> <span data-ttu-id="138ef-1520">Nell'esempio viene quindi rilascia il puntatore di interfaccia chiamando il <xref:System.Runtime.InteropServices.Marshal.Release%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1520">The example then releases the interface pointer by calling the <xref:System.Runtime.InteropServices.Marshal.Release%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.GetIUnknownForObject-release#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.GetIUnknownForObject-release/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1521">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1521">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1522">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1522">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.AddRef(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.QueryInterface(System.IntPtr,System.Guid@,System.IntPtr@)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIUnknownForObject(System.Object)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseComObject">
      <MemberSignature Language="C#" Value="public static int ReleaseComObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ReleaseComObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReleaseComObject (o As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ReleaseComObject(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member ReleaseComObject : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.ReleaseComObject o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="138ef-1523">The COM object to release.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1523">The COM object to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1524">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1524">Decrements the reference count of the [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) associated with the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1525">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1525">The new value of the reference count of the RCW associated with <paramref name="o" />.</span>
          </span>
          <span data-ttu-id="138ef-1526">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1526">This value is typically zero since the RCW keeps just one reference to the wrapped COM object regardless of the number of managed clients calling it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1527">Questo metodo viene utilizzato per controllare in modo esplicito la durata di un oggetto COM dal codice gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1527">This method is used to explicitly control the lifetime of a COM object used from managed code.</span></span> <span data-ttu-id="138ef-1528">È consigliabile utilizzare questo metodo per liberare l'oggetto COM sottostante che contiene riferimenti alle risorse in modo tempestivo o quando gli oggetti devono essere liberati in un ordine specifico.</span><span class="sxs-lookup"><span data-stu-id="138ef-1528">You should use this method to free the underlying COM object that holds references to resources in a timely manner or when objects must be freed in a specific order.</span></span>  
  
 <span data-ttu-id="138ef-1529">Ogni volta che un puntatore a interfaccia COM entra in common language runtime (CLR), ne viene eseguito il wrapping in un oggetto RCW.</span><span class="sxs-lookup"><span data-stu-id="138ef-1529">Every time a COM interface pointer enters the common language runtime (CLR), it is wrapped in an RCW.</span></span>  
  
 <span data-ttu-id="138ef-1530">L'oggetto RCW presenta un conteggio di riferimento che viene incrementato ogni volta che viene eseguito il mapping di un puntatore a interfaccia COM a esso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1530">The RCW has a reference count that is incremented every time a COM interface pointer is mapped to it.</span></span> <span data-ttu-id="138ef-1531">Il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> metodo decrementa il conteggio riferimenti di un RCW.</span><span class="sxs-lookup"><span data-stu-id="138ef-1531">The <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method decrements the reference count of an RCW.</span></span> <span data-ttu-id="138ef-1532">Quando il conteggio dei riferimenti arriva a zero, il runtime rilascia tutti i relativi riferimenti all'oggetto COM non gestito e genera un <xref:System.NullReferenceException?displayProperty=nameWithType> se si prova a usare l'oggetto ulteriormente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1532">When the reference count reaches zero, the runtime releases all its references on the unmanaged COM object, and throws a <xref:System.NullReferenceException?displayProperty=nameWithType> if you attempt to use the object further.</span></span> <span data-ttu-id="138ef-1533">Se la stessa interfaccia COM viene passata più volte da non gestito a codice gestito, il conteggio dei riferimenti del wrapper viene incrementato ogni volta e chiamata <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> restituisce il numero di riferimenti rimanenti.</span><span class="sxs-lookup"><span data-stu-id="138ef-1533">If the same COM interface is passed more than one time from unmanaged to managed code, the reference count on the wrapper is incremented every time, and calling <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> returns the number of remaining references.</span></span>  
  
 <span data-ttu-id="138ef-1534">Questo metodo consente di forzare una versione di conteggio di riferimento RCW in modo che si verifica con precisione quando si desidera venga.</span><span class="sxs-lookup"><span data-stu-id="138ef-1534">This method enables you to force an RCW reference count release so that it occurs precisely when you want it to.</span></span> <span data-ttu-id="138ef-1535">Tuttavia, un utilizzo improprio di <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> potrebbe rallentare l'applicazione non riesce, o potrebbe causare una violazione di accesso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1535">However, improper use of <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> may cause your application to fail, or may cause an access violation.</span></span>  
  
 <span data-ttu-id="138ef-1536">Si consideri uno scenario in cui il codice gestito in un dominio applicazione trattenute un RCW che rappresenta un componente COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-1536">Consider a scenario in which managed code in an application domain is holding onto an RCW that represents a COM component.</span></span> <span data-ttu-id="138ef-1537">Se si chiama il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> metodo sul RCW, sarà in grado di accedere a RCW il codice gestito e verrà generato un <xref:System.Runtime.InteropServices.InvalidComObjectException> eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1537">If you call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the RCW, the managed code will be unable to access the RCW and will raise an <xref:System.Runtime.InteropServices.InvalidComObjectException> exception.</span></span>  
  
 <span data-ttu-id="138ef-1538">Se una chiamata al wrapper RCW è in esecuzione quando viene rilasciato l'oggetto RCW, può verificarsi un errore più grave.</span><span class="sxs-lookup"><span data-stu-id="138ef-1538">A more serious error may occur if a call to the RCW is executing when the RCW is released.</span></span> <span data-ttu-id="138ef-1539">In questo caso, è probabile che il thread che effettua la chiamata causerà una violazione di accesso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1539">In this case, there is a good chance that the thread making the call will cause an access violation.</span></span> <span data-ttu-id="138ef-1540">Tuttavia, potrebbe venire danneggiata memoria del processo e il processo può continuare per l'esecuzione fino a quando non riesce per motivi molto difficili da eseguire il debug.</span><span class="sxs-lookup"><span data-stu-id="138ef-1540">However, process memory may become corrupted, and the process may continue to run until it fails for reasons that are very difficult to debug.</span></span>  
  
 <span data-ttu-id="138ef-1541">Questo rischio è maggiore quando il componente COM che è in uso è un singleton, per il motivo seguente: CLR consente di attivare i componenti COM chiamando il componente COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) funzione, che restituisce lo stesso puntatore di interfaccia ogni ora che viene chiamato per i componenti COM singleton.</span><span class="sxs-lookup"><span data-stu-id="138ef-1541">This risk is compounded when the COM component that is being used is a singleton, for the following reason: The CLR activates COM components by calling the COM [CoCreateInstance](http://go.microsoft.com/fwlink/?LinkID=142894) function, which returns the same interface pointer every time it is called for singleton COM components.</span></span> <span data-ttu-id="138ef-1542">Pertanto, separati e indipendente parti del codice gestito in un dominio applicazione possono utilizzare l'oggetto RCW stesso per un componente COM singleton e se il valore uno chiama il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> metodo del componente COM, l'altra verrà interrotta.</span><span class="sxs-lookup"><span data-stu-id="138ef-1542">Thus, separate and independent pieces of managed code in an application domain can be using the same RCW for a singleton COM component, and if either one calls the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method on the COM component, the other will be broken.</span></span>  
  
 <span data-ttu-id="138ef-1543">Pertanto, utilizzare il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> solo se assolutamente necessario.</span><span class="sxs-lookup"><span data-stu-id="138ef-1543">Therefore, use the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> only if it is absolutely required.</span></span> <span data-ttu-id="138ef-1544">Se si desidera chiamare questo metodo per garantire che un componente COM viene rilasciato in un determinato momento, è consigliabile usare il <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> metodo invece.</span><span class="sxs-lookup"><span data-stu-id="138ef-1544">If you want to call this method to ensure that a COM component is released at a determined time, consider using the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method instead.</span></span> <span data-ttu-id="138ef-1545"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> rilascerà il componente COM sottostante indipendentemente da quante volte è stato immesso nuovamente CLR.</span><span class="sxs-lookup"><span data-stu-id="138ef-1545"><xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> will release the underlying COM component regardless of how many times it has re-entered the CLR.</span></span> <span data-ttu-id="138ef-1546">Il conteggio dei riferimenti interni del RCW viene incrementato di uno ogni volta che il componente COM immette nuovamente il CLR.</span><span class="sxs-lookup"><span data-stu-id="138ef-1546">The internal reference count of the RCW is incremented by one every time the COM component re-enters the CLR.</span></span> <span data-ttu-id="138ef-1547">Pertanto, è possibile chiamare il <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> metodo in un ciclo fino a quando il valore restituito è zero.</span><span class="sxs-lookup"><span data-stu-id="138ef-1547">Therefore, you could call the <xref:System.Runtime.InteropServices.Marshal.ReleaseComObject%2A> method in a loop until the value returned is zero.</span></span> <span data-ttu-id="138ef-1548">Ciò consente di ottenere lo stesso risultato di <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1548">This achieves the same result as the <xref:System.Runtime.InteropServices.Marshal.FinalReleaseComObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1549">
            <paramref name="o" /> is not a valid COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1549">
              <paramref name="o" /> is not a valid COM object.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="138ef-1550">
            <paramref name="o" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1550">
              <paramref name="o" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1551">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1551">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1552">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1552">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)" />
        <altmember cref="T:System.NullReferenceException" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseThreadCache">
      <MemberSignature Language="C#" Value="public static void ReleaseThreadCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseThreadCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ReleaseThreadCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseThreadCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseThreadCache();" />
      <MemberSignature Language="F#" Value="static member ReleaseThreadCache : unit -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ReleaseThreadCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1553">Releases the thread cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1553">Releases the thread cache.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1554">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1554">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1555">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1555">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToBSTR (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToBSTR(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToBSTR (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToBSTR(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToBSTR : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1556">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1556">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1557">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1557">Allocates an unmanaged [binary string (BSTR)](https://msdn.microsoft.com/library/ms221069\(v=vs.85\).aspx) and copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1558">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1558">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1559">Il <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> metodo è utile per effettuare il marshalling personalizzato o quando la combinazione di codice gestito e.</span><span class="sxs-lookup"><span data-stu-id="138ef-1559">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToBSTR%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1560">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, liberare sempre le `BSTR` al termine, chiamare il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1560">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1561">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1561">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-1562">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1562">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1563">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1563">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1564">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1564">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1565">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1565">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="138ef-1566">
            <para>Questo metodo è supportato solo nei computer che eseguono Windows 2000 Service Pack 3 o versione successiva.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1566">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1567">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1567">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1568">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1568">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1569">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1569">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1570">Il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> metodo è utile per effettuare il marshalling personalizzato o quando la combinazione di codice gestito e.</span><span class="sxs-lookup"><span data-stu-id="138ef-1570">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1571">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1571">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A>.</span></span> <span data-ttu-id="138ef-1572">Vengono copiati i caratteri della stringa di caratteri ANSI.</span><span class="sxs-lookup"><span data-stu-id="138ef-1572">The characters of the string are copied as ANSI characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1573">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> metodo per effettuare il marshalling e decrittografare il contenuto di un <xref:System.Security.SecureString> oggetto in un blocco di memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1573">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="138ef-1574">Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> metodo per azzerare ed eliminare il blocco non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1574">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1575">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1575">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-1576">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1576">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1577">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1577">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1578">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1578">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1579">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1579">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="138ef-1580">
            <para>Questo metodo è supportato solo nei computer che eseguono Windows 2000 Service Pack 3 o versione successiva.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1580">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToCoTaskMemUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToCoTaskMemUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToCoTaskMemUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToCoTaskMemUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToCoTaskMemUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1581">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1581">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1582">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1582">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1583">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1583">The address, in unmanaged memory, where the <paramref name="s" /> parameter was copied to, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1584">Il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> metodo è utile per effettuare il marshalling personalizzato o quando la combinazione di codice gestito e.</span><span class="sxs-lookup"><span data-stu-id="138ef-1584">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1585">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1585">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method.</span></span> <span data-ttu-id="138ef-1586">Vengono copiati i caratteri della stringa come caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="138ef-1586">The characters of the string are copied as Unicode characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1587">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> metodo per effettuare il marshalling e decrittografare il contenuto di un <xref:System.Security.SecureString> oggetto in un blocco di memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1587">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="138ef-1588">Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> metodo per azzerare ed eliminare il blocco non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1588">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1589">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1589">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-1590">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1590">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1591">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1591">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1592">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1592">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1593">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1593">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="138ef-1594">
            <para>Questo metodo è supportato solo nei computer che eseguono Windows 2000 Service Pack 3 o versione successiva.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1594">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocAnsi (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocAnsi(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocAnsi (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocAnsi(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocAnsi : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1595">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1595">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1596">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1596">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1597">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1597">The address, in unmanaged memory, to where the <paramref name="s" /> parameter was copied, or 0 if a null object was supplied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1598">Il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> metodo è utile per effettuare il marshalling personalizzato o quando la combinazione di codice gestito e.</span><span class="sxs-lookup"><span data-stu-id="138ef-1598">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1599">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1599">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1600">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> metodo per effettuare il marshalling e decrittografare il contenuto di un <xref:System.Security.SecureString> oggetto in un blocco di memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1600">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="138ef-1601">Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> metodo per azzerare ed eliminare il blocco non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1601">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1602">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1602">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-1603">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1603">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1604">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1604">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1605">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1605">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1606">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1606">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="138ef-1607">
            <para>Questo metodo è supportato solo nei computer che eseguono Windows 2000 Service Pack 3 o versione successiva.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1607">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SecureStringToGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static IntPtr SecureStringToGlobalAllocUnicode (System.Security.SecureString s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int SecureStringToGlobalAllocUnicode(class System.Security.SecureString s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SecureStringToGlobalAllocUnicode (s As SecureString) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr SecureStringToGlobalAllocUnicode(System::Security::SecureString ^ s);" />
      <MemberSignature Language="F#" Value="static member SecureStringToGlobalAllocUnicode : System.Security.SecureString -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1608">The managed object to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1608">The managed object to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1609">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1609">Copies the contents of a managed <see cref="T:System.Security.SecureString" /> object into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1610">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1610">The address, in unmanaged memory, where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is a <see cref="T:System.Security.SecureString" /> object whose length is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1611">Il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> metodo è utile per effettuare il marshalling personalizzato o per l'uso durante la combinazione di codice gestito e.</span><span class="sxs-lookup"><span data-stu-id="138ef-1611">The <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1612">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando la <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1612">Because this method allocates the unmanaged memory required for a string, always free the memory by calling the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1613">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> metodo con non gestito `LogonUser` funzione di eseguire la rappresentazione con il <xref:System.Security.SecureString> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1613">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="138ef-1614">L'esempio Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> metodo per azzerare e liberare il riferimento di stringa non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1614">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1615">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1615">The <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="138ef-1616">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1616">The current computer is not running Windows 2000 Service Pack 3 or later.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1617">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1617">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1618">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1618">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1619">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1619">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <block subset="none" type="usage">
          <span data-ttu-id="138ef-1620">
            <para>Questo metodo è supportato solo nei computer che eseguono Windows 2000 Service Pack 3 o versione successiva.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1620">
              <para>This method is supported only on computers running Windows 2000 Service Pack 3 or later.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetComObjectData">
      <MemberSignature Language="C#" Value="public static bool SetComObjectData (object obj, object key, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetComObjectData(object obj, object key, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetComObjectData (obj As Object, key As Object, data As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetComObjectData(System::Object ^ obj, System::Object ^ key, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="static member SetComObjectData : obj * obj * obj -&gt; bool" Usage="System.Runtime.InteropServices.Marshal.SetComObjectData (obj, key, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="138ef-1621">The COM object in which to store the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1621">The COM object in which to store the data.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="138ef-1622">The key in the internal hash table of the COM object in which to store the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1622">The key in the internal hash table of the COM object in which to store the data.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="138ef-1623">The data to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1623">The data to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1624">Sets data referenced by the specified key in the specified COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1624">Sets data referenced by the specified key in the specified COM object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1625">
            <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1625">
              <see langword="true" /> if the data was set successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1626">Tutti gli oggetti COM di cui è stato eseguito il wrapping in un [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) presentano una tabella hash associata, a cui <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> aggiunge i dati.</span><span class="sxs-lookup"><span data-stu-id="138ef-1626">All COM objects wrapped in a [Runtime Callable Wrapper](~/docs/framework/interop/runtime-callable-wrapper.md) (RCW) have an associated hash table, to which <xref:System.Runtime.InteropServices.Marshal.SetComObjectData%2A> adds data.</span></span> <span data-ttu-id="138ef-1627"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> Recupera i dati dalla tabella hash.</span><span class="sxs-lookup"><span data-stu-id="138ef-1627"><xref:System.Runtime.InteropServices.Marshal.GetComObjectData%2A?displayProperty=nameWithType> retrieves data from the hash table.</span></span> <span data-ttu-id="138ef-1628">Non si deve mai necessario chiamarli dal codice.</span><span class="sxs-lookup"><span data-stu-id="138ef-1628">You should never have to call either method from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1629">
            <paramref name="obj" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1629">
              <paramref name="obj" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1630">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1630">-or-  <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1631">
            <paramref name="obj" /> is not a COM object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1631">
              <paramref name="obj" /> is not a COM object.</span>
          </span>
          <span data-ttu-id="138ef-1632">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1632">-or-  <paramref name="obj" /> is a [!INCLUDE[wrt](~/includes/wrt-md.md)] object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1633">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1633">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1634">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1634">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SizeOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1635">Returns the unmanaged size, in bytes, of a class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1635">Returns the unmanaged size, in bytes, of a class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (object structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(object structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (structure As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(System::Object ^ structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : obj -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="138ef-1636">The object whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1636">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1637">Returns the unmanaged size of an object in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1637">Returns the unmanaged size of an object in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1638">The size of the specified object in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1638">The size of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1639">Questo metodo accetta un'istanza di una struttura, che può essere un tipo riferimento o un tipo valore boxed.</span><span class="sxs-lookup"><span data-stu-id="138ef-1639">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="138ef-1640">Il layout deve essere sequenziale o esplicito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1640">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="138ef-1641">Le dimensioni restituite sono le dimensioni dell'oggetto non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1641">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="138ef-1642">Le dimensioni e non gestite di un oggetto possono essere diverso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1642">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="138ef-1643">Per i tipi di carattere, la dimensione è influenzata il <xref:System.Runtime.InteropServices.CharSet> applicato alla classe di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1643">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="138ef-1644">È possibile usare la <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> metodo per determinare la quantità di memoria non gestita per allocare usando il <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> e <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1644">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1645">Nell'esempio seguente crea una struttura gestita, li trasferisce in memoria non gestita e quindi li trasferisce alla memoria gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1645">The following example creates a managed structure, transfers it to unmanaged memory, and then transfers it back to managed memory.</span></span> <span data-ttu-id="138ef-1646">Questo esempio viene usato il <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> metodo per determinare la quantità di memoria non gestita da allocare.</span><span class="sxs-lookup"><span data-stu-id="138ef-1646">This example uses the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method to determine how much unmanaged memory to allocate.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1647">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1647">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf">
      <MemberSignature Language="C#" Value="public static int SizeOf (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf (t As Type) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int SizeOf(Type ^ t);" />
      <MemberSignature Language="F#" Value="static member SizeOf : Type -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">
          <span data-ttu-id="138ef-1648">The type whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1648">The type whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1649">Returns the size of an unmanaged type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1649">Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1650">The size of the specified type in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1650">The size of the specified type in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1651">È possibile usare questo metodo quando non è una struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-1651">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="138ef-1652">Il layout deve essere sequenziale o esplicito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1652">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="138ef-1653">Le dimensioni restituite sono le dimensioni di tipo non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1653">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="138ef-1654">Le dimensioni e non gestite di un oggetto possono essere diverso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1654">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="138ef-1655">Per i tipi di carattere, la dimensione è influenzata il <xref:System.Runtime.InteropServices.CharSet> applicato alla classe di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1655">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1656">Nel codice riportato di seguito viene illustrata la chiamata al metodo <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1656">The following example demonstrates calling the <xref:System.Runtime.InteropServices.Marshal.SizeOf%2A> method.</span></span> <span data-ttu-id="138ef-1657">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1657">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#3](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#3)]
 [!code-csharp[Marshal#3](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#3)]
 [!code-vb[Marshal#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1658">The <paramref name="t" /> parameter is a generic type definition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1658">The <paramref name="t" /> parameter is a generic type definition.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1659">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1659">The <paramref name="t" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.CharSet" />
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf();" />
      <MemberSignature Language="F#" Value="static member SizeOf : unit -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1660">Tipo di cui verrà restituita la dimensione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1660">The type whose size is to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="138ef-1661">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the size of an unmanaged type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1661">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the size of an unmanaged type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1662">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1662">The size, in bytes, of the type that is specified by the <typeparamref name="T" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1663">È possibile usare questo metodo quando non è una struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-1663">You can use this method when you do not have a structure.</span></span> <span data-ttu-id="138ef-1664">Il layout deve essere sequenziale o esplicito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1664">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="138ef-1665">Le dimensioni restituite sono le dimensioni di tipo non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1665">The size returned is the size of the unmanaged type.</span></span> <span data-ttu-id="138ef-1666">Le dimensioni e non gestite di un oggetto possono essere diverso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1666">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="138ef-1667">Per i tipi di carattere, la dimensione è influenzata il <xref:System.Runtime.InteropServices.CharSet> applicato alla classe di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1667">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int SizeOf&lt;T&gt; (T structure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SizeOf&lt;T&gt;(!!T structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.SizeOf``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SizeOf(Of T) (structure As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int SizeOf(T structure);" />
      <MemberSignature Language="F#" Value="static member SizeOf : 'T -&gt; int" Usage="System.Runtime.InteropServices.Marshal.SizeOf structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1668">Il tipo dei <c>struttura</c> parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1668">The type of the <c>structure</c> parameter.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="138ef-1669">The object whose size is to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1669">The object whose size is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1670">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the unmanaged size of an object of a specified type in bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1670">[Supported in the .NET Framework 4.5.1 and later versions]  Returns the unmanaged size of an object of a specified type in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1671">The size, in bytes, of the specified object in unmanaged code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1671">The size, in bytes, of the specified object in unmanaged code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1672">Questo metodo accetta un'istanza di una struttura, che può essere un tipo riferimento o un tipo valore boxed.</span><span class="sxs-lookup"><span data-stu-id="138ef-1672">This method accepts an instance of a structure, which can be a reference type or a boxed value type.</span></span> <span data-ttu-id="138ef-1673">Il layout deve essere sequenziale o esplicito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1673">The layout must be sequential or explicit.</span></span>  
  
 <span data-ttu-id="138ef-1674">Le dimensioni restituite sono le dimensioni dell'oggetto non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1674">The size returned is the size of the unmanaged object.</span></span> <span data-ttu-id="138ef-1675">Le dimensioni e non gestite di un oggetto possono essere diverso.</span><span class="sxs-lookup"><span data-stu-id="138ef-1675">The unmanaged and managed sizes of an object can differ.</span></span> <span data-ttu-id="138ef-1676">Per i tipi di carattere, la dimensione è influenzata il <xref:System.Runtime.InteropServices.CharSet> applicato alla classe di valore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1676">For character types, the size is affected by the <xref:System.Runtime.InteropServices.CharSet> value applied to that class.</span></span>  
  
 <span data-ttu-id="138ef-1677">È possibile usare la <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> metodo per determinare la quantità di memoria non gestita per allocare usando il <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> e <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1677">You can use the <xref:System.Runtime.InteropServices.Marshal.SizeOf%60%601%28%60%600%29> method to determine how much unmanaged memory to allocate by using the <xref:System.Runtime.InteropServices.Marshal.AllocHGlobal%2A> and <xref:System.Runtime.InteropServices.Marshal.AllocCoTaskMem%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="138ef-1678">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1678">The <paramref name="structure" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StringToBSTR">
      <MemberSignature Language="C#" Value="public static IntPtr StringToBSTR (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToBSTR(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToBSTR(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToBSTR (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToBSTR(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToBSTR : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1679">The managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1679">The managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1680">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1680">Allocates a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) and copies the contents of a managed <see cref="T:System.String" /> into it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1681">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1681">An unmanaged pointer to the <see langword="BSTR" />, or 0 if <paramref name="s" /> is null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1682"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1682"><xref:System.Runtime.InteropServices.Marshal.StringToBSTR%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1683">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, liberare sempre le `BSTR` al termine chiamando <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1683">Because this method allocates the unmanaged memory required for a string, always free the `BSTR` when finished by calling <xref:System.Runtime.InteropServices.Marshal.FreeBSTR%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-1684">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1684">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringBSTR%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1685">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1685">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1686">The length for <paramref name="s" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1686">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1687">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1687">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1688">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1688">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringBSTR(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeBSTR(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1689">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1689">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1690">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1690">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1691">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1691">An integer representing a pointer to the block of memory allocated for the string, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1692"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1692"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1693">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1693">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="138ef-1694">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1694">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-1695">Vengono copiati i caratteri della stringa di caratteri ANSI.</span><span class="sxs-lookup"><span data-stu-id="138ef-1695">The characters of the string are copied as ANSI characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1696">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1696">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1697">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1697">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1698">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1698">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1699">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1699">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1700">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1700">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1701">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1701">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1702">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1702">The allocated memory block, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1703"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> è utile per effettuare il marshalling personalizzato o per l'uso quando si combinano codice non gestito e non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1703"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1704">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1704">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A>.</span></span> <span data-ttu-id="138ef-1705">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1705">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1706">Vengono copiati i caratteri della stringa di caratteri ANSI o Unicode, a seconda del sistema operativo in cui è in esecuzione il codice.</span><span class="sxs-lookup"><span data-stu-id="138ef-1706">The characters of the string are copied as either ANSI or Unicode characters, depending on the operating system where the code is executing.</span></span> <span data-ttu-id="138ef-1707">In Windows 98, vengono copiati i caratteri come caratteri ANSI.</span><span class="sxs-lookup"><span data-stu-id="138ef-1707">On Windows 98, the characters are copied as ANSI characters.</span></span> <span data-ttu-id="138ef-1708">In Windows NT 4.0, Windows 2000, Windows XP e in Windows Server 2003, vengono copiati i caratteri come caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="138ef-1708">On Windows NT 4.0, Windows 2000, Windows XP, and the Windows Server 2003 family, the characters are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1709">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1709">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1710">The length for <paramref name="s" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1710">The length for <paramref name="s" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1711">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1711">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1712">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1712">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1713">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1713">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1714">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1714">Copies the contents of a managed <see cref="T:System.String" /> to a block of memory allocated from the unmanaged COM task allocator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1715">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1715">An integer representing a pointer to the block of memory allocated for the string, or 0 if s is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1716"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> è utile per effettuare il marshalling personalizzato o per l'uso quando si combinano codice non gestito e non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1716"><xref:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1717">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1717">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeCoTaskMem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-1718">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1718">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="138ef-1719">Vengono copiati i caratteri della stringa come caratteri Unicode.</span><span class="sxs-lookup"><span data-stu-id="138ef-1719">The characters of the string are copied as Unicode characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1720">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1720">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1721">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1721">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1722">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1722">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1723">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1723">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static IntPtr StringToCoTaskMemUTF8 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToCoTaskMemUTF8(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToCoTaskMemUTF8 (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToCoTaskMemUTF8(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToCoTaskMemUTF8 : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAnsi">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAnsi (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAnsi(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAnsi (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAnsi(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAnsi : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1724">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1724">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1725">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1725">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format as it copies.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1726">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1726">The address, in unmanaged memory, to where <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1727"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> è utile per effettuare il marshalling personalizzato o quando si usano codice gestito e gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1727"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> is useful for custom marshaling or when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1728">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1728">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="138ef-1729"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1729"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi%2A> provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAnsi%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1730">Questo metodo copia i caratteri null incorporati e include un carattere di terminazione null.</span><span class="sxs-lookup"><span data-stu-id="138ef-1730">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1731">Nell'esempio seguente viene illustrato come convertire il contenuto di un oggetto gestito <xref:System.String> classe nella memoria non gestita e quindi eliminare la memoria non gestita al termine.</span><span class="sxs-lookup"><span data-stu-id="138ef-1731">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/CPP/stringtohglobalansi.cpp#1)]
 [!code-csharp[Runtime.InteropServices.Marshal.StringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAnsi/cs/stringtohglobalansi.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1732">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1732">There is insufficient memory available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1733">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1733">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1734">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1734">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1735">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1735">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.FreeCoTaskMem(System.IntPtr)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalAuto">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalAuto (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalAuto(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalAuto (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalAuto(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalAuto : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalAuto s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1736">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1736">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1737">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1737">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory, converting into ANSI format if required.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1738">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1738">The address, in unmanaged memory, to where the string was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1739"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> è utile per effettuare il marshalling personalizzato o per l'uso quando si combinano codice non gestito e non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1739"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1740">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1740">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="138ef-1741">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1741">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringAuto%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1742">Questo metodo copia i caratteri null incorporati e include un carattere di terminazione null.</span><span class="sxs-lookup"><span data-stu-id="138ef-1742">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1743">Nell'esempio seguente viene illustrato come convertire il contenuto di un oggetto gestito <xref:System.String> classe nella memoria non gestita e quindi eliminare la memoria non gestita al termine.</span><span class="sxs-lookup"><span data-stu-id="138ef-1743">The following example demonstrates how to convert the contents of a managed <xref:System.String> class to unmanaged memory and then dispose of the unmanaged memory when done.</span></span>  
  
 [!code-cpp[Runtime.InteropServices.Marshal.StringToHGlobalAuto#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.StringToHGlobalAuto/CPP/sample.cpp#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1744">There is insufficient memory available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1744">There is insufficient memory available.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1745">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1745">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1746">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1746">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StringToHGlobalUni">
      <MemberSignature Language="C#" Value="public static IntPtr StringToHGlobalUni (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int StringToHGlobalUni(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StringToHGlobalUni(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StringToHGlobalUni (s As String) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr StringToHGlobalUni(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member StringToHGlobalUni : string -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.StringToHGlobalUni s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-1747">A managed string to be copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1747">A managed string to be copied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1748">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1748">Copies the contents of a managed <see cref="T:System.String" /> into unmanaged memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1749">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1749">The address, in unmanaged memory, to where the <paramref name="s" /> was copied, or 0 if <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1750"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> è utile per effettuare il marshalling personalizzato o per l'uso quando si combinano codice non gestito e non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-1750"><xref:System.Runtime.InteropServices.Marshal.StringToHGlobalUni%2A> is useful for custom marshaling or for use when mixing managed and unmanaged code.</span></span> <span data-ttu-id="138ef-1751">Poiché questo metodo consente di allocare la memoria non gestita necessaria per una stringa, sempre liberare la memoria chiamando <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1751">Because this method allocates the unmanaged memory required for a string, always free the memory by calling <xref:System.Runtime.InteropServices.Marshal.FreeHGlobal%2A>.</span></span> <span data-ttu-id="138ef-1752">Questo metodo fornisce la funzionalità opposta di <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1752">This method provides the opposite functionality of <xref:System.Runtime.InteropServices.Marshal.PtrToStringUni%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1753">Questo metodo copia i caratteri null incorporati e include un carattere di terminazione null.</span><span class="sxs-lookup"><span data-stu-id="138ef-1753">This method copies embedded null characters, and includes a terminating null character.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="138ef-1754">The method could not allocate enough native heap memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1754">The method could not allocate enough native heap memory.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="138ef-1755">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1755">The <paramref name="s" /> parameter exceeds the maximum length allowed by the operating system.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1756">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1756">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1757">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1757">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr">
      <MemberSignature Language="C#" Value="public static void StructureToPtr (object structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr(object structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr(System.Object,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr (structure As Object, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StructureToPtr(System::Object ^ structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : obj * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="System.Object" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="structure">
          <span data-ttu-id="138ef-1758">A managed object that holds the data to be marshaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1758">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="138ef-1759">This object must be a structure or an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1759">This object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="138ef-1760">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1760">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="138ef-1761">
            <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1761">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="138ef-1762">The block must contain valid data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1762">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="138ef-1763">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1763">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1764">Marshals data from a managed object to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1764">Marshals data from a managed object to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1765">Se `structure` è un tipo di valore, può essere sottoposto a boxing o conversione unboxing faccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-1765">If `structure` is a value type, it can be boxed or unboxed.</span></span> <span data-ttu-id="138ef-1766">Se si esegue il boxing, è unboxed prima della copia.</span><span class="sxs-lookup"><span data-stu-id="138ef-1766">If it is boxed, it is unboxed before copying.</span></span>  
  
 <span data-ttu-id="138ef-1767">Una classe formattata è un tipo di riferimento il cui layout viene specificato per il <xref:System.Runtime.InteropServices.StructLayoutAttribute> dell'attributo, come uno <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> o <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1767">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1768"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> Copia il contenuto della `structure` pre-allocare blocco di memoria che il `ptr` punta il parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-1768"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="138ef-1769">Se `structure` contiene i tipi di riferimento che il marshalling di puntatori a interfaccia COM (interfacce, classi senza layout, e <xref:System.Object?displayProperty=nameWithType>), gli oggetti gestiti vengono mantenuti attivi con i conteggi dei riferimenti.</span><span class="sxs-lookup"><span data-stu-id="138ef-1769">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="138ef-1770">Tutti gli altri tipi di riferimento (ad esempio, stringhe e matrici) vengono eseguito il marshalling copie.</span><span class="sxs-lookup"><span data-stu-id="138ef-1770">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="138ef-1771">Per rilasciare questi oggetti gestiti o non gestiti, è necessario chiamare il <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> metodo prima che si liberano il blocco di memoria.</span><span class="sxs-lookup"><span data-stu-id="138ef-1771">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A?displayProperty=nameWithType> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="138ef-1772">Se si usa la <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> metodo per copiare un'istanza diversa per il blocco di memoria in un secondo momento, specificare `true` per `fDeleteOld` per rimuovere un riferimento i conteggi per i tipi di riferimento nell'istanza precedente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1772">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="138ef-1773">In caso contrario, le copie di riferimento gestita typesand non gestiti in modo efficace vengono perdite.</span><span class="sxs-lookup"><span data-stu-id="138ef-1773">Otherwise, the managed reference typesand unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="138ef-1774">Il modello generale per l'uso <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> è come segue:</span><span class="sxs-lookup"><span data-stu-id="138ef-1774">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> is as follows:</span></span>  
  
1.  <span data-ttu-id="138ef-1775">Alla prima chiamata per il <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> metodo dopo che è stato allocato un blocco di memoria, `fDeleteOld` deve essere `false`, poiché non sono alcun contenuto da cancellare.</span><span class="sxs-lookup"><span data-stu-id="138ef-1775">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="138ef-1776">Specificare `true` per `fDeleteOld` solo se il blocco contiene dati validi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1776">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="138ef-1777">Se si copia un'istanza diversa per il blocco di memoria e l'oggetto contiene i tipi di riferimento `fDeleteOld` deve essere `true` per liberare i tipi di riferimento nel vecchio contenuto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1777">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="138ef-1778">Se l'oggetto contiene i tipi di riferimento, è necessario chiamare il <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> metodo prima che si liberano il blocco di memoria.</span><span class="sxs-lookup"><span data-stu-id="138ef-1778">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-1779">Per aggiungere una struttura esistente anziché copiarlo, usare il <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> tipo per creare un handle bloccato per la struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-1779">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="138ef-1780">Per informazioni dettagliate su come aggiungere, vedere [copia e blocco](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-1780">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1781">L'esempio seguente crea una struttura gestita, li trasferisce all'utilizzo di memoria non gestita di <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> metodo e quindi trasferita alla memoria gestita tramite il <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-1781">The following example creates a managed structure, transfers it to unmanaged memory using the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method, and then transfers it back to managed memory using the <xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A> method.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.PtrToStructure-SizeOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.PtrToStructure-SizeOf/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1782">
            <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1782">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
          <span data-ttu-id="138ef-1783">-or-  <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1783">-or-  <paramref name="structure" /> is an instance of a generic type (in the .NET Framework 4.5 and earlier versions only).</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1784">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1784">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1785">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1785">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure(System.IntPtr,System.Type)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="StructureToPtr&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void StructureToPtr&lt;T&gt; (T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StructureToPtr&lt;T&gt;(!!T structure, native int ptr, bool fDeleteOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.StructureToPtr``1(``0,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StructureToPtr(Of T) (structure As T, ptr As IntPtr, fDeleteOld As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void StructureToPtr(T structure, IntPtr ptr, bool fDeleteOld);" />
      <MemberSignature Language="F#" Value="static member StructureToPtr : 'T * nativeint * bool -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.StructureToPtr (structure, ptr, fDeleteOld)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="structure" Type="T" />
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="fDeleteOld" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1786">Tipo dell'oggetto gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1786">The type of the managed object.</span>
          </span>
        </typeparam>
        <param name="structure">
          <span data-ttu-id="138ef-1787">A managed object that holds the data to be marshaled.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1787">A managed object that holds the data to be marshaled.</span>
          </span>
          <span data-ttu-id="138ef-1788">The object must be a structure or an instance of a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1788">The object must be a structure or an instance of a formatted class.</span>
          </span>
        </param>
        <param name="ptr">
          <span data-ttu-id="138ef-1789">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1789">A pointer to an unmanaged block of memory, which must be allocated before this method is called.</span>
          </span>
        </param>
        <param name="fDeleteOld">
          <span data-ttu-id="138ef-1790">
            <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1790">
              <see langword="true" /> to call the <see cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" /> method on the <c>ptr</c> parameter before this method copies the data.</span>
          </span>
          <span data-ttu-id="138ef-1791">The block must contain valid data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1791">The block must contain valid data.</span>
          </span>
          <span data-ttu-id="138ef-1792">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1792">Note that passing <see langword="false" /> when the memory block already contains data can lead to a memory leak.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1793">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1793">[Supported in the .NET Framework 4.5.1 and later versions]  Marshals data from a managed object of a specified type to an unmanaged block of memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1794">Una classe formattata è un tipo di riferimento il cui layout viene specificato per il <xref:System.Runtime.InteropServices.StructLayoutAttribute> dell'attributo, come uno <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> o <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="138ef-1794">A formatted class is a reference type whose layout is specified by the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute, as either <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType> or <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="138ef-1795"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> Copia il contenuto della `structure` pre-allocare blocco di memoria che il `ptr` punta il parametro.</span><span class="sxs-lookup"><span data-stu-id="138ef-1795"><xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> copies the contents of `structure` to the pre-allocated block of memory that the `ptr` parameter points to.</span></span> <span data-ttu-id="138ef-1796">Se `structure` contiene i tipi di riferimento che il marshalling di puntatori a interfaccia COM (interfacce, classi senza layout, e <xref:System.Object?displayProperty=nameWithType>), gli oggetti gestiti vengono mantenuti attivi con i conteggi dei riferimenti.</span><span class="sxs-lookup"><span data-stu-id="138ef-1796">If `structure` contains reference types that marshal to COM interface pointers (interfaces, classes without layout, and <xref:System.Object?displayProperty=nameWithType>), the managed objects are kept alive with reference counts.</span></span> <span data-ttu-id="138ef-1797">Tutti gli altri tipi di riferimento (ad esempio, stringhe e matrici) vengono eseguito il marshalling copie.</span><span class="sxs-lookup"><span data-stu-id="138ef-1797">All other reference types (for example, strings and arrays) are marshaled to copies.</span></span> <span data-ttu-id="138ef-1798">Per rilasciare questi oggetti gestiti o non gestiti, è necessario chiamare il <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> metodo prima che si liberano il blocco di memoria.</span><span class="sxs-lookup"><span data-stu-id="138ef-1798">To release these managed or unmanaged objects, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%60%601%28System.IntPtr%29> method before you free the memory block.</span></span>  
  
 <span data-ttu-id="138ef-1799">Se si usa la <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> metodo per copiare un'istanza diversa per il blocco di memoria in un secondo momento, specificare `true` per `fDeleteOld` per rimuovere un riferimento i conteggi per i tipi di riferimento nell'istanza precedente.</span><span class="sxs-lookup"><span data-stu-id="138ef-1799">If you use the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> method to copy a different instance to the memory block at a later time, specify `true` for `fDeleteOld` to remove reference counts for reference types in the previous instance.</span></span> <span data-ttu-id="138ef-1800">In caso contrario, i tipi di riferimenti gestiti e non gestito le copie in modo efficace vengono perdite.</span><span class="sxs-lookup"><span data-stu-id="138ef-1800">Otherwise, the managed reference types and unmanaged copies are effectively leaked.</span></span>  
  
 <span data-ttu-id="138ef-1801">Il modello generale per l'uso <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> è come segue:</span><span class="sxs-lookup"><span data-stu-id="138ef-1801">The overall pattern for using <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%60%601%28%60%600%2CSystem.IntPtr%2CSystem.Boolean%29> is as follows:</span></span>  
  
1.  <span data-ttu-id="138ef-1802">Alla prima chiamata per il <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> metodo dopo che è stato allocato un blocco di memoria, `fDeleteOld` deve essere `false`, poiché non sono alcun contenuto da cancellare.</span><span class="sxs-lookup"><span data-stu-id="138ef-1802">On the first call to the <xref:System.Runtime.InteropServices.Marshal.StructureToPtr%2A> method after a memory block has been allocated, `fDeleteOld` must be `false`, because there are no contents to clear.</span></span>  
  
    > [!IMPORTANT]
    >  <span data-ttu-id="138ef-1803">Specificare `true` per `fDeleteOld` solo se il blocco contiene dati validi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1803">Specify `true` for `fDeleteOld` only if the block contains valid data.</span></span>  
  
2.  <span data-ttu-id="138ef-1804">Se si copia un'istanza diversa per il blocco di memoria e l'oggetto contiene i tipi di riferimento `fDeleteOld` deve essere `true` per liberare i tipi di riferimento nel vecchio contenuto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1804">If you copy a different instance to the memory block, and the object contains reference types, `fDeleteOld` must be `true` to free reference types in the old contents.</span></span>  
  
3.  <span data-ttu-id="138ef-1805">Se l'oggetto contiene i tipi di riferimento, è necessario chiamare il <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> metodo prima che si liberano il blocco di memoria.</span><span class="sxs-lookup"><span data-stu-id="138ef-1805">If the object contains reference types, you must call the <xref:System.Runtime.InteropServices.Marshal.DestroyStructure%2A> method before you free the memory block.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="138ef-1806">Per aggiungere una struttura esistente anziché copiarlo, usare il <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> tipo per creare un handle bloccato per la struttura.</span><span class="sxs-lookup"><span data-stu-id="138ef-1806">To pin an existing structure instead of copying it, use the <xref:System.Runtime.InteropServices.GCHandle?displayProperty=nameWithType> type to create a pinned handle for the structure.</span></span> <span data-ttu-id="138ef-1807">Per informazioni dettagliate su come aggiungere, vedere [copia e blocco](~/docs/framework/interop/copying-and-pinning.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-1807">For details on how to pin, see [Copying and Pinning](~/docs/framework/interop/copying-and-pinning.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1808">
            <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1808">
              <paramref name="structure" /> is a reference type that is not a formatted class.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1809">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1809">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1810">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1810">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.DestroyStructure``1(System.IntPtr)" />
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="SystemDefaultCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemDefaultCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemDefaultCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemDefaultCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemDefaultCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemDefaultCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemDefaultCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1811">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1811">Represents the default character size on the system; the default is 2 for Unicode systems and 1 for ANSI systems.</span>
          </span>
          <span data-ttu-id="138ef-1812">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1812">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="138ef-1813">Nell'esempio seguente viene illustrato il <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> campo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1813">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="138ef-1814">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1814">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAuto(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAuto(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemMaxDBCSCharSize">
      <MemberSignature Language="C#" Value="public static readonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 SystemMaxDBCSCharSize" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SystemMaxDBCSCharSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int SystemMaxDBCSCharSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable SystemMaxDBCSCharSize : int" Usage="System.Runtime.InteropServices.Marshal.SystemMaxDBCSCharSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1815">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1815">Represents the maximum size of a double byte character set (DBCS) size, in bytes, for the current operating system.</span>
          </span>
          <span data-ttu-id="138ef-1816">This field is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1816">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="138ef-1817">Nell'esempio seguente viene illustrato il <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> campo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1817">The following example demonstrates the <xref:System.Runtime.InteropServices.Marshal.SystemDefaultCharSize> field.</span></span> <span data-ttu-id="138ef-1818">Questo esempio di codice è parte di un esempio più esaustivo disponibile per il <xref:System.Runtime.InteropServices.Marshal> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-1818">This code example is part of a larger example provided for the <xref:System.Runtime.InteropServices.Marshal> class.</span></span>  
  
 [!code-cpp[Marshal#2](~/samples/snippets/cpp/VS_Snippets_CLR/Marshal/cpp/marshal.cpp#2)]
 [!code-csharp[Marshal#2](~/samples/snippets/csharp/VS_Snippets_CLR/Marshal/CS/Marshal.cs#2)]
 [!code-vb[Marshal#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Marshal/VB/Marshal.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(System.String)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.StringToCoTaskMemAnsi(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThrowExceptionForHR">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1819">Throws an exception with a specific failure HRESULT value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1819">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR errorCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="138ef-1820">The HRESULT corresponding to the desired exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1820">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1821">Throws an exception with a specific failure HRESULT value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1821">Throws an exception with a specific failure HRESULT value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1822">Questo metodo crea un oggetto eccezione per il valore HRESULT specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1822">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="138ef-1823">Se il valore HRESULT è 0 o positivo (codice di esito positivo), il metodo restituisce senza creare o generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1823">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="138ef-1824">Si noti che il <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> un'eccezione basata su metodo viene restituito il [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaccia del thread corrente se ne è stato impostato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1824">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%28System.Int32%29> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="138ef-1825">In questo caso, il `errorCode` parametro viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1825">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="138ef-1826">Alcuni HRESULT di errore eseguire il mapping a eccezioni definite, mentre altri no.</span><span class="sxs-lookup"><span data-stu-id="138ef-1826">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="138ef-1827">Se il valore HRESULT mappato a un'eccezione definita, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> crea un'istanza dell'eccezione e genera.</span><span class="sxs-lookup"><span data-stu-id="138ef-1827">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="138ef-1828">In caso contrario, crea un'istanza di <xref:System.Runtime.InteropServices.COMException>, inizializza il campo di codice di errore con il valore HRESULT e genera l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1828">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="138ef-1829">Quando <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> viene richiamato, tenta di recuperare informazioni aggiuntive relative all'errore utilizzando non gestito [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) (funzione).</span><span class="sxs-lookup"><span data-stu-id="138ef-1829">When <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> is invoked, it attempts to retrieve extra information regarding the error by using the unmanaged [GetErrorInfo](https://msdn.microsoft.com/library/ms221032\(v=vs.85\).aspx) function.</span></span>  
  
 <span data-ttu-id="138ef-1830">Per il mapping tra ogni oggetto HRESULT e la classe di eccezioni corrispondente in .NET Framework, vedere [procedura: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-1830">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 <span data-ttu-id="138ef-1831">In alcuni casi, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> potrebbe restituire un'eccezione da una precedente chiamata COM.</span><span class="sxs-lookup"><span data-stu-id="138ef-1831">Occasionally, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> might return an exception from a previous COM call.</span></span> <span data-ttu-id="138ef-1832">In questo caso, è possibile usare la soluzione alternativa seguente e passare `IntPtr(-1)` come secondo parametro (`errorInfo`):</span><span class="sxs-lookup"><span data-stu-id="138ef-1832">In this case, you can use the following workaround and pass `IntPtr(-1)` as the second parameter (`errorInfo`):</span></span>  
  
```  
[SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags = SecurityPermissionFlag.UnmanagedCode)]  
public static void ThrowExceptionForHR(interrorCode,IntPtrerrorInfo)  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1833">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1833">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1834">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1834">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionForHR">
      <MemberSignature Language="C#" Value="public static void ThrowExceptionForHR (int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ThrowExceptionForHR(int32 errorCode, native int errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ThrowExceptionForHR (errorCode As Integer, errorInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ThrowExceptionForHR(int errorCode, IntPtr errorInfo);" />
      <MemberSignature Language="F#" Value="static member ThrowExceptionForHR : int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ThrowExceptionForHR (errorCode, errorInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorCode" Type="System.Int32" />
        <Parameter Name="errorInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="errorCode">
          <span data-ttu-id="138ef-1835">The HRESULT corresponding to the desired exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1835">The HRESULT corresponding to the desired exception.</span>
          </span>
        </param>
        <param name="errorInfo">
          <span data-ttu-id="138ef-1836">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1836">A pointer to the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface that provides more information about the error.</span>
          </span>
          <span data-ttu-id="138ef-1837">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1837">You can specify <c>IntPtr(0)</c> to use the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface, or <c>IntPtr(-1)</c> to ignore the current [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface and construct the exception just from the error code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1838">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1838">Throws an exception with a specific failure HRESULT, based on the specified [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1839">Questo metodo crea un oggetto eccezione per il valore HRESULT specificato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1839">This method creates an exception object for the specified failure HRESULT.</span></span> <span data-ttu-id="138ef-1840">Se il valore HRESULT è 0 o positivo (codice di esito positivo), il metodo restituisce senza creare o generare un'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1840">If the HRESULT is 0 or positive (a success code), the method returns without creating or throwing an exception.</span></span>  
  
 <span data-ttu-id="138ef-1841">Il <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> metodo rilascia la `errorInfo` parametro, riducendo il componente COM di fare riferimento a conteggio delle [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaccia.</span><span class="sxs-lookup"><span data-stu-id="138ef-1841">The <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method releases the `errorInfo` parameter, decreasing the COM reference count of the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface.</span></span>  
  
 <span data-ttu-id="138ef-1842">Si noti che il <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> un'eccezione basata su metodo viene restituito il [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interfaccia del thread corrente se ne è stato impostato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1842">Note that the <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> method returns an exception based on the [IErrorInfo](https://msdn.microsoft.com/library/ms221233\(v=vs.85\).aspx) interface of the current thread if one is set.</span></span> <span data-ttu-id="138ef-1843">In questo caso, il `errorCode` parametro viene ignorato.</span><span class="sxs-lookup"><span data-stu-id="138ef-1843">When this happens, the `errorCode` parameter is ignored.</span></span>  
  
 <span data-ttu-id="138ef-1844">Alcuni HRESULT di errore eseguire il mapping a eccezioni definite, mentre altri no.</span><span class="sxs-lookup"><span data-stu-id="138ef-1844">Some failure HRESULTs map to defined exceptions, whereas others do not.</span></span> <span data-ttu-id="138ef-1845">Se il valore HRESULT mappato a un'eccezione definita, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> crea un'istanza dell'eccezione e genera.</span><span class="sxs-lookup"><span data-stu-id="138ef-1845">If the HRESULT maps to a defined exception, <xref:System.Runtime.InteropServices.Marshal.ThrowExceptionForHR%2A> creates an instance of the exception and throws it.</span></span> <span data-ttu-id="138ef-1846">In caso contrario, crea un'istanza di <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, inizializza il campo di codice di errore con il valore HRESULT e genera l'eccezione.</span><span class="sxs-lookup"><span data-stu-id="138ef-1846">Otherwise, it creates an instance of <xref:System.Runtime.InteropServices.COMException?displayProperty=nameWithType>, initializes the error code field with the HRESULT, and throws that exception.</span></span> <span data-ttu-id="138ef-1847">Il `errorInfo` parametro viene usato per recuperare informazioni aggiuntive relative all'errore.</span><span class="sxs-lookup"><span data-stu-id="138ef-1847">The `errorInfo` parameter is used to retrieve extra information regarding the error.</span></span>  
  
 <span data-ttu-id="138ef-1848">Per il mapping tra ogni oggetto HRESULT e la classe di eccezioni corrispondente in .NET Framework, vedere [procedura: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span><span class="sxs-lookup"><span data-stu-id="138ef-1848">For the mapping from each HRESULT to its comparable exception class in the .NET Framework, see [How to: Map HRESULTs and Exceptions](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1849">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1849">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1850">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1850">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.COMException" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement (Array arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement(class System.Array arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement (arr As Array, index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(Array ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : Array * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arr" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arr">
          <span data-ttu-id="138ef-1851">The array that contains the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1851">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="138ef-1852">The index in the <c>arr</c> parameter of the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1852">The index in the <c>arr</c> parameter of the desired element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1853">Gets the address of the element at the specified index inside the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1853">Gets the address of the element at the specified index inside the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1854">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1854">The address of <paramref name="index" /> inside <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1855">La matrice deve essere bloccata utilizzando un <xref:System.Runtime.InteropServices.GCHandle> prima che venga passata al metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1855">The array must be pinned using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="138ef-1856">Per ottenere prestazioni ottimali, questo metodo non convalida la matrice passata a esso. Ciò può comportare un comportamento imprevisto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1856">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1857">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1857">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1858">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1858">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAddrOfPinnedArrayElement&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static IntPtr UnsafeAddrOfPinnedArrayElement&lt;T&gt; (T[] arr, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int UnsafeAddrOfPinnedArrayElement&lt;T&gt;(!!T[] arr, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement``1(``0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeAddrOfPinnedArrayElement(Of T) (arr As T(), index As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static IntPtr UnsafeAddrOfPinnedArrayElement(cli::array &lt;T&gt; ^ arr, int index);" />
      <MemberSignature Language="F#" Value="static member UnsafeAddrOfPinnedArrayElement : 'T[] * int -&gt; nativeint" Usage="System.Runtime.InteropServices.Marshal.UnsafeAddrOfPinnedArrayElement (arr, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="arr" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="138ef-1859">Tipo della matrice</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1859">The type of the array.</span>
          </span>
        </typeparam>
        <param name="arr">
          <span data-ttu-id="138ef-1860">The array that contains the desired element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1860">The array that contains the desired element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="138ef-1861">The index of the desired element in the <c>arr</c> array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1861">The index of the desired element in the <c>arr</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1862">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the address of the element at the specified index in an array of a specified type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1862">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the address of the element at the specified index in an array of a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="138ef-1863">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1863">The address of <paramref name="index" /> in <paramref name="arr" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1864">La matrice deve essere bloccata usando un <xref:System.Runtime.InteropServices.GCHandle> prima che venga passata al metodo.</span><span class="sxs-lookup"><span data-stu-id="138ef-1864">The array must be pinned by using a <xref:System.Runtime.InteropServices.GCHandle> before it is passed to this method.</span></span> <span data-ttu-id="138ef-1865">Per ottenere prestazioni ottimali, questo metodo non convalida la matrice passata a esso. Ciò può comportare un comportamento imprevisto.</span><span class="sxs-lookup"><span data-stu-id="138ef-1865">For maximum performance, this method does not validate the array passed to it; this can result in unexpected behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1866">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1866">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1867">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1867">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="T:System.Runtime.InteropServices.GCHandle" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteByte">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1868">Writes a single byte value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1868">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1869">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1869">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1870">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1870">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1871">Writes a single byte value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1871">Writes a single byte value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1872"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1872"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1873">Nell'esempio seguente crea un blocco di memoria non gestita, scrive un byte nella memoria non gestita, legge i byte da memoria non gestita e quindi elimina la memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-1873">The following example creates a block of unmanaged memory, writes a byte to the unmanaged memory, reads the byte back from unmanaged memory, and then disposes the unmanaged memory.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/cs/example.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.ReadByte - WriteByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.ReadByte - WriteByte/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1874">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1874">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1875">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1875">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1876">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1876">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1877">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1877">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1878">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1878">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (IntPtr ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte(native int ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As IntPtr, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(IntPtr ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : nativeint * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1879">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1879">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1880">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1880">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1881">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1881">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1882">Writes a single byte value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1882">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1883"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1883"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1884">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1884">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadByte%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#3)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1885">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1885">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1886">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1886">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1887">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1887">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public static void WriteByte (object ptr, int ofs, byte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteByte([out] object ptr, int32 ofs, unsigned int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteByte(System.Object,System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteByte (ptr As Object, ofs As Integer, val As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteByte(System::Object ^ ptr, int ofs, System::Byte val);" />
      <MemberSignature Language="F#" Value="static member WriteByte : obj * int * byte -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteByte (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1888">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1888">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1889">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1889">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1890">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1890">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1891">Writes a single byte value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1891">Writes a single byte value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1892"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1892"><xref:System.Runtime.InteropServices.Marshal.WriteByte%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1893">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1893">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1894">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1894">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1895">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1895">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1896">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1896">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1897">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1897">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt16">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1898">Writes a 16-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1898">Writes a 16-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1899">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1899">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1900">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1900">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1901">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1901">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1902">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1902">Writes a character as a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1903"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1903"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1904">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1904">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1905">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1905">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1906">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1906">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1907">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1907">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1908">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1908">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1909">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1909">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1910">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1910">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1911">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1911">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1912">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1912">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1913">Writes a 16-bit integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1913">Writes a 16-bit integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1914"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1914"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1915">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1915">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1916">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1916">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1917">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1917">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1918">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1918">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1919">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1919">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1920">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1920">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1921">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1921">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1922">The base address in the native heap to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1922">The base address in the native heap to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1923">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1923">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1924">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1924">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1925">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1925">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1926"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1926"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1927">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1927">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1928">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1928">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1929">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1929">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1930">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1930">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1931">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1931">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16(native int ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.IntPtr,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As IntPtr, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(IntPtr ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : nativeint * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1932">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1932">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1933">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1934">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1934">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1935">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1935">Writes a 16-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1936"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1936"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1937">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1937">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1938">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1938">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt16%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#4)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1939">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1939">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1940">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1940">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1941">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1941">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, char val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * char -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1942">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1942">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1943">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1943">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1944">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1944">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1945">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1945">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1946"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1946"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1947">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1947">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1948">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1948">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1949">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1949">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1950">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1950">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1951">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1951">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1952">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1952">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt16">
      <MemberSignature Language="C#" Value="public static void WriteInt16 (object ptr, int ofs, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt16([out] object ptr, int32 ofs, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt16(System.Object,System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt16 (ptr As Object, ofs As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt16(System::Object ^ ptr, int ofs, short val);" />
      <MemberSignature Language="F#" Value="static member WriteInt16 : obj * int * int16 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt16 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1953">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1953">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1954">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1954">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1955">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1955">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1956">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1956">Writes a 16-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1957"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> Abilita l'interazione diretta con una matrice con segno a 16 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1957"><xref:System.Runtime.InteropServices.Marshal.WriteInt16%2A> enables direct interaction with an unmanaged 16-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1958">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1958">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1959">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1959">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1960">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1960">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1961">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1961">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1962">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1962">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1963">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1963">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1964">Writes a 32-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1964">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1965">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1965">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1966">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1966">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1967">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1967">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1968">Writes a 32-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1968">Writes a 32-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Abilita l'interazione diretta con una matrice con segno a 32 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1969"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1970">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1970">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1971">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1971">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1972">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1972">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-1973">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1973">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-1974">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1974">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1975">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1975">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1976">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1976">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32(native int ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.IntPtr,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As IntPtr, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(IntPtr ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : nativeint * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1977">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1977">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1978">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1978">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1979">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1979">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1980">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1980">Writes a 32-bit signed integer value into unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1981"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Abilita l'interazione diretta con una matrice con segno a 32 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1981"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1982">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1982">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-1983">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1983">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt32%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#5)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1984">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1984">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1985">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1985">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1986">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1986">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt32">
      <MemberSignature Language="C#" Value="public static void WriteInt32 (object ptr, int ofs, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt32([out] object ptr, int32 ofs, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt32(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt32 (ptr As Object, ofs As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt32(System::Object ^ ptr, int ofs, int val);" />
      <MemberSignature Language="F#" Value="static member WriteInt32 : obj * int * int -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt32 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-1987">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1987">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-1988">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1988">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-1989">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1989">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-1990">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1990">Writes a 32-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-1991"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> Abilita l'interazione diretta con una matrice con segno a 32 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-1991"><xref:System.Runtime.InteropServices.Marshal.WriteInt32%2A> enables direct interaction with an unmanaged 32-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-1992">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-1992">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-1993">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1993">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-1994">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1994">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-1995">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1995">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-1996">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1996">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-1997">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1997">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteInt64">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-1998">Writes a 64-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1998">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-1999">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-1999">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2000">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2000">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2001">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2001">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2002">Writes a 64-bit signed integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2002">Writes a 64-bit signed integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Abilita l'interazione diretta con una matrice con segno a 64 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2003"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2004">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2004">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2005">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2005">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2006">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2006">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-2007">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2007">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-2008">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2008">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2009">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2009">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2010">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2010">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64(native int ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.IntPtr,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As IntPtr, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(IntPtr ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : nativeint * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2011">The base address in unmanaged memory to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2011">The base address in unmanaged memory to write.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-2012">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2012">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2013">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2013">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2014">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2014">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2015"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Abilita l'interazione diretta con una matrice con segno a 64 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2015"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2016">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2016">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2017">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2017">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadInt64%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#6)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2018">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2018">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2019">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2019">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2020">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2020">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteInt64">
      <MemberSignature Language="C#" Value="public static void WriteInt64 (object ptr, int ofs, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteInt64([out] object ptr, int32 ofs, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteInt64(System.Object,System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteInt64 (ptr As Object, ofs As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteInt64(System::Object ^ ptr, int ofs, long val);" />
      <MemberSignature Language="F#" Value="static member WriteInt64 : obj * int * int64 -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteInt64 (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SuppressUnmanagedCodeSecurity</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2021">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2021">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-2022">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2022">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2023">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2023">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2024">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2024">Writes a 64-bit signed integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2025"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> Abilita l'interazione diretta con una matrice con segno a 64 bit non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2025"><xref:System.Runtime.InteropServices.Marshal.WriteInt64%2A> enables direct interaction with an unmanaged 64-bit signed array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2026">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2026">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2027">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2027">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-2028">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2028">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-2029">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2029">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2030">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2030">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2031">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2031">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIntPtr">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="138ef-2032">Writes a processor native-sized integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2032">Writes a processor native-sized integer value to unmanaged memory.</span>
          </span>
          <span data-ttu-id="138ef-2033">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2033">32-bit integers are written on 32-bit systems, and 64-bit integers are written on 64-bit systems.</span>
          </span>
          <span data-ttu-id="138ef-2034">Writing to unaligned memory locations is supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2034">Writing to unaligned memory locations is supported.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2035">The address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2035">The address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2036">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2036">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2037">Writes a processor native sized integer value into unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2037">Writes a processor native sized integer value into unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2038"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Abilita l'interazione diretta con un tipo C non gestito `IntPtr` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2038"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2039">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2039">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2040">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2040">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2041">
            <paramref name="ptr" /> is not a recognized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2041">
              <paramref name="ptr" /> is not a recognized format.</span>
          </span>
          <span data-ttu-id="138ef-2042">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2042">-or-  <paramref name="ptr" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="138ef-2043">-or-  <paramref name="ptr" /> is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2043">-or-  <paramref name="ptr" /> is invalid.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2044">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2044">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2045">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2045">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr(native int ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.IntPtr,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As IntPtr, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(IntPtr ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : nativeint * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2046">The base address in unmanaged memory to write to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2046">The base address in unmanaged memory to write to.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2047">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2048">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2048">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2049">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2049">Writes a processor native-sized integer value to unmanaged memory at a specified offset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2050">Questo metodo inserisce un intero a 32 bit su sistemi a 32 bit e un integer a 64 bit su sistemi a 64 bit.</span><span class="sxs-lookup"><span data-stu-id="138ef-2050">This method writes a 32 bit integer on 32 bit systems, and a 64 bit integer on 64 bit systems.</span></span>  
  
 <span data-ttu-id="138ef-2051"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Abilita l'interazione diretta con un tipo C non gestito `IntPtr` matrice, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2051"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style `IntPtr` array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2052">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2052">Writing to unaligned memory locations is supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2053">Nell'esempio seguente viene illustrato come leggere e scrivere in una matrice non gestita usando il <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> e <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> metodi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2053">The following example demonstrates how to read and write to an unmanaged array using the <xref:System.Runtime.InteropServices.Marshal.ReadIntPtr%2A> and <xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> methods.</span></span>  
  
 [!code-csharp[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/cs/sample.cs#2)]
 [!code-vb[System.Runtime.interopServices.Marshal.Read-Write val#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.interopServices.Marshal.Read-Write val/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2054">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2054">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2055">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2055">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2056">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2056">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
        <altmember cref="M:System.Runtime.InteropServices.Marshal.WriteByte(System.IntPtr,System.Int32,System.Byte)" />
      </Docs>
    </Member>
    <Member MemberName="WriteIntPtr">
      <MemberSignature Language="C#" Value="public static void WriteIntPtr (object ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIntPtr([out] object ptr, int32 ofs, native int val) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.WriteIntPtr(System.Object,System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIntPtr (ptr As Object, ofs As Integer, val As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIntPtr(System::Object ^ ptr, int ofs, IntPtr val);" />
      <MemberSignature Language="F#" Value="static member WriteIntPtr : obj * int * nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.WriteIntPtr (ptr, ofs, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ptr" Type="System.Object" />
        <Parameter Name="ofs" Type="System.Int32" />
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="ptr">
          <span data-ttu-id="138ef-2057">The base address in unmanaged memory of the target object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2057">The base address in unmanaged memory of the target object.</span>
          </span>
        </param>
        <param name="ofs">
          <span data-ttu-id="138ef-2058">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2058">An additional byte offset, which is added to the <c>ptr</c> parameter before writing.</span>
          </span>
        </param>
        <param name="val">
          <span data-ttu-id="138ef-2059">The value to write.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2059">The value to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2060">Writes a processor native sized integer value to unmanaged memory.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2060">Writes a processor native sized integer value to unmanaged memory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2061"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> Abilita l'interazione diretta con una matrice di byte di tipo C non gestita, eliminando i costi per copiare un'intera matrice non gestita (tramite <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) in una matrice gestita separata prima di impostare i valori degli elementi.</span><span class="sxs-lookup"><span data-stu-id="138ef-2061"><xref:System.Runtime.InteropServices.Marshal.WriteIntPtr%2A> enables direct interaction with an unmanaged C-style byte array, eliminating the expense of copying an entire unmanaged array (using <xref:System.Runtime.InteropServices.Marshal.Copy%2A?displayProperty=nameWithType>) to a separate managed array before setting its element values.</span></span>  
  
 <span data-ttu-id="138ef-2062">La scrittura in posizioni di memoria non allineate è supportata.</span><span class="sxs-lookup"><span data-stu-id="138ef-2062">Writing to unaligned memory locations is supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="138ef-2063">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2063">Base address (<paramref name="ptr" />) plus offset byte (<paramref name="ofs" />) produces a null or invalid address.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="138ef-2064">
            <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2064">
              <paramref name="ptr" /> is an <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> object.</span>
          </span>
          <span data-ttu-id="138ef-2065">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2065">This method does not accept <see cref="T:System.Runtime.InteropServices.ArrayWithOffset" /> parameters.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2066">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2066">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2067">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2067">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeBSTR">
      <MemberSignature Language="C#" Value="public static void ZeroFreeBSTR (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeBSTR(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeBSTR (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeBSTR(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeBSTR : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeBSTR s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-2068">The address of the <see langword="BSTR" /> to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2068">The address of the <see langword="BSTR" /> to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2069">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2069">Frees a [BSTR](https://msdn.microsoft.com/library/ms221069.aspx) pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2070">Il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> metodo imposta prima di tutto il contenuto di BSTR a zero e successivamente liberata BSTR.</span><span class="sxs-lookup"><span data-stu-id="138ef-2070">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeBSTR%2A> method first sets the contents of the BSTR to zero, and then frees the BSTR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2071">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2071">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2072">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2072">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-2073">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2073">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2074">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2074">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2075">Il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> metodo innanzitutto azzera e successivamente liberata memoria non gestita allocato usando il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-2075">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2076">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> metodo per effettuare il marshalling e decrittografare il contenuto di un <xref:System.Security.SecureString> oggetto in un blocco di memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-2076">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="138ef-2077">Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> metodo per azzerare ed eliminare il blocco non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-2077">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/cs/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2078">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2078">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2079">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2079">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-2080">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2080">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2081">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2081">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2082">Il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> metodo innanzitutto azzera e successivamente liberata memoria non gestita allocato usando il <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-2082">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2083">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2083">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2084">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2084">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeCoTaskMemUTF8">
      <MemberSignature Language="C#" Value="public static void ZeroFreeCoTaskMemUTF8 (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeCoTaskMemUTF8(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeCoTaskMemUTF8 (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeCoTaskMemUTF8(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeCoTaskMemUTF8 : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeCoTaskMemUTF8 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocAnsi">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocAnsi (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocAnsi(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocAnsi (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocAnsi(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocAnsi : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-2085">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2085">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2086">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2086">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2087">Il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> metodo innanzitutto azzera e successivamente liberata memoria non gestita allocato usando il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-2087">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2088">L'esempio seguente usa il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> metodo per effettuare il marshalling e decrittografare il contenuto di un <xref:System.Security.SecureString> oggetto in un blocco di memoria non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-2088">The following example uses the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi%2A> method to marshal and decrypt the contents of a <xref:System.Security.SecureString> object to a block of unmanaged memory.</span></span> <span data-ttu-id="138ef-2089">Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> metodo per azzerare ed eliminare il blocco non gestito.</span><span class="sxs-lookup"><span data-stu-id="138ef-2089">It then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocAnsi%2A> method to zero out and dispose the unmanaged block.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalAnsi/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2090">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2090">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2091">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2091">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ZeroFreeGlobalAllocUnicode">
      <MemberSignature Language="C#" Value="public static void ZeroFreeGlobalAllocUnicode (IntPtr s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ZeroFreeGlobalAllocUnicode(native int s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ZeroFreeGlobalAllocUnicode (s As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ZeroFreeGlobalAllocUnicode(IntPtr s);" />
      <MemberSignature Language="F#" Value="static member ZeroFreeGlobalAllocUnicode : nativeint -&gt; unit" Usage="System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="138ef-2092">The address of the unmanaged string to free.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2092">The address of the unmanaged string to free.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="138ef-2093">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2093">Frees an unmanaged string pointer that was allocated using the <see cref="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="138ef-2094">Il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> metodo innanzitutto azzera e successivamente liberata memoria non gestita allocato usando il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> (metodo).</span><span class="sxs-lookup"><span data-stu-id="138ef-2094">The <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method first zeros out and then frees unmanaged memory that was allocated using the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="138ef-2095">L'esempio seguente illustra come usare il <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> metodo con non gestito `LogonUser` funzione di eseguire la rappresentazione con il <xref:System.Security.SecureString> classe.</span><span class="sxs-lookup"><span data-stu-id="138ef-2095">The following example demonstrates how to use the <xref:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode%2A> method with the unmanaged `LogonUser` function to perform impersonation with the <xref:System.Security.SecureString> class.</span></span> <span data-ttu-id="138ef-2096">L'esempio Usa quindi il <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> metodo per azzerare e liberare il riferimento di stringa non gestita.</span><span class="sxs-lookup"><span data-stu-id="138ef-2096">The example then uses the <xref:System.Runtime.InteropServices.Marshal.ZeroFreeGlobalAllocUnicode%2A> method to zero out and free the unmanaged string reference.</span></span>  
  
 [!code-csharp[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/csharp/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/CS/sample.cs#1)]
 [!code-vb[Runtime.InteropServices.Marshal.SecureStringToHGlobalUni#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Runtime.InteropServices.Marshal.SecureStringToHGlobalUni/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="138ef-2097">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2097">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="138ef-2098">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="138ef-2098">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>