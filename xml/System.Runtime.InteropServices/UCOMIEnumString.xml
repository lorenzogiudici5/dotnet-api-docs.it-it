<Type Name="UCOMIEnumString" FullName="System.Runtime.InteropServices.UCOMIEnumString">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de983942d36064f634059e75d88ce71b363ffc04" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48661589" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIEnumString" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIEnumString" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIEnumString" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIEnumString" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIEnumString" />
  <TypeSignature Language="F#" Value="type UCOMIEnumString = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00000101-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00000101-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IEnumString instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>In alternativa, usare <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumString" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sul `IEnumString` interfaccia, vedere MSDN Library.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public void Clone (out System.Runtime.InteropServices.UCOMIEnumString ppenum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clone([out] class System.Runtime.InteropServices.UCOMIEnumString&amp; ppenum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumString.Clone(System.Runtime.InteropServices.UCOMIEnumString@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clone (ByRef ppenum As UCOMIEnumString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clone([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumString ^ % ppenum);" />
      <MemberSignature Language="F#" Value="abstract member Clone :  -&gt; unit" Usage="uCOMIEnumString.Clone ppenum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenum" Type="System.Runtime.InteropServices.UCOMIEnumString" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenum">In caso di esito positivo, restituisce un riferimento all'enumeratore appena creato.</param>
        <summary>Crea un altro enumeratore che contiene lo stesso stato di enumerazione di quello corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle `IEnumString::Clone`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public int Next (int celt, string[] rgelt, out int pceltFetched);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Next(int32 celt, [out] string[] rgelt, [out] int32&amp; pceltFetched) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumString.Next(System.Int32,System.String[],System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Next (celt As Integer, rgelt As String(), ByRef pceltFetched As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Next(int celt, cli::array &lt;System::String ^&gt; ^ rgelt, [Runtime::InteropServices::Out] int % pceltFetched);" />
      <MemberSignature Language="F#" Value="abstract member Next : int * string[] *  -&gt; int" Usage="uCOMIEnumString.Next (celt, rgelt, pceltFetched)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
        <Parameter Name="rgelt" Type="System.String[]" />
        <Parameter Name="pceltFetched" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="celt">Numero di stringhe da restituire in <c>rgelt</c>.</param>
        <param name="rgelt">Il risultato restituito è un riferimento alle stringhe enumerate.</param>
        <param name="pceltFetched">Il risultato restituito è un riferimento al numero effettivo di stringhe enumerate in <c>rgelt</c>.</param>
        <summary>Recupera un determinato numero di elementi nella sequenza di enumerazione.</summary>
        <returns>
          <see langword="S_OK" /> se il parametro <paramref name="pceltFetched" /> è uguale al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle `IEnumString::Next`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public int Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumString.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; int" Usage="uCOMIEnumString.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Riporta all'inizio la sequenza di enumerazione.</summary>
        <returns>HRESULT con il valore <see langword="S_OK" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle `IEnumString::Reset`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public int Skip (int celt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Skip(int32 celt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIEnumString.Skip(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (celt As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Skip(int celt);" />
      <MemberSignature Language="F#" Value="abstract member Skip : int -&gt; int" Usage="uCOMIEnumString.Skip celt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="celt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="celt">Numero di elementi da saltare nell'enumerazione.</param>
        <summary>Salta un determinato numero di elementi nella sequenza di enumerazione.</summary>
        <returns>
          <see langword="S_OK" /> se il numero di elementi ignorati è pari al parametro <paramref name="celt" />; in caso contrario, <see langword="S_FALSE" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Per altre informazioni sulle `IEnumString::Skip`, consultare la MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>