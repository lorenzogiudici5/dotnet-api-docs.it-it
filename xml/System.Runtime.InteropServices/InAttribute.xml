<Type Name="InAttribute" FullName="System.Runtime.InteropServices.InAttribute">
  <TypeSignature Language="C#" Value="public sealed class InAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.InAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf193-101">Indica che il marshalling dei dati deve essere eseguito dal chiamante al chiamato, ma non di nuovo al chiamante.</span><span class="sxs-lookup"><span data-stu-id="cf193-101">Indicates that data should be marshaled from the caller to the callee, but not back to the caller.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf193-102">È possibile applicare questo attributo per i parametri.</span><span class="sxs-lookup"><span data-stu-id="cf193-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="cf193-103">Il <xref:System.Runtime.InteropServices.InAttribute> è facoltativo.</span><span class="sxs-lookup"><span data-stu-id="cf193-103">The <xref:System.Runtime.InteropServices.InAttribute> is optional.</span></span> <span data-ttu-id="cf193-104">L'attributo è supportato per l'interoperabilità COM e platform invoke solo.</span><span class="sxs-lookup"><span data-stu-id="cf193-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="cf193-105">In assenza di impostazioni esplicite, il marshalling di interoperabilità presuppone regole basate sul parametro di tipo, se il parametro viene passato per riferimento oppure per valore e se il tipo è copiabili o non copiabili.</span><span class="sxs-lookup"><span data-stu-id="cf193-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="cf193-106">Ad esempio, la <xref:System.Text.StringBuilder> classe viene sempre considerata In/Out e una matrice di stringhe passati per valore viene considerata.</span><span class="sxs-lookup"><span data-stu-id="cf193-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="cf193-107">Non è possibile applicare il <xref:System.Runtime.InteropServices.InAttribute> a un parametro modificato con c#-stile `out` (parola chiave).</span><span class="sxs-lookup"><span data-stu-id="cf193-107">You cannot apply the <xref:System.Runtime.InteropServices.InAttribute> to a parameter modified with the C#-styled `out` keyword.</span></span> <span data-ttu-id="cf193-108">Per evitare di confondere il `In` (parola chiave) in Visual Basic con il <xref:System.Runtime.InteropServices.InAttribute>, meno Attribute, utilizzare il `<[In]>` form con l'attributo racchiuso tra parentesi.</span><span class="sxs-lookup"><span data-stu-id="cf193-108">To avoid confusing the `In` keyword in Visual Basic with the <xref:System.Runtime.InteropServices.InAttribute>, minus Attribute, use the `<[In]>` form with brackets around the attribute.</span></span>  
  
 <span data-ttu-id="cf193-109">La combinazione di <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> è particolarmente utile quando applicata a matrici e formattato, i tipi non copiabili.</span><span class="sxs-lookup"><span data-stu-id="cf193-109">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="cf193-110">Le modifiche a che un oggetto chiamato apportate a questi tipi solo quando si applicano a entrambi gli attributi, vedere i chiamanti.</span><span class="sxs-lookup"><span data-stu-id="cf193-110">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="cf193-111">Poiché questi tipi richiedono la copia durante il marshalling, è possibile utilizzare <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> per ridurre le copie non necessari.</span><span class="sxs-lookup"><span data-stu-id="cf193-111">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="cf193-112">Per ulteriori informazioni sull'effetto di <xref:System.Runtime.InteropServices.InAttribute> sul comportamento di marshalling, vedere [attributi direzionali](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="cf193-112">For more information on the effect of <xref:System.Runtime.InteropServices.InAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf193-113">Nell'esempio seguente viene illustrato come applicare il <xref:System.Runtime.InteropServices.InAttribute> e <xref:System.Runtime.InteropServices.OutAttribute> a un platform invoke prototipo che passa una matrice come parametro.</span><span class="sxs-lookup"><span data-stu-id="cf193-113">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="cf193-114">La combinazione di attributi direzionali consente al chiamante di visualizzare le modifiche apportate dal chiamato.</span><span class="sxs-lookup"><span data-stu-id="cf193-114">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.OutAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.InAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf193-115">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.InAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="cf193-115">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.InAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>