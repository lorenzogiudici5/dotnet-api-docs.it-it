<Type Name="_PropertyInfo" FullName="System.Runtime.InteropServices._PropertyInfo">
  <TypeSignature Language="C#" Value="public interface _PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _PropertyInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("F59ED4E4-E68F-3218-BD77-061AA82824BF")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.PropertyInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2a95d-101">Espone i membri pubblici della classe <see cref="T:System.Reflection.PropertyInfo" /> a codice non gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-101">Exposes the public members of the <see cref="T:System.Reflection.PropertyInfo" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-102">Questa interfaccia consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-103">Questa interfaccia mantiene l'ordine vtable della <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> classe membri che è possibile accedere tramite gli oggetti COM non gestiti.</span><span class="sxs-lookup"><span data-stu-id="2a95d-103">This interface preserves the vtable order of the <xref:System.Reflection.PropertyInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-104">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.Attributes" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.Attributes" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-105">Attributi di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-105">The attributes of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-106">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-106">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-107">Il <xref:System.Reflection.PropertyInfo.Attributes%2A> proprietà ottiene gli attributi di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-107">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property gets the attributes of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRead { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-108">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.CanRead" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanRead" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="2a95d-109"><see langword="true" /> se è possibile leggere la proprietà; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-109"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-110">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-110">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-111">Il <xref:System.Reflection.PropertyInfo.CanRead%2A> proprietà ottiene un valore che indica se è possibile leggere la proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-111">The <xref:System.Reflection.PropertyInfo.CanRead%2A> property gets a value indicating whether the property can be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanWrite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-112">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.CanWrite" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-112">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.CanWrite" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="2a95d-113"><see langword="true" /> se è possibile scrivere nella proprietà; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-113"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-114">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-114">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-115">Il <xref:System.Reflection.PropertyInfo.CanWrite%2A> proprietà ottiene un valore che indica se la proprietà può essere scritto.</span><span class="sxs-lookup"><span data-stu-id="2a95d-115">The <xref:System.Reflection.PropertyInfo.CanWrite%2A> property gets a value indicating whether the property can be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-116">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-116">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-117">Oggetto <see langword="Type" /> per la classe che dichiara questo membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-117">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-118">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-118">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-119">Il <xref:System.Reflection.MemberInfo.DeclaringType%2A> proprietà ottiene la classe che dichiara questo membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-119">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="2a95d-120">Oggetto <see cref="T:System.Object" /> da confrontare con l'oggetto <see cref="T:System.Object" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-120">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="2a95d-121">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-121">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="2a95d-122"><see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-122"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-123">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-123">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-124">Il <xref:System.Object.Equals%2A> metodo determina se l'oggetto specificato <xref:System.Object> è uguale all'oggetto corrente <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="2a95d-124">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-125">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetAccessors" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-126">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-126">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-127">Il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> restituiscono una matrice del `get` e `set` funzioni di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-127">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> methods return an array of the `get` and `set` accessors on this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-128">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetAccessors" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-128">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-129">Matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> che riflettono le funzioni di accesso <see langword="get" />, <see langword="set" /> e altre funzioni di accesso pubbliche della proprietà riflesse dall'istanza corrente, se le funzioni di accesso vengono rilevate. In caso contrario, il metodo restituisce una matrice con zero (0) elementi.</span><span class="sxs-lookup"><span data-stu-id="2a95d-129">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance, if accessors are found; otherwise, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-130">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-130">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-131">Il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metodo restituisce una matrice i cui elementi riflettono le `get`, `set`e altre funzioni di accesso della proprietà riflesse dall'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-131">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2a95d-132"><see langword="true" /> per includere i metodi non pubblici nella matrice <see langword="MethodInfo" /> restituita; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-132"><see langword="true" /> to include non-public methods in the returned <see langword="MethodInfo" /> array; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2a95d-133">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-133">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-134">Matrice di oggetti <see cref="T:System.Reflection.MethodInfo" /> i cui elementi riflettono le funzioni di accesso <see langword="get" />, <see langword="set" /> e altre funzioni di accesso della proprietà riflesse dall'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-134">An array of <see cref="T:System.Reflection.MethodInfo" /> objects whose elements reflect the <see langword="get" />, <see langword="set" />, and other accessors of the property reflected by the current instance.</span></span> <span data-ttu-id="2a95d-135">Se il parametro <paramref name="nonPublic" /> è <see langword="true" />, la matrice contiene le funzioni di accesso <see langword="get" />, <see langword="set" /> e altre funzioni di accesso pubbliche e non pubbliche.</span><span class="sxs-lookup"><span data-stu-id="2a95d-135">If the <paramref name="nonPublic" /> parameter is <see langword="true" />, this array contains public and non-public <see langword="get" />, <see langword="set" />, and other accessors.</span></span> <span data-ttu-id="2a95d-136">Se <paramref name="nonPublic" /> è <see langword="false" />, la matrice conterrà solo le funzioni di accesso <see langword="get" />, <see langword="set" /> e altre funzioni di accesso pubbliche.</span><span class="sxs-lookup"><span data-stu-id="2a95d-136">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" />, <see langword="set" />, and other accessors.</span></span> <span data-ttu-id="2a95d-137">Se non vengono rilevate funzioni di accesso con la visibilità specificata, il metodo restituisce una matrice con zero (0) elementi.</span><span class="sxs-lookup"><span data-stu-id="2a95d-137">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-138">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-139">Il <xref:System.Reflection.PropertyInfo.GetAccessors%2A> metodo restituisce una matrice i cui elementi riflettono i metodi pubblici e, se specificato, non pubbliche `get`, `set`e altre funzioni di accesso della proprietà riflesse dall'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-139">The <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method returns an array whose elements reflect the public and, if specified, non-public `get`, `set`, and other accessors of the property reflected by the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-140">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-140">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-141">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-141">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-142">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> restituiscono tutti gli attributi applicati a questo membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-142">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="2a95d-143">true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="2a95d-143">true to search this member's inheritance chain to find the attributes; otherwise false.</span></span></param>
        <summary><span data-ttu-id="2a95d-144">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-144">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-145">Matrice contenente tutti gli attributi personalizzati o matrice con zero elementi se non è stato definito alcun attributo.</span><span class="sxs-lookup"><span data-stu-id="2a95d-145">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-146">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-147">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo restituisce una matrice contenente tutti gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="2a95d-147">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2a95d-148">Tipo di attributo da cercare.</span><span class="sxs-lookup"><span data-stu-id="2a95d-148">The type of attribute to search for.</span></span> <span data-ttu-id="2a95d-149">Vengono restituiti solo gli attributi assegnabili a questo tipo.</span><span class="sxs-lookup"><span data-stu-id="2a95d-149">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="2a95d-150">true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="2a95d-150">true to search this member's inheritance chain to find the attributes; otherwise false.</span></span></param>
        <summary><span data-ttu-id="2a95d-151">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-151">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-152">Matrice degli attributi personalizzati applicati a questo membro o matrice con zero (0) elementi se non è stato applicato alcun attributo.</span><span class="sxs-lookup"><span data-stu-id="2a95d-152">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-153">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-153">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-154">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> il metodo restituisce una matrice di attributi personalizzati identificati dal <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="2a95d-154">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-155">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-155">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetGetMethod" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-156">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-156">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-157">Il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> i metodi restituiscono un <xref:System.Reflection.MethodInfo> oggetto che rappresenta il `get` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-157">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-158">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-158">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-159">Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta la funzione di accesso <see langword="get" /> pubblica per questa proprietà o <see langword="null" /> se la funzione di accesso <see langword="get" /> non è pubblica o non esiste.</span><span class="sxs-lookup"><span data-stu-id="2a95d-159">A <see cref="T:System.Reflection.MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-160">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-160">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-161">Il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> pubblico restituisce `get` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-161">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2a95d-162"><see langword="true" /> per restituire una funzione di accesso <see langword="get" /> non pubblica; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-162"><see langword="true" /> to return a non-public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2a95d-163">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-163">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-164">Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta la funzione di accesso <see langword="get" /> per questa proprietà, se il parametro <paramref name="nonPublic" /> è <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-164">A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if the <paramref name="nonPublic" /> parameter is <see langword="true" />.</span></span> <span data-ttu-id="2a95d-165"><see langword="null" /> se <paramref name="nonPublic" /> è <see langword="false" /> e la funzione di accesso <see langword="get" /> non è pubblica o se <paramref name="nonPublic" /> è <see langword="true" />, ma non esiste alcuna funzione di accesso <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-165">Or <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-166">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-166">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-167">Il <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> metodo pubblico o non pubblico `get` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-167">The <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> method returns the public or non-public `get` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-168">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.GetHashCode" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-168">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-169">Codice hash per l'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-169">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-170">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-170">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-171">Il <xref:System.Object.GetHashCode%2A> metodo serve come funzione hash per un particolare tipo.</span><span class="sxs-lookup"><span data-stu-id="2a95d-171">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="2a95d-172"><xref:System.Object.GetHashCode%2A> è adatto per l'uso in algoritmi hash e dati strutture, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="2a95d-172"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="2a95d-173">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="2a95d-173">Reserved for future use.</span></span> <span data-ttu-id="2a95d-174">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="2a95d-174">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="2a95d-175">Matrice di nomi da mappare.</span><span class="sxs-lookup"><span data-stu-id="2a95d-175">An array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="2a95d-176">Numero dei nomi da mappare.</span><span class="sxs-lookup"><span data-stu-id="2a95d-176">The count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="2a95d-177">Contesto delle impostazioni locali in cui interpretare i nomi.</span><span class="sxs-lookup"><span data-stu-id="2a95d-177">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="2a95d-178">Matrice allocata dal chiamante che riceve gli identificatori corrispondenti ai nomi.</span><span class="sxs-lookup"><span data-stu-id="2a95d-178">An array allocated by the caller that receives the identifiers corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="2a95d-179">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span><span class="sxs-lookup"><span data-stu-id="2a95d-179">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-180">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-180">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="2a95d-181">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2a95d-181">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-182">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-183">Matrice di tipo <see cref="T:System.Reflection.ParameterInfo" /> contenente i parametri per gli indici.</span><span class="sxs-lookup"><span data-stu-id="2a95d-183">An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters for the indexes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-184">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-184">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-185">Il <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> metodo restituisce una matrice di tutti i parametri di indice per la proprietà</span><span class="sxs-lookup"><span data-stu-id="2a95d-185">The <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method returns an array of all the index parameters for the property</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-186">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetSetMethod" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-187">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-187">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-188">Il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> i metodi restituiscono un <xref:System.Reflection.MethodInfo> oggetto che rappresenta il `set` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-188">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> methods return a <xref:System.Reflection.MethodInfo> object representing the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-189">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-190">Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo <see langword="Set" /> per questa proprietà se la funzione di accesso <see langword="set" /> è pubblica o <see langword="null" /> se la funzione di accesso <see langword="set" /> non è pubblica.</span><span class="sxs-lookup"><span data-stu-id="2a95d-190">The <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-191">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-191">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-192">Il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> pubblico restituisce `set` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-192">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the public `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic">
          <span data-ttu-id="2a95d-193"><see langword="true" /> per restituire una funzione di accesso non pubblica; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-193"><see langword="true" /> to return a non-public accessor; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2a95d-194">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-195">Uno dei valori della tabella seguente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-195">One of the values in the following table.</span></span>  
  
 <span data-ttu-id="2a95d-196"><list type="table"><listheader><term> Valore</span><span class="sxs-lookup"><span data-stu-id="2a95d-196"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="2a95d-197"></term><description> Significato</span><span class="sxs-lookup"><span data-stu-id="2a95d-197"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="2a95d-198"></description></listheader><item><term> Oggetto <see cref="T:System.Reflection.MethodInfo" /> che rappresenta il metodo <see langword="Set" /> per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-198"></description></listheader><item><term> A <see cref="T:System.Reflection.MethodInfo" /> object representing the <see langword="Set" /> method for this property.</span></span>  
  
 <span data-ttu-id="2a95d-199"></term><description> La funzione di accesso <see langword="set" /> è pubblica.</span><span class="sxs-lookup"><span data-stu-id="2a95d-199"></term><description> The <see langword="set" /> accessor is public.</span></span>  
  
 <span data-ttu-id="2a95d-200">oppure</span><span class="sxs-lookup"><span data-stu-id="2a95d-200">-or-</span></span>  
  
 <span data-ttu-id="2a95d-201">Il parametro <paramref name="nonPublic" /> è <see langword="true" /> e la funzione di accesso <see langword="set" /> non è pubblica.</span><span class="sxs-lookup"><span data-stu-id="2a95d-201">The <paramref name="nonPublic" /> parameter is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 <span data-ttu-id="2a95d-202"></description></item><item><term><see langword="null" /></term><description> Il parametro <paramref name="nonPublic" /> è <see langword="true" />, ma la proprietà è di sola lettura.</span><span class="sxs-lookup"><span data-stu-id="2a95d-202"></description></item><item><term><see langword="null" /></term><description> The <paramref name="nonPublic" /> parameter is <see langword="true" />, but the property is read-only.</span></span>  
  
 <span data-ttu-id="2a95d-203">oppure</span><span class="sxs-lookup"><span data-stu-id="2a95d-203">-or-</span></span>  
  
 <span data-ttu-id="2a95d-204">Il parametro <paramref name="nonPublic" /> è <see langword="false" /> e la funzione di accesso <see langword="set" /> non è pubblica.</span><span class="sxs-lookup"><span data-stu-id="2a95d-204">The <paramref name="nonPublic" /> parameter is <see langword="false" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 <span data-ttu-id="2a95d-205">oppure</span><span class="sxs-lookup"><span data-stu-id="2a95d-205">-or-</span></span>  
  
 <span data-ttu-id="2a95d-206">Non è presente alcuna funzione di accesso <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-206">There is no <see langword="set" /> accessor.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-207">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-207">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-208">Il <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> metodo restituisce il `set` funzione di accesso per questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-208">The <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method returns the `set` accessor for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-209">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.GetType" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-209">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-210">Un oggetto <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-210">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-211">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-211">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-212">Il <xref:System.Object.GetType%2A> metodo ottiene il tipo dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-212">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="2a95d-213">Informazioni sul tipo da restituire.</span><span class="sxs-lookup"><span data-stu-id="2a95d-213">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="2a95d-214">Identificatore delle impostazioni locali per le informazioni sul tipo.</span><span class="sxs-lookup"><span data-stu-id="2a95d-214">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="2a95d-215">Puntatore all'oggetto di informazioni sul tipo richiesto.</span><span class="sxs-lookup"><span data-stu-id="2a95d-215">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="2a95d-216">Recupera le informazioni sul tipo relative a un oggetto, che possono essere usate per ottenere informazioni sul tipo relative a un'interfaccia.</span><span class="sxs-lookup"><span data-stu-id="2a95d-216">Retrieves the type information for an object, which can be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-217">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-217">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="2a95d-218">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2a95d-218">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="2a95d-219">Quando termina, questo metodo contiene un puntatore a un percorso che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span><span class="sxs-lookup"><span data-stu-id="2a95d-219">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="2a95d-220">Questo parametro viene passato non inizializzato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-220">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="2a95d-221">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span><span class="sxs-lookup"><span data-stu-id="2a95d-221">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-222">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-222">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="2a95d-223">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2a95d-223">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-224">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.PropertyInfo.GetValue" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-224">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.GetValue" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-225">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-225">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-226">Il <xref:System.Reflection.PropertyInfo.GetValue%2A> restituiscono il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-226">The <xref:System.Reflection.PropertyInfo.GetValue%2A> methods return the value of the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2a95d-227">Oggetto di cui verrà restituito il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-227">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="2a95d-228">Valori di indice facoltativi per le proprietà indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-228">Optional index values for indexed properties.</span></span> <span data-ttu-id="2a95d-229">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-229">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="2a95d-230">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-230">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-231">Valore della proprietà per <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-231">The property value for the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-232">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-232">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-233">Il <xref:System.Reflection.PropertyInfo.GetValue%2A> metodo restituisce un valore letterale associato alla proprietà da un compilatore.</span><span class="sxs-lookup"><span data-stu-id="2a95d-233">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns a literal value associated with the property by a compiler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2a95d-234">Oggetto di cui verrà restituito il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-234">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="2a95d-235">Attributo di chiamata.</span><span class="sxs-lookup"><span data-stu-id="2a95d-235">The invocation attribute.</span></span> <span data-ttu-id="2a95d-236">Deve essere un flag di bit richiamato da <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-236">This must be a bit flag from <see langword="BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="2a95d-237">È necessario specificare un attributo di chiamata appropriato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-237">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="2a95d-238">Per richiamare un membro statico, è necessario impostare il flag <see langword="Static" /> di <see langword="BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-238">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="2a95d-239">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see langword="MemberInfo" /> tramite la reflection.</span><span class="sxs-lookup"><span data-stu-id="2a95d-239">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="2a95d-240">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-240">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="2a95d-241">Valori di indice facoltativi per le proprietà indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-241">Optional index values for indexed properties.</span></span> <span data-ttu-id="2a95d-242">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-242">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="2a95d-243">Oggetto <see langword="CultureInfo" /> che rappresenta le impostazioni cultura in base alle quali verrà localizzata la risorsa.</span><span class="sxs-lookup"><span data-stu-id="2a95d-243">The <see langword="CultureInfo" /> object that represents the culture for which the resource will be localized.</span></span> <span data-ttu-id="2a95d-244">Se una risorsa non viene localizzata con queste impostazioni cultura, il metodo <see langword="CultureInfo.Parent" /> sarà successivamente chiamato in cerca di una corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="2a95d-244">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="2a95d-245">Se questo valore è <see langword="null" />, l'oggetto <see langword="CultureInfo" /> è ottenuto dalla proprietà <see langword="CultureInfo.CurrentUICulture" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-245">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="2a95d-246">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-247">Valore della proprietà per <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-247">The property value for the <paramref name="obj" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-248">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-248">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-249">Il <xref:System.Reflection.PropertyInfo.GetValue%2A> metodo restituisce il valore di una proprietà con l'associazione specificata, indice, e <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="2a95d-249">The <xref:System.Reflection.PropertyInfo.GetValue%2A> method returns the value of a property having the specified binding, index, and <xref:System.Globalization.CultureInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="2a95d-250">Identificatore di un membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-250">An identifier of a member.</span></span></param>
        <param name="riid"><span data-ttu-id="2a95d-251">Riservato per utilizzi futuri.</span><span class="sxs-lookup"><span data-stu-id="2a95d-251">Reserved for future use.</span></span> <span data-ttu-id="2a95d-252">Deve essere IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="2a95d-252">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="2a95d-253">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span><span class="sxs-lookup"><span data-stu-id="2a95d-253">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="2a95d-254">Flag che descrivono il contesto della chiamata.</span><span class="sxs-lookup"><span data-stu-id="2a95d-254">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="2a95d-255">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span><span class="sxs-lookup"><span data-stu-id="2a95d-255">A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="2a95d-256">Puntatore al percorso in cui verrà archiviato il risultato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-256">A pointer to the location where the result will be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="2a95d-257">Puntatore a una struttura contenente informazioni sulle eccezioni.</span><span class="sxs-lookup"><span data-stu-id="2a95d-257">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="2a95d-258">Indice del primo argomento che contiene un errore.</span><span class="sxs-lookup"><span data-stu-id="2a95d-258">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="2a95d-259">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span><span class="sxs-lookup"><span data-stu-id="2a95d-259">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-260">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-260">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span> <span data-ttu-id="2a95d-261">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2a95d-261">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2a95d-262">Oggetto <see cref="T:System.Type" /> a cui vengono applicati gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="2a95d-262">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="2a95d-263">true per eseguire la ricerca nella catena di ereditarietà del membro per trovare gli attributi; in caso contrario, false.</span><span class="sxs-lookup"><span data-stu-id="2a95d-263">true to search this member's inheritance chain to find the attributes; otherwise false.</span></span></param>
        <summary><span data-ttu-id="2a95d-264">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-264">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="2a95d-265"><see langword="true" /> se una o più istanze del parametro <paramref name="attributeType" /> sono applicate al membro; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-265"><see langword="true" /> if one or more instances of the <paramref name="attributeType" /> parameter are applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-266">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-266">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-267">Il <xref:System.Reflection.MemberInfo.IsDefined%2A> metodo indica se uno o più istanze del `attributeType` parametro viene applicato a questo membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-267">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of the `attributeType` parameter is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-268">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-268">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.IsSpecialName" /> property.</span></span></summary>
        <value>
          <span data-ttu-id="2a95d-269"><see langword="true" /> se questa proprietà è il nome speciale; in caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-269"><see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-270">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-270">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-271">Il <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> proprietà imposta un valore che indica se la proprietà è il nome speciale.</span><span class="sxs-lookup"><span data-stu-id="2a95d-271">The <xref:System.Reflection.PropertyInfo.IsSpecialName%2A> property sets a value indicating whether the property is the special name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-272">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.MemberType" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-272">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.MemberType" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-273">Uno dei valori <see cref="T:System.Reflection.MemberTypes" /> che indica che il membro è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-273">One of the <see cref="T:System.Reflection.MemberTypes" /> values indicating that this member is a property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-274">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-274">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-275">Il <xref:System.Reflection.PropertyInfo.MemberType%2A> proprietà ottiene un <xref:System.Reflection.MemberTypes> valore che indica che questo membro è una proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-275">The <xref:System.Reflection.PropertyInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-276">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.Name" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-276">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-277">Oggetto <see cref="T:System.String" /> contenente il nome del membro.</span><span class="sxs-lookup"><span data-stu-id="2a95d-277">A <see cref="T:System.String" /> object containing the name of this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-278">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-278">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-279">Il <xref:System.Reflection.MemberInfo.Name%2A> proprietà ottiene il nome del membro corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-279">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-280">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-280">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-281">Tipo della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-281">The type of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-282">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-282">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-283">Il <xref:System.Reflection.PropertyInfo.PropertyType%2A> proprietà ottiene il tipo di questa proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-283">The <xref:System.Reflection.PropertyInfo.PropertyType%2A> property gets the type of this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._PropertyInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2a95d-284">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-284">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span></span></summary>
        <value><span data-ttu-id="2a95d-285">Oggetto <see cref="T:System.Type" /> tramite il quale è stato ottenuto questo oggetto <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-285">The <see cref="T:System.Type" /> object through which this <see cref="T:System.Reflection.MemberInfo" /> object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-286">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-286">This property is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-287">Il <xref:System.Reflection.MemberInfo.ReflectedType%2A> proprietà ottiene l'oggetto classe usato per ottenere questo <xref:System.Reflection.MemberInfo> oggetto.</span><span class="sxs-lookup"><span data-stu-id="2a95d-287">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this <xref:System.Reflection.MemberInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2a95d-288">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="Overload:System.Reflection.PropertyInfo.SetValue" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-288">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.PropertyInfo.SetValue" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-289">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-289">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-290">Il <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo imposta il valore della proprietà per l'oggetto specificato sul valore specificato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-290">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2a95d-291">Oggetto di cui verrà impostato il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-291">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="2a95d-292">Nuovo valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-292">The new value for this property.</span></span></param>
        <param name="index"><span data-ttu-id="2a95d-293">Valori di indice facoltativi per le proprietà indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-293">Optional index values for indexed properties.</span></span> <span data-ttu-id="2a95d-294">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-294">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="2a95d-295">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-295">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-296">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-296">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-297">Il <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo imposta il valore della proprietà con valori di indice facoltativi per le proprietà di indice.</span><span class="sxs-lookup"><span data-stu-id="2a95d-297">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the property with optional index values for index properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="index" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2a95d-298">Oggetto di cui verrà restituito il valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-298">The object whose property value will be returned.</span></span></param>
        <param name="value"><span data-ttu-id="2a95d-299">Nuovo valore della proprietà.</span><span class="sxs-lookup"><span data-stu-id="2a95d-299">The new value for this property.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="2a95d-300">Attributo di chiamata.</span><span class="sxs-lookup"><span data-stu-id="2a95d-300">The invocation attribute.</span></span> <span data-ttu-id="2a95d-301">Deve essere un flag di bit richiamato da <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> o <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-301">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="2a95d-302">È necessario specificare un attributo di chiamata appropriato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-302">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="2a95d-303">Per richiamare un membro statico, è necessario impostare il flag <see langword="Static" /> di <see langword="BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-303">If a static member will be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="2a95d-304">Oggetto che consente l'associazione, la coercizione di tipi di argomento, la chiamata di membri e il recupero di oggetti <see cref="T:System.Reflection.MemberInfo" /> tramite la reflection.</span><span class="sxs-lookup"><span data-stu-id="2a95d-304">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="2a95d-305">Se <c>binder</c> è <see langword="null" />, verrà usato il binder predefinito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-305">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="2a95d-306">Valori di indice facoltativi per le proprietà indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-306">Optional index values for indexed properties.</span></span> <span data-ttu-id="2a95d-307">Il valore deve essere <see langword="null" /> per le proprietà non indicizzate.</span><span class="sxs-lookup"><span data-stu-id="2a95d-307">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="2a95d-308">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che rappresenta le impostazioni cultura in base alle quali verrà localizzata la risorsa.</span><span class="sxs-lookup"><span data-stu-id="2a95d-308">The <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture for which the resource will be localized.</span></span> <span data-ttu-id="2a95d-309">Se una risorsa non viene localizzata con queste impostazioni cultura, il metodo <see langword="CultureInfo.Parent" /> sarà successivamente chiamato in cerca di una corrispondenza.</span><span class="sxs-lookup"><span data-stu-id="2a95d-309">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="2a95d-310">Se questo valore è <see langword="null" />, l'oggetto <see langword="CultureInfo" /> è ottenuto dalla proprietà <see langword="CultureInfo.CurrentUICulture" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-310">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="2a95d-311">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-311">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-312">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-312">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="2a95d-313">Il <xref:System.Reflection.FieldInfo.SetValue%2A> metodo imposta il valore della proprietà per l'oggetto specificato sul valore specificato.</span><span class="sxs-lookup"><span data-stu-id="2a95d-313">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the property value for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._PropertyInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2a95d-314">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="2a95d-314">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="2a95d-315">Stringa che rappresenta l'oggetto <see cref="T:System.Object" /> corrente.</span><span class="sxs-lookup"><span data-stu-id="2a95d-315">A string that represents the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a95d-316">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="2a95d-316">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
