<Type Name="_Exception" FullName="System.Runtime.InteropServices._Exception">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac0603d2ec05bb27b70d434004129d96a161bdc0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Exception" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Exception" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Exception" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Exception" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Exception" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("b36b5c63-42ef-38bc-a07e-0b34c98f164a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="63560-101">Espone i membri pubblici della classe <see cref="T:System.Exception" /> a codice non gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="63560-101">Exposes the public members of the <see cref="T:System.Exception" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-102">Questa interfaccia consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-102">This interface is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-103">Questa interfaccia mantiene l'ordine vtable della <xref:System.Exception?displayProperty=nameWithType> classe membri che è possibile accedere tramite gli oggetti COM non gestiti.</span><span class="sxs-lookup"><span data-stu-id="63560-103">This interface preserves the vtable order of the <xref:System.Exception?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="63560-104">Oggetto <see cref="T:System.Object" /> da confrontare con l'oggetto <see cref="T:System.Object" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-104">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63560-105">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-105">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63560-106">
            <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-106">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-107">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-107">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-108">Il <xref:System.Object.Equals%2A?displayProperty=nameWithType> metodo determina se l'oggetto specificato <xref:System.Object> è uguale all'oggetto corrente <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="63560-108">The <xref:System.Object.Equals%2A?displayProperty=nameWithType> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetBaseException">
      <MemberSignature Language="C#" Value="public Exception GetBaseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetBaseException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetBaseException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetBaseException();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63560-109">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Exception.GetBaseException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-109">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetBaseException" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63560-110">Eccezione generata per prima in una catena di eccezioni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-110">The first exception thrown in a chain of exceptions.</span>
          </span>
          <span data-ttu-id="63560-111">Se la proprietà <see cref="P:System.Exception.InnerException" /> dell'eccezione corrente è un riferimento Null (<see langword="Nothing" /> in Visual Basic), restituisce l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-111">If the <see cref="P:System.Exception.InnerException" /> property of the current exception is a null reference (<see langword="Nothing" /> in Visual Basic), this property returns the current exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-112">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-112">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-113">Il <xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType> metodo restituisce il <xref:System.Exception> che è la causa radice di uno o più eccezioni successive.</span><span class="sxs-lookup"><span data-stu-id="63560-113">The <xref:System.Exception.GetBaseException%2A?displayProperty=nameWithType> method returns the <xref:System.Exception> that is the root cause of one or more subsequent exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetBaseException" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63560-114">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-114">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63560-115">Codice hash per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-115">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-116">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-116">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-117">Il <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> metodo serve come funzione hash per un particolare tipo.</span><span class="sxs-lookup"><span data-stu-id="63560-117">The <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="63560-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> è adatto per l'uso in algoritmi hash e dati strutture, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="63560-118"><xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> is suitable for use in hashing algorithms and data structures such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="63560-119">Oggetto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> che contiene i dati di oggetto serializzati relativi all'eccezione generata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-119">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="63560-120">Struttura <see cref="T:System.Runtime.Serialization.StreamingContext" /> contenente le informazioni contestuali sull'origine o sulla destinazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-120">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that contains contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="63560-121">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-121">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-122">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-122">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-123">Il <xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType> metodo imposta la <xref:System.Runtime.Serialization.SerializationInfo> oggetto con le informazioni sull'eccezione.</span><span class="sxs-lookup"><span data-stu-id="63560-123">The <xref:System.Exception.GetObjectData%2A?displayProperty=nameWithType> method sets the <xref:System.Runtime.Serialization.SerializationInfo> object with information about the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="63560-124">richiede l'attendibilità totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-124">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="63560-125">Questo membro non può essere utilizzato da codice parzialmente attendibile o trasparente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-125">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63560-126">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Exception.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-126">Provides COM objects with version-independent access to the <see cref="M:System.Exception.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63560-127">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo runtime dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-127">A <see cref="T:System.Type" /> object that represents the exact runtime type of the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-128">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-128">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-129">Il <xref:System.Exception.GetType%2A?displayProperty=nameWithType> metodo ottiene il tipo di runtime dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-129">The <xref:System.Exception.GetType%2A?displayProperty=nameWithType> method gets the runtime type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.GetType" />
      </Docs>
    </Member>
    <Member MemberName="HelpLink">
      <MemberSignature Language="C#" Value="public string HelpLink { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.HelpLink" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpLink As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpLink { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-130">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.HelpLink" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-130">Provides COM objects with version-independent access to the <see cref="P:System.Exception.HelpLink" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-131">URN (Uniform Resource Name) o URL (Uniform Resource Locator) di un file della Guida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-131">The Uniform Resource Name (URN) or Uniform Resource Locator (URL) to a help file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-132">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-132">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-133">Il <xref:System.Exception.HelpLink%2A?displayProperty=nameWithType> proprietà ottiene o imposta un collegamento al file della Guida associato all'eccezione.</span><span class="sxs-lookup"><span data-stu-id="63560-133">The <xref:System.Exception.HelpLink%2A?displayProperty=nameWithType> property gets or sets a link to the help file associated with this exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.HelpLink" />
      </Docs>
    </Member>
    <Member MemberName="InnerException">
      <MemberSignature Language="C#" Value="public Exception InnerException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception InnerException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.InnerException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ InnerException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-134">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-134">Provides COM objects with version-independent access to the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-135">Istanza di <see cref="T:System.Exception" /> in cui viene descritto l'errore che ha causato l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-135">An instance of <see cref="T:System.Exception" /> that describes the error that caused the current exception.</span>
          </span>
          <span data-ttu-id="63560-136">La proprietà <see cref="P:System.Exception.InnerException" /> restituisce lo stesso valore passato al costruttore, oppure un riferimento null (<see langword="Nothing" /> in Visual Basic) se il valore dell'eccezione interna non è stato fornito al costruttore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-136">The <see cref="P:System.Exception.InnerException" /> property returns the same value that was passed to the constructor, or a null reference (<see langword="Nothing" /> in Visual Basic) if the inner exception value was not supplied to the constructor.</span>
          </span>
          <span data-ttu-id="63560-137">Questa proprietà è di sola lettura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-137">This property is read-only.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-138">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-138">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-139">Il <xref:System.Exception.InnerException%2A?displayProperty=nameWithType> proprietà ottiene il <xref:System.Exception> istanza che ha causato l'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-139">The <xref:System.Exception.InnerException%2A?displayProperty=nameWithType> property gets the <xref:System.Exception> instance that caused the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-140">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.Message" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-140">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Message" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-141">Messaggio di errore che spiega il motivo dell'eccezione o una stringa vuota("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-141">The error message that explains the reason for the exception, or an empty string("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-142">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-142">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-143">Il <xref:System.Exception.Message%2A?displayProperty=nameWithType> proprietà ottiene un messaggio che descrive l'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-143">The <xref:System.Exception.Message%2A?displayProperty=nameWithType> property gets a message that describes the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Message" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-144">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.Source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-144">Provides COM objects with version-independent access to the <see cref="P:System.Exception.Source" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-145">Nome dell'oggetto che ha generato l'errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-145">The name of the application or the object that causes the error.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-146">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-146">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-147">Il <xref:System.Exception.Source%2A?displayProperty=nameWithType> proprietà ottiene o imposta il nome dell'applicazione o di oggetto che ha generato l'errore.</span><span class="sxs-lookup"><span data-stu-id="63560-147">The <xref:System.Exception.Source%2A?displayProperty=nameWithType> property gets or sets the name of the application or the object that causes the error.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.Source" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.StackTrace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StackTrace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StackTrace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-148">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.StackTrace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-148">Provides COM objects with version-independent access to the <see cref="P:System.Exception.StackTrace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-149">Stringa in cui viene descritto il contenuto dello stack di chiamate, indicando per prima la chiamata al metodo più recente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-149">A string that describes the contents of the call stack, with the most recent method call appearing first.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-150">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-150">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-151">Il <xref:System.Exception.StackTrace%2A?displayProperty=nameWithType> proprietà ottiene una rappresentazione di stringa dei frame nello stack di chiamate al momento della generazione dell'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-151">The <xref:System.Exception.StackTrace%2A?displayProperty=nameWithType> property gets a string representation of the frames on the call stack at the time the current exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="TargetSite">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodBase TargetSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodBase TargetSite" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Exception.TargetSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSite As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodBase ^ TargetSite { System::Reflection::MethodBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="63560-152">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Exception.TargetSite" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-152">Provides COM objects with version-independent access to the <see cref="P:System.Exception.TargetSite" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="63560-153">Oggetto <see cref="T:System.Reflection.MethodBase" />, se presente, che ha generato l'eccezione corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-153">The <see cref="T:System.Reflection.MethodBase" /> object that threw the current exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-154">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-154">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-155">Il <xref:System.Exception.TargetSite%2A?displayProperty=nameWithType> proprietà ottiene il metodo che genera l'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-155">The <xref:System.Exception.TargetSite%2A?displayProperty=nameWithType> property gets the method that throws the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.TargetSite" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Exception.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="63560-156">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Exception.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-156">Provides COM objects with version-independent access to the <see cref="M:System.Exception.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="63560-157">Stringa che rappresenta l'oggetto <see cref="T:System.Exception" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="63560-157">A string that represents the current <see cref="T:System.Exception" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63560-158">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="63560-158">This method is for access to managed classes from unmanaged code and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="63560-159">Il <xref:System.Exception.ToString%2A?displayProperty=nameWithType> metodo crea e restituisce una rappresentazione di stringa dell'eccezione corrente.</span><span class="sxs-lookup"><span data-stu-id="63560-159">The <xref:System.Exception.ToString%2A?displayProperty=nameWithType> method creates and returns a string representation of the current exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Exception.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>