<Type Name="_FieldInfo" FullName="System.Runtime.InteropServices._FieldInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bf3ae0a340e47cf2d90888c54ab30b502e42421a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _FieldInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _FieldInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._FieldInfo" />
  <TypeSignature Language="VB.NET" Value="Public Interface _FieldInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class _FieldInfo" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("8A7C1442-A9FB-366B-80D8-4939FFA6DBE0")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.FieldInfo))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="64e56-101">Espone i membri pubblici della classe <see cref="T:System.Reflection.FieldInfo" /> a codice non gestito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64e56-101">Exposes the public members of the <see cref="T:System.Reflection.FieldInfo" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-102">Questa interfaccia consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-103">Questa interfaccia mantiene l'ordine vtable della <xref:System.Reflection.FieldInfo?displayProperty=nameWithType> classe membri che è possibile accedere tramite gli oggetti COM non gestiti.</span><span class="sxs-lookup"><span data-stu-id="64e56-103">This interface preserves the vtable order of the <xref:System.Reflection.FieldInfo?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.FieldAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As FieldAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::FieldAttributes Attributes { System::Reflection::FieldAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-104">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.Attributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.Attributes" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-105">Oggetto <see cref="T:System.Reflection.FieldAttributes" /> di questo campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-105">The <see cref="T:System.Reflection.FieldAttributes" /> for this field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-106">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-106">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-107">Il <xref:System.Reflection.FieldInfo.Attributes%2A> proprietà ottiene gli attributi associati a questo campo.</span><span class="sxs-lookup"><span data-stu-id="64e56-107">The <xref:System.Reflection.FieldInfo.Attributes%2A> property gets the attributes associated with this field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-108">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.DeclaringType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-108">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.DeclaringType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-109">Oggetto <see cref="T:System.Type" /> per la classe che dichiara questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-109">The <see cref="T:System.Type" /> object for the class that declares this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-110">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-110">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-111">Il <xref:System.Reflection.MemberInfo.DeclaringType%2A> proprietà ottiene la classe che dichiara questo membro.</span><span class="sxs-lookup"><span data-stu-id="64e56-111">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="64e56-112">Oggetto <see cref="T:System.Object" /> da confrontare con l'oggetto <see cref="T:System.Object" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-112">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-113">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.Equals(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-113">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-114">
            <see langword="true" /> se l'oggetto <see cref="T:System.Object" /> specificato è uguale all'oggetto <see cref="T:System.Object" /> corrente; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-114">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-115">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-115">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-116">Il <xref:System.Object.Equals%2A> metodo determina se l'oggetto specificato <xref:System.Object> è uguale all'oggetto corrente <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="64e56-116">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldHandle">
      <MemberSignature Language="C#" Value="public RuntimeFieldHandle FieldHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeFieldHandle FieldHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.FieldHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldHandle As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property RuntimeFieldHandle FieldHandle { RuntimeFieldHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-117">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.FieldHandle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-117">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.FieldHandle" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-118">Handle per la rappresentazione dei metadati interni di un campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-118">A handle to the internal metadata representation of a field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-119">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-119">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-120">Il <xref:System.Reflection.FieldInfo.FieldHandle%2A> proprietà ottiene un <xref:System.RuntimeFieldHandle>, ovvero un handle per la rappresentazione interna dei metadati di un campo.</span><span class="sxs-lookup"><span data-stu-id="64e56-120">The <xref:System.Reflection.FieldInfo.FieldHandle%2A> property gets a <xref:System.RuntimeFieldHandle>, which is a handle to the internal metadata representation of a field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldType">
      <MemberSignature Language="C#" Value="public Type FieldType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FieldType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.FieldType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ FieldType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-121">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.FieldType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-121">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.FieldType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-122">Il tipo di questo oggetto campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-122">The type of this field object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-123">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-123">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-124">Il <xref:System.Reflection.FieldInfo.FieldType%2A> proprietà ottiene il tipo di oggetto in questo campo.</span><span class="sxs-lookup"><span data-stu-id="64e56-124">The <xref:System.Reflection.FieldInfo.FieldType%2A> property gets the type of this field object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-125">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-125">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.MemberInfo.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-126">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-126">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-127">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> restituiscono tutti gli attributi applicati a questo membro.</span><span class="sxs-lookup"><span data-stu-id="64e56-127">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> methods return all attributes applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="64e56-128">Specifica se trovare gli attributi cercandoli nella catena di ereditarietà del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-128">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-129">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-129">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-130">Matrice contenente tutti gli attributi personalizzati o matrice con zero elementi se non è stato definito alcun attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-130">An array that contains all the custom attributes, or an array with zero elements if no attributes are defined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-131">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-131">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-132">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> metodo restituisce una matrice contenente tutti gli attributi personalizzati.</span><span class="sxs-lookup"><span data-stu-id="64e56-132">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="64e56-133">Tipo di attributo da cercare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-133">The type of attribute to search for.</span>
          </span>
          <span data-ttu-id="64e56-134">Vengono restituiti solo gli attributi assegnabili a questo tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-134">Only attributes that are assignable to this type are returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="64e56-135">Specifica se trovare gli attributi cercandoli nella catena di ereditarietà del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-135">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-136">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-137">Matrice degli attributi personalizzati applicati a questo membro o matrice con zero (0) elementi se non è stato applicato alcun attributo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-137">An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-138">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-139">Il <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> il metodo restituisce una matrice di attributi personalizzati identificati dal <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="64e56-139">The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64e56-140">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.GetHashCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-140">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-141">Codice hash per l'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-141">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-142">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-142">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-143">Il <xref:System.Object.GetHashCode%2A> metodo serve come funzione hash per un particolare tipo.</span><span class="sxs-lookup"><span data-stu-id="64e56-143">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="64e56-144"><xref:System.Object.GetHashCode%2A> può essere usato in algoritmi di hash e strutture di dati, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="64e56-144"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIDsOfNames">
      <MemberSignature Language="C#" Value="public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="64e56-145">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-145">Reserved for future use.</span>
          </span>
          <span data-ttu-id="64e56-146">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-146">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="64e56-147">Matrice di nomi passata di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-147">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="64e56-148">Conteggio dei nomi di cui eseguire il mapping.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-148">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="64e56-149">Contesto delle impostazioni locali in cui interpretare i nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-149">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="64e56-150">Matrice allocata dal chiamante che riceve gli ID corrispondenti ai nomi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-150">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-151">Esegue il mapping di un set di nomi a un set corrispondente di ID dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-151">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-152">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="64e56-153">Per ulteriori informazioni su `IDispatch::GetIDsOfNames`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="64e56-153">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64e56-154">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.GetType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-154">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-155">Un oggetto <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-155">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-156">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-156">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-157">Il <xref:System.Object.GetType%2A> metodo ottiene il tipo dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="64e56-157">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfo">
      <MemberSignature Language="C#" Value="public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="64e56-158">Informazioni sul tipo da restituire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-158">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="64e56-159">Identificatore delle impostazioni locali per le informazioni sul tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-159">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="64e56-160">Riceve un puntatore all'oggetto relativo alle informazioni sul tipo richiesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-160">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-161">Recupera le informazioni sul tipo relative a un oggetto che può quindi essere usato per ottenere informazioni sul tipo relative a un'interfaccia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-161">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-162">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-162">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="64e56-163">Per ulteriori informazioni su `IDispatch::GetTypeInfo`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="64e56-163">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeInfoCount">
      <MemberSignature Language="C#" Value="public void GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTypeInfoCount (ByRef pcTInfo As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="64e56-164">Punta a una posizione che riceve il numero di interfacce di informazioni sul tipo fornite dall'oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-164">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-165">Recupera il numero delle interfacce di informazioni sul tipo fornite da un oggetto (0 o 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-165">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-166">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-166">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="64e56-167">Per ulteriori informazioni su `IDispatch::GetTypeInfoCount`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="64e56-167">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="64e56-168">Oggetto di cui verrà restituito il valore del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-168">The object whose field value will be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-169">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-169">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-170">Oggetto contenente il valore del campo riflesso da questa istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-170">An object containing the value of the field reflected by this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-171">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-171">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-172">Il <xref:System.Reflection.FieldInfo.GetValue%2A> metodo restituisce il valore di un campo supportato da un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-172">The <xref:System.Reflection.FieldInfo.GetValue%2A> method returns the value of a field supported by a given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueDirect">
      <MemberSignature Language="C#" Value="public object GetValueDirect (TypedReference obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValueDirect(valuetype System.TypedReference obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueDirect (obj As TypedReference) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueDirect(TypedReference obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="64e56-173">Struttura <see cref="T:System.TypedReference" /> che incapsula un puntatore gestito a un percorso e una rappresentazione di runtime del tipo che potrebbe essere memorizzato in tale percorso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-173">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-174">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-174">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-175">Oggetto <see cref="T:System.Object" /> che contiene un valore di campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-175">An <see cref="T:System.Object" /> containing a field value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-176">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-176">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-177">Il <xref:System.Reflection.FieldInfo.GetValueDirect%2A> metodo restituisce il valore di un campo supportato da un oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-177">The <xref:System.Reflection.FieldInfo.GetValueDirect%2A> method returns the value of a field supported by a given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="64e56-178">Identifica il membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-178">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="64e56-179">Riservato per utilizzi futuri.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-179">Reserved for future use.</span>
          </span>
          <span data-ttu-id="64e56-180">Deve essere IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-180">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="64e56-181">Contesto di impostazioni locali all'interno del quale devono essere interpretati gli argomenti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-181">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="64e56-182">Flag che descrivono il contesto della chiamata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-182">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="64e56-183">Puntatore a una struttura contenente una matrice di argomenti, una matrice di DISPID per argomenti denominati e i conteggi del numero di elementi nelle matrici.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-183">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="64e56-184">Puntatore alla posizione in cui deve essere archiviato il risultato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-184">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="64e56-185">Puntatore a una struttura contenente informazioni sull'eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-185">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="64e56-186">Indice del primo argomento che contiene un errore.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-186">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-187">Fornisce l'accesso a proprietà e metodi esposti da un oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-187">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-188">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-188">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="64e56-189">Per ulteriori informazioni su `IDispatch::Invoke`, vedere MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="64e56-189">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-190">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-190">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-191">
            <see langword="true" /> se l'attributo <see langword="Assembly" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-191">
              <see langword="true" /> if the field has the <see langword="Assembly" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-192">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-192">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-193">Il <xref:System.Reflection.FieldInfo.IsAssembly%2A> proprietà ottiene un valore che indica se questo campo è `Assembly` visibilità a livello.</span><span class="sxs-lookup"><span data-stu-id="64e56-193">The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property gets a value indicating whether this field has `Assembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="64e56-194">Oggetto <see cref="T:System.Type" /> a cui vengono applicati gli attributi personalizzati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-194">The <see cref="T:System.Type" /> object to which the custom attributes are applied.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="64e56-195">Specifica se trovare gli attributi cercandoli nella catena di ereditarietà del membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-195">Specifies whether to search this member's inheritance chain to find the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-196">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-196">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-197">
            <see langword="true" /> se una o più istanze di <paramref name="attributeType" /> sono applicate al membro; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-197">
              <see langword="true" /> if one or more instance of <paramref name="attributeType" /> is applied to this member; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-198">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-198">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-199">Il <xref:System.Reflection.MemberInfo.IsDefined%2A> metodo indica se uno o più istanze di `attributeType` viene applicato a questo membro.</span><span class="sxs-lookup"><span data-stu-id="64e56-199">The <xref:System.Reflection.MemberInfo.IsDefined%2A> method indicates whether one or more instance of `attributeType` is applied to this member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-200">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsFamily" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-200">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamily" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-201">
            <see langword="true" /> se l'attributo <see langword="Family" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-201">
              <see langword="true" /> if the field has the <see langword="Family" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-202">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-202">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-203">Il <xref:System.Reflection.FieldInfo.IsFamily%2A> proprietà ottiene un valore che indica se questo campo è `Family` visibilità a livello.</span><span class="sxs-lookup"><span data-stu-id="64e56-203">The <xref:System.Reflection.FieldInfo.IsFamily%2A> property gets a value indicating whether this field has `Family` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-204">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-204">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-205">
            <see langword="true" /> se l'attributo <see langword="FamANDAssem" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-205">
              <see langword="true" /> if the field has the <see langword="FamANDAssem" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-206">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-206">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-207">Il <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> proprietà ottiene un valore che indica se questo campo è `FamilyAndAssembly` visibilità a livello.</span><span class="sxs-lookup"><span data-stu-id="64e56-207">The <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> property gets a value indicating whether this field has `FamilyAndAssembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-208">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-208">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-209">
            <see langword="true" /> se l'attributo <see langword="FamORAssem" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-209">
              <see langword="true" /> if the field has the <see langword="FamORAssem" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-210">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-210">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-211">Il <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> proprietà ottiene un valore che indica se questo campo è `FamilyOrAssembly` visibilità a livello.</span><span class="sxs-lookup"><span data-stu-id="64e56-211">The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property gets a value indicating whether this field has `FamilyOrAssembly` level visibility.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitOnly">
      <MemberSignature Language="C#" Value="public bool IsInitOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitOnly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsInitOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-212">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsInitOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-212">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsInitOnly" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-213">
            <see langword="true" /> se l'attributo <see langword="InitOnly" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-213">
              <see langword="true" /> if the field has the <see langword="InitOnly" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-214">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-214">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-215">Il <xref:System.Reflection.FieldInfo.IsInitOnly%2A> proprietà ottiene un valore che indica se il campo può essere impostato solo nel corpo del costruttore.</span><span class="sxs-lookup"><span data-stu-id="64e56-215">The <xref:System.Reflection.FieldInfo.IsInitOnly%2A> property gets a value indicating whether the field can only be set in the body of the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public bool IsLiteral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsLiteral" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLiteral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLiteral { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-216">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsLiteral" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-216">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsLiteral" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-217">
            <see langword="true" /> se l'attributo <see langword="Literal" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-217">
              <see langword="true" /> if the field has the <see langword="Literal" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-218">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-218">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-219">Il <xref:System.Reflection.FieldInfo.IsLiteral%2A> proprietà ottiene un valore che indica se il valore viene scritto in fase di compilazione e non può essere modificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-219">The <xref:System.Reflection.FieldInfo.IsLiteral%2A> property gets a value indicating whether the value is written at compile time and cannot be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNotSerialized">
      <MemberSignature Language="C#" Value="public bool IsNotSerialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsNotSerialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotSerialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotSerialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-220">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsNotSerialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-220">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsNotSerialized" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-221">
            <see langword="true" /> se l'attributo <see langword="NotSerialized" /> del campo è impostato; in caso contrario <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-221">
              <see langword="true" /> if the field has the <see langword="NotSerialized" /> attribute set; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-222">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-222">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-223">Il <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> proprietà ottiene un valore che indica se questo campo è di `NotSerialized` attributo.</span><span class="sxs-lookup"><span data-stu-id="64e56-223">The <xref:System.Reflection.FieldInfo.IsNotSerialized%2A> property gets a value indicating whether this field has the `NotSerialized` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPinvokeImpl">
      <MemberSignature Language="C#" Value="public bool IsPinvokeImpl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinvokeImpl" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPinvokeImpl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPinvokeImpl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-224">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsPinvokeImpl" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-224">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPinvokeImpl" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-225">
            <see langword="true" /> se l'attributo <see langword="PinvokeImpl" /> è impostato in <see cref="T:System.Reflection.FieldAttributes" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-225">
              <see langword="true" /> if the <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-226">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-226">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-227">Il <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> proprietà ottiene un valore che indica se il corrispondente `PinvokeImpl` attributo è impostato <xref:System.Reflection.FieldAttributes>.</span><span class="sxs-lookup"><span data-stu-id="64e56-227">The <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property gets a value indicating whether the corresponding `PinvokeImpl` attribute is set in <xref:System.Reflection.FieldAttributes>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-228">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsPrivate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-228">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPrivate" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-229">
            <see langword="true" /> se il campo è privato; in caso contrario,<see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-229">
              <see langword="true" /> if the field is private; otherwise; <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-230">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-230">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-231">Il <xref:System.Reflection.FieldInfo.IsPrivate%2A> proprietà ottiene un valore che indica se il campo è privato.</span><span class="sxs-lookup"><span data-stu-id="64e56-231">The <xref:System.Reflection.FieldInfo.IsPrivate%2A> property gets a value indicating whether the field is private.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-232">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsPublic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-232">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsPublic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-233">
            <see langword="true" /> se il campo è pubblico; in caso contrario,<see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-233">
              <see langword="true" /> if this field is public; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-234">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-234">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-235">Il <xref:System.Reflection.FieldInfo.IsPublic%2A> proprietà ottiene un valore che indica se il campo è pubblico.</span><span class="sxs-lookup"><span data-stu-id="64e56-235">The <xref:System.Reflection.FieldInfo.IsPublic%2A> property gets a value indicating whether the field is public.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-236">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsSpecialName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-236">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsSpecialName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-237">
            <see langword="true" /> se l'attributo <see langword="SpecialName" /> è impostato in <see cref="T:System.Reflection.FieldAttributes" />; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-237">
              <see langword="true" /> if the <see langword="SpecialName" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-238">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-238">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-239">Il <xref:System.Reflection.FieldInfo.IsSpecialName%2A> proprietà ottiene un valore che indica se il corrispondente `SpecialName` attributo è impostato sul <xref:System.Reflection.FieldAttributes> enumeratore.</span><span class="sxs-lookup"><span data-stu-id="64e56-239">The <xref:System.Reflection.FieldInfo.IsSpecialName%2A> property gets a value indicating whether the corresponding `SpecialName` attribute is set in the <xref:System.Reflection.FieldAttributes> enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-240">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.IsStatic" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-240">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.IsStatic" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-241">
            <see langword="true" /> se il campo è statico; in caso contrario,<see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-241">
              <see langword="true" /> if this field is static; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-242">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-242">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-243">Il <xref:System.Reflection.FieldInfo.IsStatic%2A> proprietà ottiene un valore che indica se il campo è statico.</span><span class="sxs-lookup"><span data-stu-id="64e56-243">The <xref:System.Reflection.FieldInfo.IsStatic%2A> property gets a value indicating whether the field is static.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-244">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.FieldInfo.MemberType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-244">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.FieldInfo.MemberType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-245">Valore di <see cref="T:System.Reflection.MemberTypes" /> che indica che questo membro è un campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-245">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-246">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-246">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-247">Il <xref:System.Reflection.FieldInfo.MemberType%2A> proprietà ottiene un <xref:System.Reflection.MemberTypes> valore che indica che questo membro è un campo.</span><span class="sxs-lookup"><span data-stu-id="64e56-247">The <xref:System.Reflection.FieldInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-248">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-248">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-249">
            <see cref="T:System.String" /> che contiene il nome di questo membro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-249">A <see cref="T:System.String" /> containing the name of this member.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-250">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-250">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-251">Il <xref:System.Reflection.MemberInfo.Name%2A> proprietà ottiene il nome del membro corrente.</span><span class="sxs-lookup"><span data-stu-id="64e56-251">The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._FieldInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-252">Fornisce oggetti COM con accesso indipendente dalla versione alla proprietà <see cref="P:System.Reflection.MemberInfo.ReflectedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-252">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.MemberInfo.ReflectedType" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64e56-253">Oggetto <see cref="T:System.Type" /> tramite il quale è stato ottenuto questo oggetto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-253">The <see cref="T:System.Type" /> object through which this object was obtained.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-254">Questa proprietà consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-254">This property is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-255">Il <xref:System.Reflection.MemberInfo.ReflectedType%2A> proprietà ottiene l'oggetto classe usato per ottenere questa istanza di <xref:System.Reflection.MemberInfo>.</span><span class="sxs-lookup"><span data-stu-id="64e56-255">The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this instance of <xref:System.Reflection.MemberInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="64e56-256">Fornisce oggetti COM con accesso indipendente dalla versione ai metodi <see cref="Overload:System.Reflection.FieldInfo.SetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-256">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.FieldInfo.SetValue" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-257">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-257">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-258">Il <xref:System.Reflection.FieldInfo.SetValue%2A> metodi impostano il valore del campo per l'oggetto specificato sul valore specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-258">The <xref:System.Reflection.FieldInfo.SetValue%2A> methods set the value of the field for the given object to the given value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="64e56-259">Oggetto di cui verrà impostato il valore del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-259">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64e56-260">Valore da assegnare al campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-260">The value to assign to the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-261">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-261">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-262">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-262">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-263">Il <xref:System.Reflection.FieldInfo.SetValue%2A> metodo imposta il valore del campo supportato dall'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-263">The <xref:System.Reflection.FieldInfo.SetValue%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="64e56-264">Oggetto di cui verrà impostato il valore del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-264">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64e56-265">Valore da assegnare al campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-265">The value to assign to the field.</span>
          </span>
        </param>
        <param name="invokeAttr">
          <span data-ttu-id="64e56-266">Campo di <see cref="T:System.Reflection.Binder" /> che specifica il tipo di associazione desiderata, ad esempio <see langword="Binder.CreateInstance" /> o <see langword="Binder.ExactBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-266">A field of <see cref="T:System.Reflection.Binder" /> that specifies the type of binding that is desired (for example, <see langword="Binder.CreateInstance" /> or <see langword="Binder.ExactBinding" />).</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="64e56-267">Insieme di proprietà che attiva l'associazione, l'assegnazione forzata dei tipi di argomento e la chiamata dei membri tramite la funzionalità di reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-267">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</span>
          </span>
          <span data-ttu-id="64e56-268">Se <c>binder</c> è <see langword="null" />, viene usato <see langword="Binder.DefaultBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-268">If <c>binder</c> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="64e56-269">Preferenze software di determinate impostazioni cultura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-269">The software preferences of a particular culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-270">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-270">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-271">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-271">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-272">Il <xref:System.Reflection.PropertyInfo.SetValue%2A> metodo imposta il valore del campo supportato dall'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-272">The <xref:System.Reflection.PropertyInfo.SetValue%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueDirect">
      <MemberSignature Language="C#" Value="public void SetValueDirect (TypedReference obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueDirect(valuetype System.TypedReference obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueDirect (obj As TypedReference, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueDirect(TypedReference obj, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="64e56-273">Oggetto di cui verrà impostato il valore del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-273">The object whose field value will be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="64e56-274">Valore da assegnare al campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-274">The value to assign to the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="64e56-275">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-275">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-276">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="64e56-277">Il <xref:System.Reflection.FieldInfo.SetValueDirect%2A> metodo imposta il valore del campo supportato dall'oggetto specificato.</span><span class="sxs-lookup"><span data-stu-id="64e56-277">The <xref:System.Reflection.FieldInfo.SetValueDirect%2A> method sets the value of the field supported by the given object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._FieldInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64e56-278">Fornisce oggetti COM con accesso indipendente dalla versione al metodo <see cref="M:System.Object.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-278">Provides COM objects with version-independent access to the <see cref="M:System.Object.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64e56-279">Stringa che rappresenta l'oggetto <see cref="T:System.Object" /> corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64e56-279">A string that represents the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64e56-280">Questo metodo consente l'accesso alle classi gestite da codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="64e56-280">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>