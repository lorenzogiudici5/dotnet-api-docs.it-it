<Type Name="_Assembly" FullName="System.Runtime.InteropServices._Assembly">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc126439cf62ae9af527f6e9652fe82599e35d8f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36537236" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface _Assembly" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Assembly" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Assembly" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Assembly" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Assembly" />
  <TypeSignature Language="F#" Value="type _Assembly = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2F1A-384A-BC52-FDE93C215C5B")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Assembly))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9098f-101">Exposes the public members of the <see cref="T:System.Reflection.Assembly" /> class to unmanaged code.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9098f-101">Exposes the public members of the <see cref="T:System.Reflection.Assembly" /> class to unmanaged code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-102">Questa interfaccia consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamata da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-103">Questa interfaccia mantiene l'ordine vtable del <xref:System.Reflection.Assembly?displayProperty=nameWithType> classe membri accessibili dagli oggetti COM non gestiti.</span><span class="sxs-lookup"><span data-stu-id="9098f-103">This interface preserves the vtable order of the <xref:System.Reflection.Assembly?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.Assembly" />
  </Docs>
  <Members>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.CodeBase" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.CodeBase" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-105">Percorso dell'assembly come originariamente specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-105">The location of the assembly as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-106">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-106">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-107">Il <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> propriet√† ottiene il percorso dell'assembly come originariamente specificato, ad esempio, in un <xref:System.Reflection.AssemblyName> oggetto.</span><span class="sxs-lookup"><span data-stu-id="9098f-107">The <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property gets the location of the assembly as specified originally, for example, in an <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.CodeBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-108">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-108">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-109">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-109">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-110">Il <xref:System.Reflection.Assembly.CreateInstance%2A> metodi individuare un tipo da questo assembly e crearne un'istanza usando l'attivatore di sistema.</span><span class="sxs-lookup"><span data-stu-id="9098f-110">The <xref:System.Reflection.Assembly.CreateInstance%2A> methods locate a type from this assembly and create an instance of it using the system activator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.CreateInstance" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj" Usage="_Assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9098f-111">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-111">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-112">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-112">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-113">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-113">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-114">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-114">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-115">Il <xref:System.Reflection.Assembly.CreateInstance%2A> metodo individua il tipo specificato da questo assembly e crea un'istanza usando l'attivatore di sistema, tramite la ricerca tra maiuscole e minuscole.</span><span class="sxs-lookup"><span data-stu-id="9098f-115">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9098f-116">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-116">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9098f-117">
            <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-117">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-118">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-118">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-119">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-119">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-120">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-120">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-121">Il <xref:System.Reflection.Assembly.CreateInstance%2A> metodo individua il tipo specificato da questo assembly e crea un'istanza usando l'attivatore di sistema, ricerca con distinzione facoltativa.</span><span class="sxs-lookup"><span data-stu-id="9098f-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="9098f-122">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-122">The <see cref="P:System.Type.FullName" /> of the type to locate.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9098f-123">
            <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-123">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="bindingAttr">
          <span data-ttu-id="9098f-124">A bitmask that affects how the search is conducted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-124">A bitmask that affects how the search is conducted.</span>
          </span>
          <span data-ttu-id="9098f-125">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-125">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span>
          </span>
        </param>
        <param name="binder">
          <span data-ttu-id="9098f-126">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-126">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span>
          </span>
          <span data-ttu-id="9098f-127">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-127">If <c>binder</c> is <see langword="null" />, the default binder is used.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9098f-128">An array of type <see langword="Object" /> containing the arguments to be passed to the constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-128">An array of type <see langword="Object" /> containing the arguments to be passed to the constructor.</span>
          </span>
          <span data-ttu-id="9098f-129">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-129">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span>
          </span>
          <span data-ttu-id="9098f-130">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-130">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9098f-131">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-131">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span>
          </span>
          <span data-ttu-id="9098f-132">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-132">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span>
          </span>
          <span data-ttu-id="9098f-133">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-133">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span>
          </span>
        </param>
        <param name="activationAttributes">
          <span data-ttu-id="9098f-134">An array of type <see langword="Object" /> containing one or more activation attributes that can participate in the activation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-134">An array of type <see langword="Object" /> containing one or more activation attributes that can participate in the activation.</span>
          </span>
          <span data-ttu-id="9098f-135">An example of an activation attribute is:  URLAttribute(http://hostname/appname/objectURI)</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-135">An example of an activation attribute is:  URLAttribute(http://hostname/appname/objectURI)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-136">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-137">An instance of <see langword="Object" /> representing the type and matching the specified criteria, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-137">An instance of <see langword="Object" /> representing the type and matching the specified criteria, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-138">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-138">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-139">Il <xref:System.Reflection.Assembly.CreateInstance%2A> metodo individua il tipo specificato da questo assembly e crea un'istanza usando l'attivatore di sistema, ricerca con distinzione facoltativa tra maiuscole e minuscole di impostazioni cultura specificate, argomenti e gli attributi di associazione e attivazione.</span><span class="sxs-lookup"><span data-stu-id="9098f-139">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-140">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EntryPoint" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-140">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EntryPoint" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-141">Oggetto <see cref="T:System.Reflection.MethodInfo" /> oggetto che rappresenta il punto di ingresso di questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-141">A <see cref="T:System.Reflection.MethodInfo" /> object that represents the entry point of this assembly.</span>
          </span>
          <span data-ttu-id="9098f-142">Se non viene trovato alcun punto di ingresso, ad esempio se l'assembly √® un file DLL, viene restituito <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-142">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-143">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-143">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-144">Il <xref:System.Reflection.Assembly.EntryPoint%2A> propriet√† ottiene il punto di ingresso di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-144">The <xref:System.Reflection.Assembly.EntryPoint%2A> property gets the entry point of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EntryPoint" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Assembly.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="9098f-145">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-145">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-146">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-146">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-147">
            <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-147">
              <see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-148">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-148">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-149">Il <xref:System.Object.Equals%2A> metodo determina se l'oggetto specificato <xref:System.Object> √® uguale all'oggetto corrente <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9098f-149">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-150">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-150">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-151">Un URI Uniform Resource Identifier () con caratteri di escape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-151">A Uniform Resource Identifier (URI) with escape characters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-152">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-152">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-153">Il <xref:System.Reflection.Assembly.EscapedCodeBase%2A> propriet√† ottiene l'URI, inclusi i caratteri di escape, che rappresenta la codebase.</span><span class="sxs-lookup"><span data-stu-id="9098f-153">The <xref:System.Reflection.Assembly.EscapedCodeBase%2A> property gets the URI, including escape characters, that represents the codebase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EscapedCodeBase" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-154">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Evidence" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-154">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Evidence" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-155">Un <see cref="T:System.Security.Policy.Evidence" /> per questo assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-155">An <see cref="T:System.Security.Policy.Evidence" /> object for this assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-156">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-156">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-157">Il <xref:System.Reflection.Assembly.Evidence%2A> propriet√† ottiene l'evidenza per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-157">The <xref:System.Reflection.Assembly.Evidence%2A> property gets the evidence for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Runtime.InteropServices._Assembly.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-158">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-158">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-159">Nome visualizzato dell'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-159">The display name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-160">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-160">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-161">Il <xref:System.Reflection.Assembly.FullName%2A> propriet√† ottiene il nome visualizzato dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-161">The <xref:System.Reflection.Assembly.FullName%2A> property gets the display name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.FullName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-162">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-162">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-163">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-163">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-164">Il <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodi ottengono gli attributi personalizzati per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-164">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> methods get the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetCustomAttributes" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="9098f-165">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-165">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-166">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-166">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-167">An array of type <see langword="Object" /> containing the custom attributes for this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-167">An array of type <see langword="Object" /> containing the custom attributes for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-168">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-168">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-169">Il <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodo ottiene tutti gli attributi personalizzati per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-169">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9098f-170">The <see cref="T:System.Type" /> for which the custom attributes are to be returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-170">The <see cref="T:System.Type" /> for which the custom attributes are to be returned.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9098f-171">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-171">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-172">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-172">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-173">An array of type <see cref="T:System.Object" /> containing the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-173">An array of type <see cref="T:System.Object" /> containing the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-174">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-174">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-175">Il <xref:System.Reflection.Assembly.GetCustomAttributes%2A> metodo ottiene tutti gli attributi personalizzati per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-175">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]" Usage="_Assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-176">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-176">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-177">An array of <see cref="T:System.Type" /> objects that represent the types defined in this assembly that are visible outside the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-177">An array of <see cref="T:System.Type" /> objects that represent the types defined in this assembly that are visible outside the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-178">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-178">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-179">Il <xref:System.Reflection.Assembly.GetExportedTypes%2A> propriet√† ottiene i tipi esportati definiti in questo assembly visibili all'esterno dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-179">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> property gets the exported types defined in this assembly that are visible outside the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetExportedTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream" Usage="_Assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-180">The name of the specified file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-180">The name of the specified file.</span>
          </span>
          <span data-ttu-id="9098f-181">Do not include the path to the file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-181">Do not include the path to the file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-182">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-183">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" /> if the file is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-183">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" /> if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-184">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-184">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-185">Il <xref:System.Reflection.Assembly.GetFile%2A> metodo ottiene un <xref:System.IO.FileStream> per il file specificato nella tabella dei file del manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-185">The <xref:System.Reflection.Assembly.GetFile%2A> method gets a <xref:System.IO.FileStream> for the specified file in the file table of the manifest of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFile(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetFiles" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-186">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetFiles" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-187">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-187">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-188">Il <xref:System.Reflection.Assembly.GetFiles%2A> metodi ottengono i file nella tabella dei file di un manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-188">The <xref:System.Reflection.Assembly.GetFiles%2A> methods get the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-189">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-190">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-190">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-191">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-191">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-192">Il <xref:System.Reflection.Assembly.GetFiles%2A> metodo ottiene i file della tabella file di un manifesto dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-192">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9098f-193">
            <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-193">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-194">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-195">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-195">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-196">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-196">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-197">Il <xref:System.Reflection.Assembly.GetFiles%2A> metodo ottiene i file della tabella file di un manifesto dell'assembly, specificando se includere i moduli delle risorse.</span><span class="sxs-lookup"><span data-stu-id="9098f-197">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-198">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-198">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-199">A hash code for the current <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-199">A hash code for the current <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-200">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-200">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-201">Il <xref:System.Object.GetHashCode%2A> metodo serve come funzione hash per un particolare tipo.</span><span class="sxs-lookup"><span data-stu-id="9098f-201">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="9098f-202"><xref:System.Object.GetHashCode%2A> pu√≤ essere usato in algoritmi di hash e strutture di dati, ad esempio una tabella hash.</span><span class="sxs-lookup"><span data-stu-id="9098f-202"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-203">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-203">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-204">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-204">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-205">Il <xref:System.Reflection.Assembly.GetLoadedModules%2A> metodi ottengono tutti i moduli caricati che fanno parte di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-205">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> methods get all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-206">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-206">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-207">An array of modules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-207">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-208">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-208">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-209">Il <xref:System.Reflection.Assembly.GetLoadedModules%2A> metodo ottiene tutti i moduli caricati che fanno parte di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-209">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9098f-210">
            <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-210">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-211">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-211">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-212">An array of modules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-212">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-213">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-213">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-214">Il <xref:System.Reflection.Assembly.GetLoadedModules%2A> metodo ottiene tutti i moduli caricati che fanno parte di questo assembly, specificando se includere i moduli delle risorse.</span><span class="sxs-lookup"><span data-stu-id="9098f-214">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="_Assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="9098f-215">The case-sensitive name of the resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-215">The case-sensitive name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-216">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-216">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-217">A <see cref="T:System.Reflection.ManifestResourceInfo" /> object populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-217">A <see cref="T:System.Reflection.ManifestResourceInfo" /> object populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-218">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-218">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-219">Il <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> metodo restituisce informazioni sul modo in cui la risorsa specificata √® stata resa persistente.</span><span class="sxs-lookup"><span data-stu-id="9098f-219">The <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method returns information about how the given resource has been persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]" Usage="_Assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-220">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-221">An array of type <see langword="String" /> containing the names of all the resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-221">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-222">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-222">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-223">Il <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> metodo restituisce i nomi di tutte le risorse di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-223">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method returns the names of all the resources in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-224">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-224">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-225">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-225">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-226">Il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> metodi caricare la risorsa del manifesto specificata da questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-226">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> methods load the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-227">The case-sensitive name of the manifest resource being requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-227">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-228">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-228">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-229">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-229">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-230">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-230">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-231">Il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> metodo carica la risorsa del manifesto specificata da questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-231">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9098f-232">The type whose namespace is used to scope the manifest resource name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-232">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="9098f-233">The case-sensitive name of the manifest resource being requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-233">The case-sensitive name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-234">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-234">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-235">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-235">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-236">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-236">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-237">Il <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> metodo carica la risorsa del manifesto specificata, con l'ambito dallo spazio dei nomi del tipo specificato, in questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-237">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module" Usage="_Assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-238">The name of the module being requested.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-238">The name of the module being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-239">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-239">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-240">The module being requested, or <see langword="null" /> if the module is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-240">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-241">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-241">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-242">Il <xref:System.Reflection.Assembly.GetModule%2A> metodo ottiene il modulo specificato in questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-242">The <xref:System.Reflection.Assembly.GetModule%2A> method gets the specified module in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModule(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-243">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetModules" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-243">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetModules" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-244">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-244">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-245">Il <xref:System.Reflection.Assembly.GetModules%2A> metodi ottengono tutti i moduli che fanno parte di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-245">The <xref:System.Reflection.Assembly.GetModules%2A> methods get all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-246">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-247">An array of modules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-247">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-248">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-248">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-249">Il <xref:System.Reflection.Assembly.GetModules%2A> metodo ottiene tutti i moduli che fanno parte di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-249">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules" />
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="9098f-250">
            <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-250">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-251">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-251">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-252">An array of modules.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-252">An array of modules.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-253">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-253">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-254">Il <xref:System.Reflection.Assembly.GetModules%2A> metodo ottiene tutti i moduli che fanno parte di questo assembly, specificando se includere i moduli delle risorse.</span><span class="sxs-lookup"><span data-stu-id="9098f-254">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-255">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetName" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-255">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetName" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-256">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-256">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-257">Il <xref:System.Reflection.Assembly.GetName%2A> metodi ottengono un <xref:System.Reflection.AssemblyName> per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-257">The <xref:System.Reflection.Assembly.GetName%2A> methods get an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-258">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-258">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-259">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-259">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-260">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-260">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-261">Il <xref:System.Reflection.Assembly.GetName%2A> metodo ottiene un <xref:System.Reflection.AssemblyName> per questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-261">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="9098f-262">
            <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-262">
              <see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-263">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-263">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-264">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-264">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-265">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-265">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-266">Il <xref:System.Reflection.Assembly.GetName%2A> metodo ottiene un <xref:System.Reflection.AssemblyName> per questo assembly, impostando la codebase come specificato dal `copiedName` parametro.</span><span class="sxs-lookup"><span data-stu-id="9098f-266">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly, setting the codebase as specified by the `copiedName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="9098f-267">The object to be populated with serialization information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-267">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="9098f-268">The destination context of the serialization.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-268">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-269">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-269">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-270">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-270">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-271">Il <xref:System.Reflection.Assembly.GetObjectData%2A> metodo ottiene le informazioni di serializzazione con tutti i dati necessari per creare una nuova istanza di questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-271">The <xref:System.Reflection.Assembly.GetObjectData%2A> method gets serialization information with all of the data needed to reinstantiate this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9098f-272">richiede attendibilit√† totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-272">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9098f-273">L'istanza corrente √® un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-273">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="_Assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-274">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-274">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-275">An array of type <see cref="T:System.Reflection.AssemblyName" /> containing all the assemblies referenced by this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-275">An array of type <see cref="T:System.Reflection.AssemblyName" /> containing all the assemblies referenced by this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-276">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-276">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-277">Il <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> metodo ottiene la <xref:System.Reflection.AssemblyName> gli oggetti per tutti gli assembly a cui fanno riferimento questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-277">The <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method gets the <xref:System.Reflection.AssemblyName> objects for all the assemblies referenced by this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-278">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-279">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-280">Il <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> metodi ottengono l'assembly satellite.</span><span class="sxs-lookup"><span data-stu-id="9098f-280">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> methods get the satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9098f-281">The specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-281">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-282">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-282">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-283">The specified satellite assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-283">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-284">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-284">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-285">Il <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> metodo ottiene l'assembly satellite per le impostazioni cultura specificate.</span><span class="sxs-lookup"><span data-stu-id="9098f-285">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9098f-286">The specified culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-286">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="9098f-287">The version of the satellite assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-287">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-288">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-288">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-289">The specified satellite assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-289">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-290">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-290">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-291">Il <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> metodo ottiene la versione specificata dell'assembly satellite per le impostazioni cultura specificate.</span><span class="sxs-lookup"><span data-stu-id="9098f-291">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the specified version of the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-292">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetType" /> methods.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-292">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetType" /> methods.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-293">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-293">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-294">Il <xref:System.Reflection.Assembly.GetType%2A> metodi ottengono il <xref:System.Type> oggetto che rappresenta il tipo specificato.</span><span class="sxs-lookup"><span data-stu-id="9098f-294">The <xref:System.Reflection.Assembly.GetType%2A> methods get the <xref:System.Type> object that represents the specified type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Assembly.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-295">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-295">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-296">A <see cref="T:System.Type" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-296">A <see cref="T:System.Type" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-297">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-298">Il <xref:System.Object.GetType%2A> metodo ottiene il tipo dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="9098f-298">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetType" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="_Assembly.GetType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-299">The full name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-299">The full name of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-300">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-300">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-301">A <see cref="T:System.Type" /> object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-301">A <see cref="T:System.Type" /> object that represents the specified class, or <see langword="null" /> if the class is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-302">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-302">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-303">Il <xref:System.Reflection.Assembly.GetType%2A> metodo ottiene la <xref:System.Type> oggetto con il nome specificato nell'istanza dell'assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-303">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-304">The full name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-304">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="9098f-305">
            <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-305">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-306">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-306">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-307">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-307">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-308">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-308">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-309">Il <xref:System.Reflection.Assembly.GetType%2A> metodo ottiene la <xref:System.Type> oggetto con il nome specificato nell'istanza dell'assembly e facoltativamente genera un'eccezione se il tipo non viene trovato.</span><span class="sxs-lookup"><span data-stu-id="9098f-309">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9098f-310">The full name of the type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-310">The full name of the type.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="9098f-311">
            <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-311">
              <see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9098f-312">
            <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-312">
              <see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-313">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-313">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-314">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-314">A <see cref="T:System.Type" /> object that represents the specified class.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-315">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-316">Il <xref:System.Reflection.Assembly.GetType%2A> metodo ottiene la <xref:System.Type> oggetto con il nome specificato nell'istanza dell'assembly, con le opzioni di ignorare la distinzione tra maiuscole e di generare un'eccezione se il tipo non viene trovato.</span><span class="sxs-lookup"><span data-stu-id="9098f-316">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]" Usage="_Assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-317">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetTypes" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-317">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetTypes" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-318">An array of type <see cref="T:System.Type" /> containing objects for all the types defined in this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-318">An array of type <see cref="T:System.Type" /> containing objects for all the types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-319">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-319">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-320">Il <xref:System.Reflection.Assembly.GetTypes%2A> metodo ottiene i tipi definiti in questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-320">The <xref:System.Reflection.Assembly.GetTypes%2A> method gets the types defined in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-321">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-321">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-322">
            <see langword="true" /> se l'assembly √® stato caricato dalla Global Assembly Cache; in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-322">
              <see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-323">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-323">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-324">Il <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> propriet√† ottiene un valore che indica se l'assembly √® stato caricato dalla global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="9098f-324">The <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> property gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_Assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="9098f-325">The <see cref="T:System.Type" /> of the custom attribute to be checked for this assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-325">The <see cref="T:System.Type" /> of the custom attribute to be checked for this assembly.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="9098f-326">This argument is ignored for objects of this type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-326">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-327">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-327">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-328">
            <see langword="true" /> if a custom attribute identified by the specified <see cref="T:System.Type" /> is defined; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-328">
              <see langword="true" /> if a custom attribute identified by the specified <see cref="T:System.Type" /> is defined; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-329">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-329">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-330">Il <xref:System.Reflection.Assembly.IsDefined%2A> metodo indica se un attributo personalizzato identificato dall'oggetto <xref:System.Type> √® definito.</span><span class="sxs-lookup"><span data-stu-id="9098f-330">The <xref:System.Reflection.Assembly.IsDefined%2A> method indicates whether a custom attribute identified by the specified <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-331">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.LoadModule" /> members.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-331">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.LoadModule" /> members.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-332">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-332">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-333">Il <xref:System.Reflection.Assembly.LoadModule%2A> membri caricano il modulo interno a questo assembly.</span><span class="sxs-lookup"><span data-stu-id="9098f-333">The <xref:System.Reflection.Assembly.LoadModule%2A> members load the module internal to this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.LoadModule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="9098f-334">Name of the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-334">Name of the module.</span>
          </span>
          <span data-ttu-id="9098f-335">Must correspond to a file name in this assembly's manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-335">Must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="9098f-336">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-336">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-337">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-337">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-338">The loaded Module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-338">The loaded Module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-339">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-339">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-340">Il <xref:System.Reflection.Assembly.LoadModule%2A> metodo carica il modulo, interno all'assembly, con un'immagine in COFF Common Object File Format contenente un modulo generato o un file di risorse.</span><span class="sxs-lookup"><span data-stu-id="9098f-340">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName">
          <span data-ttu-id="9098f-341">Name of the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-341">Name of the module.</span>
          </span>
          <span data-ttu-id="9098f-342">Must correspond to a file name in this assembly's manifest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-342">Must correspond to a file name in this assembly's manifest.</span>
          </span>
        </param>
        <param name="rawModule">
          <span data-ttu-id="9098f-343">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-343">A byte array that is a COFF-based image containing an emitted module, or a resource.</span>
          </span>
        </param>
        <param name="rawSymbolStore">
          <span data-ttu-id="9098f-344">A byte array containing the raw bytes representing the symbols for the module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-344">A byte array containing the raw bytes representing the symbols for the module.</span>
          </span>
          <span data-ttu-id="9098f-345">Must be <see langword="null" /> if this is a resource file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-345">Must be <see langword="null" /> if this is a resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9098f-346">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-346">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-347">The loaded module.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-347">The loaded module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-348">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-348">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-349">Il <xref:System.Reflection.Assembly.LoadModule%2A> metodo carica il modulo, interno all'assembly, con un'immagine in COFF Common Object File Format contenente un modulo generato o un file di risorse.</span><span class="sxs-lookup"><span data-stu-id="9098f-349">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="9098f-350">Vengono caricati anche i byte non elaborati che rappresentano i simboli per il modulo.</span><span class="sxs-lookup"><span data-stu-id="9098f-350">The raw bytes representing the symbols for the module are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Runtime.InteropServices._Assembly.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-351">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Location" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-351">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Location" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9098f-352">Percorso del file caricato che contiene il manifesto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-352">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="9098f-353">Se √® stata eseguita una copia shadow del file caricato, il percorso √® quello del file dopo l'esecuzione della copia shadow.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-353">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span>
          </span>
          <span data-ttu-id="9098f-354">Se l'assembly viene caricato da una matrice di byte, come quando si usa l'overload del metodo <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />, il valore restituito √® una stringa vuota ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-354">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-355">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-355">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-356">Il <xref:System.Reflection.Assembly.Location%2A> propriet√† ottiene il percorso o il percorso di Universal Naming Convention (UNC) del file caricato che contiene il manifesto.</span><span class="sxs-lookup"><span data-stu-id="9098f-356">The <xref:System.Reflection.Assembly.Location%2A> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Location" />
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.InteropServices._Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9098f-357">Provides COM objects with version-independent access to the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-357">Provides COM objects with version-independent access to the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-358">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-358">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-359">Il <xref:System.Reflection.Assembly.ModuleResolve> evento si verifica quando il caricatore di classe di common language runtime non √® possibile risolvere un riferimento a un modulo interno di un assembly in modo normale.</span><span class="sxs-lookup"><span data-stu-id="9098f-359">The <xref:System.Reflection.Assembly.ModuleResolve> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9098f-360">richiede attendibilit√† totale per il chiamante immediato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-360">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9098f-361">L'istanza corrente √® un proxy trasparente per un  in un altro dominio applicazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-361">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="E:System.Reflection.Assembly.ModuleResolve" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Assembly.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9098f-362">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.ToString" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-362">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.ToString" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9098f-363">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9098f-363">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9098f-364">Questo metodo consente l'accesso a classi gestite dal codice non gestito e non deve essere chiamato da codice gestito.</span><span class="sxs-lookup"><span data-stu-id="9098f-364">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="9098f-365">Il <xref:System.Reflection.Assembly.ToString%2A> metodo restituisce il nome completo dell'assembly, noto anche come il nome visualizzato.</span><span class="sxs-lookup"><span data-stu-id="9098f-365">The <xref:System.Reflection.Assembly.ToString%2A> method returns the full name of the assembly, also known as the display name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>