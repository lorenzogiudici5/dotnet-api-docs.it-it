<Type Name="HandleRef" FullName="System.Runtime.InteropServices.HandleRef">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6025563932e240869a1ba4e28b71c466b6e7e86" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30478855" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HandleRef" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HandleRef extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.HandleRef" />
  <TypeSignature Language="VB.NET" Value="Public Structure HandleRef" />
  <TypeSignature Language="C++ CLI" Value="public value class HandleRef" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="017f6-101">Esegue il wrapping di un oggetto gestito che contiene un handle a una risorsa passata a un codice non gestito attraverso il platform invoke.</span>
      <span class="sxs-lookup">
        <span data-stu-id="017f6-101">Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="017f6-102">A partire da .NET Framework 2.0, la funzionalità del <xref:System.Runtime.InteropServices.HandleRef> classe è stata sostituita dal <xref:System.Runtime.InteropServices.SafeHandle> classe e le relative classi derivate, come e dalla <xref:System.Runtime.InteropServices.CriticalHandle> classe.</span><span class="sxs-lookup"><span data-stu-id="017f6-102">Starting with the .NET Framework 2.0, the functionality of the <xref:System.Runtime.InteropServices.HandleRef> class has been replaced by the <xref:System.Runtime.InteropServices.SafeHandle> class and its derived classes, as well as by the <xref:System.Runtime.InteropServices.CriticalHandle> class.</span></span>  
  
 <span data-ttu-id="017f6-103">Se si usa platform invoke per chiamare un oggetto gestito, l'oggetto non viene fatto riferimento in un' posizione dopo la chiamata di PInvoke, è possibile che il garbage collector finalizzare l'oggetto gestito.</span><span class="sxs-lookup"><span data-stu-id="017f6-103">If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</span></span> <span data-ttu-id="017f6-104">Questa operazione rilascia la risorsa e invalidato l'handle, causando la piattaforma di richiamare una chiamata non riuscirà.</span><span class="sxs-lookup"><span data-stu-id="017f6-104">This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</span></span> <span data-ttu-id="017f6-105">Il wrapping di un handle con <xref:System.Runtime.InteropServices.HandleRef> completa assicura che l'oggetto gestito non è sottoposto a garbage collection fino a quando la chiamata di PInvoke.</span><span class="sxs-lookup"><span data-stu-id="017f6-105">Wrapping a handle with <xref:System.Runtime.InteropServices.HandleRef> guarantees that the managed object is not garbage collected until the platform invoke call completes.</span></span> <span data-ttu-id="017f6-106">Per una descrizione di platform invoke servizi, vedere [utilizzo di funzioni DLL non gestite](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="017f6-106">For a description of platform invoke services, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 <span data-ttu-id="017f6-107">Il <xref:System.Runtime.InteropServices.HandleRef> tipo valore, ad esempio <xref:System.Runtime.InteropServices.GCHandle>, è un tipo speciale riconosciuto dal marshalling di interoperabilità.</span><span class="sxs-lookup"><span data-stu-id="017f6-107">The <xref:System.Runtime.InteropServices.HandleRef> value type, like <xref:System.Runtime.InteropServices.GCHandle>, is a special type recognized by the interop marshaler.</span></span> <span data-ttu-id="017f6-108">Una normale non bloccato <xref:System.Runtime.InteropServices.GCHandle> impedisce inoltre l'esecuzione inopportuna della procedura di garbage collection, ancora <xref:System.Runtime.InteropServices.HandleRef> offre prestazioni migliori.</span><span class="sxs-lookup"><span data-stu-id="017f6-108">A normal, nonpinned <xref:System.Runtime.InteropServices.GCHandle> also prevents untimely garbage collection, yet <xref:System.Runtime.InteropServices.HandleRef> provides better performance.</span></span> <span data-ttu-id="017f6-109">Benché l'uso di <xref:System.Runtime.InteropServices.HandleRef> per mantenere attivo un oggetto per la durata di una piattaforma di chiamata di PInvoke è preferibile, è inoltre possibile utilizzare il <xref:System.GC.KeepAlive%2A?displayProperty=nameWithType> metodo allo stesso scopo.</span><span class="sxs-lookup"><span data-stu-id="017f6-109">Although using <xref:System.Runtime.InteropServices.HandleRef> to keep an object alive for the duration of a platform invoke call is preferred, you can also use the <xref:System.GC.KeepAlive%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 <span data-ttu-id="017f6-110">Il <xref:System.Runtime.InteropServices.HandleRef> costruttore accetta due parametri: un <xref:System.Object> che rappresenta il wrapper e un <xref:System.IntPtr> che rappresenta l'handle non gestito.</span><span class="sxs-lookup"><span data-stu-id="017f6-110">The <xref:System.Runtime.InteropServices.HandleRef> constructor takes two parameters: an <xref:System.Object> representing the wrapper, and an <xref:System.IntPtr> representing the unmanaged handle.</span></span> <span data-ttu-id="017f6-111">Il marshalling di interoperabilità passa solo l'handle a codice non gestito e garantisce che il wrapper (passato come primo parametro al costruttore del `HandleRef`) rimanga attivo per la durata della chiamata.</span><span class="sxs-lookup"><span data-stu-id="017f6-111">The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the `HandleRef`) remains alive for the duration of the call.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleRef (object wrapper, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object wrapper, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrapper As Object, handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleRef(System::Object ^ wrapper, IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrapper" Type="System.Object" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="wrapper">
          <span data-ttu-id="017f6-112">Oggetto gestito che non deve essere finalizzato fino alla restituzione di un risultato da parte di platform invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-112">A managed object that should not be finalized until the platform invoke call returns.</span>
          </span>
        </param>
        <param name="handle">
          <span data-ttu-id="017f6-113">Oggetto <see cref="T:System.IntPtr" /> che indica un handle a una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-113">An <see cref="T:System.IntPtr" /> that indicates a handle to a resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="017f6-114">Inizializza una nuova istanza della classe <see cref="T:System.Runtime.InteropServices.HandleRef" /> con l'oggetto di cui eseguire il wrapping e un handle alla risorsa utilizzata dal codice non gestito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-114">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleRef" /> class with the object to wrap and a handle to the resource used by unmanaged code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="017f6-115">Ottiene l'handle a una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-115">Gets the handle to a resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="017f6-116">Handle a una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-116">The handle to a resource.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="017f6-117">Oggetto che necessita di un handle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-117">The object that needs a handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="017f6-118">Restituisce l'handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-118">Returns the handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="017f6-119">Handle a una risorsa dell'oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> specificato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-119">The handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="017f6-120">Il metodo equivalente per l'operatore è <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="017f6-120">The equivalent method for this operator is <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ToIntPtr(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIntPtr (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ToIntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="017f6-121">Oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" /> da recuperare in una rappresentazione interna di valori interi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-121">A <see cref="T:System.Runtime.InteropServices.HandleRef" /> object to retrieve an internal integer representation from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="017f6-122">Restituisce la rappresentazione interna come valori interi di un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-122">Returns the internal integer representation of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="017f6-123">Oggetto <see cref="T:System.IntPtr" /> che rappresenta un oggetto <see cref="T:System.Runtime.InteropServices.HandleRef" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-123">An <see cref="T:System.IntPtr" /> object that represents a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapper">
      <MemberSignature Language="C#" Value="public object Wrapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Wrapper" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Wrapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wrapper As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Wrapper { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="017f6-124">Ottiene l'oggetto che contiene l'handle a una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-124">Gets the object holding the handle to a resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="017f6-125">Oggetto che contiene l'handle a una risorsa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="017f6-125">The object holding the handle to a resource.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>