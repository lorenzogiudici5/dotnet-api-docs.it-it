<Type Name="MetadataStore" FullName="System.Activities.Presentation.Metadata.MetadataStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fb05e9f6ac0f45ef2c3c5b7da890ee9243db60ec" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52599591" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed MetadataStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.MetadataStore" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStore abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Raccolta in memoria di tabelle hash che consente la ricerca rapida di elementi della finestra di progettazione in base a <see cref="T:System.Type" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'archivio di metadati contiene metadati degli attributi personalizzati, quale l'associazione tra le finestre di progettazione e i tipi. Gli attributi personalizzati possono essere definiti in un oggetto <xref:System.Activities.Presentation.Metadata.AttributeTable> e possono essere aggiunti all'archivio di metadati. Dopo aver aggiunto gli attributi, saranno visualizzati nelle chiamate eseguite a <xref:System.ComponentModel.TypeDescriptor>.  
  
   
  
## Examples  
 Nell'esempio di codice seguente viene illustrato come associare l'ActivityDesigner personalizzato `AcitivityDesigner1` a un'attività personalizzata. Per altre informazioni su come creare ActivityDesigner personalizzati, vedere [procedura: creare un ActivityDesigner personalizzato](~/docs/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer.md).  
  
```csharp  
internal class Metadata : IRegisterMetadata  
{  
    private AttributeTable attributes;  
  
    // Called by the designer to register any design-time metadata.  
    public void Register()  
    {  
        AttributeTableBuilder builder = new AttributeTableBuilder();  
  
        // Add the custom attributes to associate the ActivityDesigner1 custom designer  
        // with the custom activity MyActivity.  
        builder.AddCustomAttributes(  
            typeof(MyActivity),  
            new DesignerAttribute(typeof(ActivityDesigner1)));  
        MetadataStore.AddAttributeTable(builder.CreateTable());  
  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttributeTable">
      <MemberSignature Language="C#" Value="public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAttributeTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAttributeTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddAttributeTable : System.Activities.Presentation.Metadata.AttributeTable -&gt; unit" Usage="System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table">Tabella da aggiungere.</param>
        <summary>Aggiunge la tabella specificata all'archivio di attributi dell'oggetto <see cref="T:System.AppDomain" /> corrente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dopo aver aggiunto la tabella, le chiamate a <xref:System.ComponentModel.TypeDescriptor> utilizzeranno gli attributi definiti nella tabella appena aggiunta. È possibile aggiungere più tabelle all'archivio di attributi. In caso di conflitti vengono utilizzati attributi della tabella appena aggiunta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>