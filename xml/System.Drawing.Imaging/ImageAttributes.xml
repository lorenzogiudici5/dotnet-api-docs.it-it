<Type Name="ImageAttributes" FullName="System.Drawing.Imaging.ImageAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9b2e1c4e566c6435f9d002b5a5315e86a75aef4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410755" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImageAttributes : ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImageAttributes extends System.Object implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Imaging.ImageAttributes" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageAttributes&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageAttributes sealed : ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Contiene informazioni relative alla modalità di manipolazione dei colori di bitmap e metafile durante il rendering.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene diverse impostazioni di regolazione del colore, incluse matrici di regolazione del colore, matrici di regolazione delle gradazioni di grigio, valori di correzione gamma, tabelle di mappa dei colori e i valori di soglia di colore. Durante il rendering, i colori possono essere corretti, scuriti, schiarire e rimosso. Per applicare tali modifiche, è possibile inizializzare un <xref:System.Drawing.Imaging.ImageAttributes> , quindi passare il percorso di tale <xref:System.Drawing.Imaging.ImageAttributes> oggetto (insieme al percorso di un <xref:System.Drawing.Image>) per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo.  
  
   
  
## Examples  
 Nell'esempio seguente accetta un'immagine è monocromatica (0,2, 0,0, 0,4, 1.0) e il componente rosso Double aggiunge 0,2 ai componenti rossi, verde e blu  
  
 Nella figura seguente mostra l'immagine originale a sinistra e l'immagine trasformato a destra.  
  
 ![Colori](~/add/media/colortrans1.png "colori")  
  
 Il codice nell'esempio seguente usa la procedura seguente per la ricolorazione:  
  
1.  Inizializzare un <xref:System.Drawing.Imaging.ColorMatrix> oggetto.  
  
2.  Creare un <xref:System.Drawing.Imaging.ImageAttributes> , quindi passare il <xref:System.Drawing.Imaging.ColorMatrix> dell'oggetto per il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metodo il <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
3.  Passare il <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo di un <xref:System.Drawing.Graphics> oggetto.  
  
 [!code-csharp[System.Drawing.RecoloringImages#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RecoloringImages/CS/Class1.cs#21)]
 [!code-vb[System.Drawing.RecoloringImages#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RecoloringImages/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageAttributes();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inizializza una nuova istanza della classe <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearBrushRemapTable">
      <MemberSignature Language="C#" Value="public void ClearBrushRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearBrushRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearBrushRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearBrushRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella la tabella di modifica del mapping dei colori del pennello di questo oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una tabella di rimappatura dei colori per la categoria predefinita, una tabella di rimappatura dei colori diversi per la categoria di bitmap e ancora una tabella di rimappatura dei colori diversi per la categoria pennello.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria pennello, si applicano le impostazioni predefinite per la categoria pennello.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una tabella di modifica del mapping predefinito che converte il rosso, verde e si specifica il valore gamma predefinito 1.8. Se si chiama il <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> (metodo), la tabella di modifica del mapping predefinito (rosso a verde) e il valore gamma predefinito (1,8) non verrà applicata a pennelli. Se successivamente si chiama il <xref:System.Drawing.Imaging.ImageAttributes.ClearBrushRemapTable%2A> metodo, la categoria pennello non verrà ripristinata la tabella di modifica del mapping predefinito; invece, la categoria pennello non avrà alcuna tabella di modifica del mapping. Analogamente, la categoria pennello non verrà ripristinato il valore gamma predefinito; invece, la categoria pennello non disporrà di alcun valore gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella la chiave di colore (intervallo di trasparenza).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella la chiave di colore (intervallo di trasparenza) per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una chiave di colore per la categoria predefinita, una chiave di colore diverso per la categoria di bitmap e ancora una chiave di colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorKey">
      <MemberSignature Language="C#" Value="public void ClearColorKey (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorKey(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorKey(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorKey (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorKey(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene cancellata la chiave di colore.</param>
        <summary>Cancella la chiave di colore (intervallo di trasparenza) per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una chiave di colore per la categoria predefinita, una chiave di colore diverso per la categoria di bitmap e ancora una chiave di colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una chiave di colore che consente di crea colori con un componente rosso da 200 a 255 trasparente e si specifica il valore gamma predefinito 1.8. Se si imposta la chiave di colore della categoria penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> (metodo), la chiave di colore e il valore gamma predefinito non verrà applicata alle penne. Se in seguito si cancella la chiave di colore della penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearColorKey%2A> metodo, la categoria penna non verrà ripristinata la chiave di colore; invece, la categoria penna non avrà Nessuna chiave di colore. Analogamente, la categoria penna non verrà ripristinato il valore gamma predefinito; invece, la categoria penna non avrà alcun valore gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella la matrice di regolazione del colore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella la matrice di regolazione del colore per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una matrice di regolazione del colore per la categoria predefinita, una matrice di regolazione del colore diverso per la categoria di bitmap e ancora una matrice di regolazione del colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite si applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearColorMatrix">
      <MemberSignature Language="C#" Value="public void ClearColorMatrix (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearColorMatrix(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearColorMatrix (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearColorMatrix(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene eliminata la matrice di regolazione del colore.</param>
        <summary>Cancella la matrice di regolazione del colore per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una matrice di regolazione del colore per la categoria predefinita, una matrice di regolazione del colore diverso per la categoria di bitmap e ancora una matrice di regolazione del colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite si applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una matrice di regolazione del colore e il valore gamma per la categoria predefinita. Se si imposta una matrice di regolazione del colore per la categoria penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metodo, la matrice di regolazione del colore predefinito non verrà applicata alle penne. Se in seguito si cancella la matrice di regolazione del colore della penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix%2A> metodo, la categoria penna non verrà ripristinata la matrice di regolazione predefinito; invece, la categoria penna non avrà alcuna matrice di regolazione. Analogamente, la categoria penna non verrà ripristinato il valore gamma predefinito; invece, la categoria penna non avrà alcun valore gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Disabilita la correzione gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disabilita la correzione gamma per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearGamma">
      <MemberSignature Language="C#" Value="public void ClearGamma (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearGamma(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearGamma(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearGamma (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearGamma(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene disabilitata la correzione gamma.</param>
        <summary>Disabilita la correzione gamma per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite si applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare un valore gamma e una matrice di regolazione del colore per la categoria predefinita. Se si imposta il valore gamma per la categoria penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> (metodo), il valore gamma predefinito non verrà applicata alle penne. Se in seguito si cancella il valore gamma penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearGamma%2A> metodo, la categoria penna non verrà ripristinato il valore gamma predefinito; invece, la categoria penna non avrà alcun valore gamma. Analogamente, la categoria penna non verrà ripristinato per la matrice di regolazione del colore predefinito; invece, la categoria penna non disporrà di alcuna matrice di regolazione del colore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella l'impostazione <see langword="NoOp" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella l'impostazione <see langword="NoOp" /> per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 È possibile disabilitare la regolazione del colore per la categoria predefinita chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metodo. In un secondo momento, è possibile ripristinare la regolazione del colore per la categoria predefinita chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metodo. La regolazione del colore quindi restituisce la prima chiamata a <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearNoOp">
      <MemberSignature Language="C#" Value="public void ClearNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> che specifica la categoria per la quale viene cancellata l'impostazione <see langword="NoOp" />.</param>
        <summary>Cancella l'impostazione <see langword="NoOp" /> per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 È possibile disabilitare la regolazione del colore per una determinata categoria chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metodo. In un secondo momento, è possibile ripristinare la regolazione del colore per tale categoria chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearNoOp%2A> metodo. La regolazione del colore quindi restituisce la prima chiamata a <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella l'impostazione del canale di output CMYK.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella l'impostazione del canale di output CMYK per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un canale di output per la categoria predefinita e un canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannel">
      <MemberSignature Language="C#" Value="public void ClearOutputChannel (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannel(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannel (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannel(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene cancellata l'impostazione del canale di output.</param>
        <summary>Cancella l'impostazione del canale di output CMYK per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un canale di output per la categoria predefinita e un canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare un canale di output e una matrice di regolazione per la categoria predefinita. Se si imposta il canale di output per la categoria bitmap chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> (metodo), il valore predefinito il canale di output non verrà applicata alla bitmap. Se in seguito si cancella la bitmap di canale di output chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel%2A> metodo, la categoria bitmap non disporrà di canale di output predefinito; invece, la categoria bitmap non disporrà di alcuna impostazione del canale di output. Analogamente, la categoria bitmap non verrà ripristinato per la matrice di regolazione del colore predefinito; invece, la categoria bitmap non avrà alcuna matrice di regolazione del colore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella l'impostazione del profilo del colore del canale di output.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella l'impostazione del profilo del colore del canale di output per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un profilo del canale di output per la categoria predefinita e un profilo del canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void ClearOutputChannelColorProfile (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearOutputChannelColorProfile(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearOutputChannelColorProfile (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearOutputChannelColorProfile(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene cancellata l'impostazione del profilo del canale di output.</param>
        <summary>Cancella l'impostazione del profilo del colore del canale di output per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un profilo del canale di output per la categoria predefinita e un profilo del canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare un profilo del canale di output e una matrice di regolazione per la categoria predefinita. Se si imposta il profilo del canale di output per la categoria bitmap chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> (metodo), il valore predefinito il profilo del canale di output non verrà applicata alla bitmap. Se in seguito si cancella la bitmap di profilo del canale di output chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile%2A> metodo, la categoria bitmap non disporrà del profilo del canale di output predefinito; invece, la categoria bitmap non disporrà di alcuna impostazione di profilo del canale di output. Analogamente, la categoria bitmap non verrà ripristinato per la matrice di regolazione del colore predefinito; invece, la categoria bitmap non avrà alcuna matrice di regolazione del colore.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella la tabella di modifica del mapping dei colori.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella la tabella di modifica del mapping dei colori per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una tabella di mapping per la categoria predefinita, una tabella di mapping diversi per la categoria di bitmap e ancora una tabella di mapping diversi per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearRemapTable">
      <MemberSignature Language="C#" Value="public void ClearRemapTable (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearRemapTable(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearRemapTable(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearRemapTable (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearRemapTable(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene cancellata la tabella di modifica del mapping.</param>
        <summary>Cancella la tabella di modifica del mapping dei colori per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una tabella di mapping per la categoria predefinita, una tabella di mapping diversi per la categoria di bitmap e ancora una tabella di mapping diversi per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite si applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una tabella di mapping e il valore gamma per la categoria predefinita. Se si imposta la tabella di mapping per la categoria penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> metodo, la tabella di modifica del mapping predefinito non verrà applicata alle penne. Se in seguito si cancella la tabella di modifica del mapping della penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearRemapTable%2A> metodo, la categoria penna non verrà ripristinata la tabella di modifica del mapping predefinito; invece, la categoria penna non avrà alcuna tabella di modifica del mapping. Analogamente, la categoria penna non verrà ripristinato il valore gamma predefinito; invece, la categoria penna non avrà alcun valore gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Cancella il valore soglia.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancella il valore soglia per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La soglia è un valore compreso tra 0 e 1 che specifica un punto di cambio data per ogni componente di colore. Si supponga, ad esempio, la soglia è impostata su 0,7 e si supponga che si esegue il rendering un colore i cui rosso, verdi e blu componenti sono 230, 50 e 220, rispettivamente. Il componente rosso (230) è maggiore di 0, 7x255, verrà modificato in 255 (intensità completa). Il componente verde (50) è minore di 0, 7x255, verrà modificato il componente verde su 0. Il componente blu (220) è maggiore di 0, 7x255 verrà modificato il componente blu e 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una soglia per la categoria predefinita, un'altra soglia per la categoria di bitmap e ancora un'altra soglia per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearThreshold">
      <MemberSignature Language="C#" Value="public void ClearThreshold (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearThreshold(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.ClearThreshold(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearThreshold (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearThreshold(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene cancellata la soglia.</param>
        <summary>Cancella il valore soglia per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La soglia è un valore compreso tra 0 e 1 che specifica un punto di cambio data per ogni componente di colore. Si supponga, ad esempio, la soglia è impostata su 0,7 e si supponga che si esegue il rendering un colore i cui rosso, verdi e blu componenti sono 230, 50 e 220, rispettivamente. Il componente rosso (230) è maggiore di 0, 7x55 verrà modificato in 255 (intensità completa). Il componente verde (50) è minore di 0, 7x255, verrà modificato il componente verde su 0. Il componente blu (220) è maggiore di 0, 7x255 verrà modificato il componente blu e 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una soglia per la categoria predefinita, un'altra soglia per la categoria di bitmap e ancora un'altra soglia per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una soglia e il valore gamma per la categoria predefinita. Se si imposta la soglia per la categoria penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metodo, la soglia predefinita non verrà applicata alle penne. Se in seguito si cancella la soglia della penna chiamando il <xref:System.Drawing.Imaging.ImageAttributes.ClearThreshold%2A> metodo, la categoria penna non verrà ripristinata la soglia predefinita; invece, la categoria penna non disporrà di alcuna soglia. Analogamente, la categoria penna non verrà ripristinato il valore gamma predefinito; invece, la categoria penna non avrà alcun valore gamma.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una copia esatta dell'oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <returns>Oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> creato da questa classe e di cui viene eseguito il cast come oggetto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rilascia tutte le risorse usate dall'oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chiamare il metodo <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> dopo aver terminato di utilizzare l'oggetto <xref:System.Drawing.Imaging.ImageAttributes>. Il metodo <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> lascia l'oggetto <xref:System.Drawing.Imaging.ImageAttributes> in una condizione di inutilizzabilità. Dopo la chiamata <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A>, è necessario rilasciare tutti i riferimenti al <xref:System.Drawing.Imaging.ImageAttributes> in modo che il garbage collector può recuperare la memoria che di <xref:System.Drawing.Imaging.ImageAttributes> occupata. Per ulteriori informazioni, vedere [la pulizia di risorse non gestite](~/docs/standard/garbage-collection/unmanaged.md) e [implementazione di un metodo Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Chiamare sempre il metodo <xref:System.Drawing.Imaging.ImageAttributes.Dispose%2A> prima di rilasciare l'ultimo riferimento a <xref:System.Drawing.Imaging.ImageAttributes>. In caso contrario, le risorse utilizzate non verranno liberate finché il metodo <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto `Finalize` non viene richiamato dal Garbage Collector.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ImageAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ImageAttributes ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consente a un oggetto di effettuare un tentativo di liberare risorse ed eseguire altre operazioni di pulizia prima che venga recuperato da Garbage Collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdjustedPalette">
      <MemberSignature Language="C#" Value="public void GetAdjustedPalette (System.Drawing.Imaging.ColorPalette palette, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetAdjustedPalette(class System.Drawing.Imaging.ColorPalette palette, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette(System.Drawing.Imaging.ColorPalette,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetAdjustedPalette (palette As ColorPalette, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetAdjustedPalette(System::Drawing::Imaging::ColorPalette ^ palette, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="palette" Type="System.Drawing.Imaging.ColorPalette" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="palette">Oggetto <see cref="T:System.Drawing.Imaging.ColorPalette" /> che nell'input contiene la tavolozza da regolare e nell'output contiene la tavolozza regolata.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria le cui impostazioni di regolazione verranno applicate alla tavolozza.</param>
        <summary>Regola i colori in una tavolozza in base alle impostazioni di regolazione di una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una tabella di rimappatura dei colori per la categoria predefinita, una tabella di rimappatura dei colori diversi per la categoria di bitmap e ancora una tabella di rimappatura dei colori diversi per la categoria penna.  
  
 Quando si chiama il <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> (metodo), è possibile specificare la categoria di regolazione che viene utilizzata per modificare i colori della tavolozza. Ad esempio, se si passa <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> per il <xref:System.Drawing.Imaging.ImageAttributes.GetAdjustedPalette%2A> (metodo), la regolazione delle impostazioni della categoria bitmap vengono utilizzate per modificare i colori della tavolozza.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBrushRemapTable">
      <MemberSignature Language="C#" Value="public void SetBrushRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBrushRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBrushRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBrushRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Matrice di oggetti <see cref="T:System.Drawing.Imaging.ColorMap" />.</param>
        <summary>Imposta la tabella di modifica del mapping dei colori per la categoria pennello.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabella di riassociazione cromatica è una matrice di <xref:System.Drawing.Imaging.ColorMap> strutture. Ogni <xref:System.Drawing.Imaging.ColorMap> struttura dispone di due <xref:System.Drawing.Color> oggetti: uno che specifica un colore precedente e uno che specifica un nuovo colore corrispondente. Durante il rendering, qualsiasi colore che corrisponde a uno dei colori nella tabella di mapping precedenti diventa il nuovo colore corrispondente.  
  
 La chiamata di <xref:System.Drawing.Imaging.ImageAttributes.SetBrushRemapTable%2A> metodo ha lo stesso effetto passaggio <xref:System.Drawing.Imaging.ColorAdjustType.Brush> per il <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> (metodo). La tabella di mapping specificato si applica agli elementi metafile che vengono riempiti con un pennello.  
  
 Questo metodo è destinato a essere utilizzato solo con metafile.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Crea un singolo elemento <xref:System.Drawing.Imaging.ColorMap> matrice che contiene il rosso come colore precedente e il verde come il nuovo colore.  
  
2.  Inoltro della matrice a un oggetto appena creato <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorKey">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la chiave di colore (intervallo di trasparenza).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valore minimo della chiave di colore.</param>
        <param name="colorHigh">Valore massimo della chiave di colore.</param>
        <summary>Imposta la chiave di colore per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta i valori massimo e minimo della chiave di colore in modo che un intervallo di colori può essere rese trasparente. Qualsiasi colore che dispone di ciascuno dei tre componenti (rosso, verde e blu) tra i componenti corrispondenti dei tasti di colore minimo e massimo è trasparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una chiave di colore per la categoria predefinita, una chiave di colore diverso per la categoria di bitmap e ancora una chiave di colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%28System.Drawing.Color%2CSystem.Drawing.Color%2CSystem.Drawing.Imaging.ColorAdjustType%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorKey">
      <MemberSignature Language="C#" Value="public void SetColorKey (System.Drawing.Color colorLow, System.Drawing.Color colorHigh, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorKey(valuetype System.Drawing.Color colorLow, valuetype System.Drawing.Color colorHigh, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorKey(System.Drawing.Color,System.Drawing.Color,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorKey (colorLow As Color, colorHigh As Color, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorKey(System::Drawing::Color colorLow, System::Drawing::Color colorHigh, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorLow" Type="System.Drawing.Color" />
        <Parameter Name="colorHigh" Type="System.Drawing.Color" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorLow">Valore minimo della chiave di colore.</param>
        <param name="colorHigh">Valore massimo della chiave di colore.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostata la chiave di colore.</param>
        <summary>Imposta la chiave di colore (intervallo di trasparenza) per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Questo metodo imposta i valori massimo e minimo della chiave di colore in modo che un intervallo di colori può essere rese trasparente. Qualsiasi colore che dispone di ciascuno dei tre componenti (rosso, verde e blu) tra i componenti corrispondenti dei tasti di colore minimo e massimo è trasparente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una chiave di colore per la categoria predefinita, una chiave di colore diverso per la categoria di bitmap e ancora una chiave di colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta la chiave di colore per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Apre un <xref:System.Drawing.Image> che utilizza il file Circle. bmp e disegnato sullo schermo.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto e imposta la chiave di colore mediante la chiamata di <xref:System.Drawing.Imaging.ImageAttributes.SetColorKey%2A> metodo.  
  
3.  Disegna l'immagine a schermo usando la chiave di colore del <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrices">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la matrice di regolazione del colore e la matrice di regolazione delle gradazioni di grigio.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <param name="grayMatrix">Matrice di regolazione delle gradazioni di grigio.</param>
        <summary>Imposta la matrice di regolazione del colore e la matrice di regolazione delle gradazioni di grigio per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare matrici di regolazione per la categoria predefinita, le matrici di regolazione diversi per la categoria di bitmap e ancora altre matrici di regolazione per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 La chiamata di <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> è equivalente alla chiamata al metodo il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> metodo e passando <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> per il `flags` parametro. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Specifica che tutti i colori (inclusi visualizzata in grigio) vengono modificati per la matrice di regolazione del colore, non la matrice di regolazione delle gradazioni di grigio. Pertanto, la matrice di regolazione delle gradazioni di grigio passata a questo metodo non ha effetto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <param name="grayMatrix">Matrice di regolazione delle gradazioni di grigio.</param>
        <param name="flags">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> che specifica il tipo di immagine e colore su cui avranno effetto le matrici di regolazione del colore e delle gradazioni di grigio.</param>
        <summary>Imposta la matrice di regolazione del colore e la matrice di regolazione delle gradazioni di grigio per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare matrici di regolazione per la categoria predefinita, le matrici di regolazione diversi per la categoria di bitmap e ancora altre matrici di regolazione per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrices">
      <MemberSignature Language="C#" Value="public void SetColorMatrices (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrix grayMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrices(class System.Drawing.Imaging.ColorMatrix newColorMatrix, class System.Drawing.Imaging.ColorMatrix grayMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrices(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrices (newColorMatrix As ColorMatrix, grayMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrices(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrix ^ grayMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="grayMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <param name="grayMatrix">Matrice di regolazione delle gradazioni di grigio.</param>
        <param name="mode">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> che specifica il tipo di immagine e colore su cui avranno effetto le matrici di regolazione del colore e delle gradazioni di grigio.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale vengono impostate le matrici di regolazione del colore e delle gradazioni di grigio.</param>
        <summary>Imposta la matrice di regolazione del colore e la matrice di regolazione delle gradazioni di grigio per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare matrici di regolazione per la categoria predefinita, le matrici di regolazione diversi per la categoria di bitmap e ancora altre matrici di regolazione per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta le matrici di regolazione del colore e regolazione delle gradazioni di grigio per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrices%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColorMatrix">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la matrice di regolazione del colore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <summary>Imposta la matrice di regolazione del colore per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una matrice di regolazione del colore per la categoria predefinita, una matrice di regolazione del colore diverso per la categoria di bitmap e ancora una matrice di regolazione del colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 La chiamata di <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29?displayProperty=nameWithType> è equivalente alla chiamata al metodo il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%2CSystem.Drawing.Imaging.ColorMatrixFlag%29?displayProperty=nameWithType> metodo e passando <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> per il `flags` parametro. <xref:System.Drawing.Imaging.ColorMatrixFlag.Default?displayProperty=nameWithType> Specifica che tutti i colori (inclusi visualizzata in grigio) vengono regolati per la matrice di regolazione del colore  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Crea un'immagine di rettangolo contenente tutti i colori valori impostati su 128, producendo un rettangolo che viene riempito con un colore medio grigio a tinta unita. Il codice quindi disegna l'immagine di rettangolo sullo schermo.  
  
2.  Crea un <xref:System.Drawing.Imaging.ColorMatrix> e imposta il relativo <xref:System.Drawing.Drawing2D.Matrix> posizione a 1,75, che evidenzia il componente rosso dell'immagine.  
  
3.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> e viene chiamato il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> metodo.  
  
4.  Disegna l'immagine, un secondo rettangolo, sullo schermo, utilizzando il <xref:System.Drawing.Imaging.ColorMatrix> impostato nel <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
 Si noti che il secondo rettangolo ha evidenziato il colore rosso.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, flags As ColorMatrixFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorMatrixFlag" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <param name="flags">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> che specifica il tipo di immagine e colore su cui avrà effetto la matrice di regolazione del colore.</param>
        <summary>Imposta la matrice di regolazione del colore per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una matrice di regolazione del colore per la categoria predefinita, una matrice di regolazione del colore diverso per la categoria di bitmap e ancora una matrice di regolazione del colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%28System.Drawing.Imaging.ColorMatrix%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetColorMatrix">
      <MemberSignature Language="C#" Value="public void SetColorMatrix (System.Drawing.Imaging.ColorMatrix newColorMatrix, System.Drawing.Imaging.ColorMatrixFlag mode, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColorMatrix(class System.Drawing.Imaging.ColorMatrix newColorMatrix, valuetype System.Drawing.Imaging.ColorMatrixFlag mode, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetColorMatrix(System.Drawing.Imaging.ColorMatrix,System.Drawing.Imaging.ColorMatrixFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColorMatrix (newColorMatrix As ColorMatrix, mode As ColorMatrixFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColorMatrix(System::Drawing::Imaging::ColorMatrix ^ newColorMatrix, System::Drawing::Imaging::ColorMatrixFlag mode, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newColorMatrix" Type="System.Drawing.Imaging.ColorMatrix" />
        <Parameter Name="mode" Type="System.Drawing.Imaging.ColorMatrixFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="newColorMatrix">Matrice di regolazione del colore.</param>
        <param name="mode">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorMatrixFlag" /> che specifica il tipo di immagine e colore su cui avrà effetto la matrice di regolazione del colore.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostata la matrice di regolazione del colore.</param>
        <summary>Imposta la matrice di regolazione del colore per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una matrice di regolazione del colore per la categoria predefinita, una matrice di regolazione del colore diverso per la categoria di bitmap e ancora una matrice di regolazione del colore diverso per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta la matrice di regolazione del colore per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Drawing.Imaging.ImageAttributes.SetColorMatrix%2A>. Per eseguire questo esempio, incollare il codice in un Windows Form e chiamare `RotateColors` del form <xref:System.Windows.Forms.Control.Paint> gestione degli eventi, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.RotateColors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.RotateColors/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.RotateColors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.RotateColors/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetGamma">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il valore gamma.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gamma">Valore di correzione gamma.</param>
        <summary>Imposta il valore gamma per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori tipici per il `gamma` parametro variano da 1.0 a 2,2; Tuttavia, i valori compresi tra 0,1 e 5.0 possono rivelarsi utili in alcuni casi.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Valori gamma non compreso nell'intervallo normale possono essere utili per monitor CRT meno recenti o per i monitoraggi che si trovano in condizioni di illuminazione insolite, ad esempio ambienti industriali o finestra Visualizza.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Inoltre, è necessario modificare il percorso del file di immagine in un percorso e il nome è valido per il sistema. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Apre un <xref:System.Drawing.Image> che utilizza il file jpg e disegnato sullo schermo usando il valore predefinito per la gamma.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto e imposta la gamma 2.2 chiamando il <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> metodo.  
  
3.  Disegna l'immagine (una seconda fotocamera) sullo schermo utilizzando il valore gamma impostato nel <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGamma">
      <MemberSignature Language="C#" Value="public void SetGamma (float gamma, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGamma(float32 gamma, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetGamma(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGamma (gamma As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGamma(float gamma, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gamma" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="gamma">Valore di correzione gamma.</param>
        <param name="type">Elemento dell'enumerazione <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostato il valore gamma.</param>
        <summary>Imposta il valore gamma per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 I valori tipici per il `gamma` parametro variano da 1.0 a 2,2; Tuttavia, i valori compresi tra 0,1 e 5.0 possono rivelarsi utili in alcuni casi.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta il valore gamma per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
 Valori gamma non compreso nell'intervallo normale possono essere utili per monitor CRT meno recenti o per i monitoraggi che si trovano in condizioni di illuminazione insolite, ad esempio ambienti industriali o finestra Visualizza.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetGamma%28System.Single%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNoOp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Disattiva la regolazione del colore.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disattiva la regolazione del colore per la categoria predefinita. È possibile chiamare il metodo <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> per ripristinare le impostazioni di regolazione del colore precedenti alla chiamata al metodo <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Apre un <xref:System.Drawing.Image> che utilizza il file jpg.  
  
2.  Imposta il valore gamma del <xref:System.Drawing.Imaging.ImageAttributes> oggetto 0,25.  
  
3.  Disegna l'immagine alla schermata.  
  
4.  Chiama il metodo <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A>.  
  
5.  Disegna l'immagine (una seconda fotocamera) sullo schermo. Tuttavia, poiché il <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp%2A> metodo è stato chiamato, la gamma viene impostato su un valore di 1.0 e l'immagine viene disegnata sullo schermo con l'impostazione predefinita.  
  
 Si noti che l'immagine a sinistra è molto attenuato (gamma di 0,25) e l'immagine a destra è aumentare il contrasto (gamma pari a 1,0).  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNoOp">
      <MemberSignature Language="C#" Value="public void SetNoOp (System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNoOp(valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetNoOp(System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetNoOp (type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNoOp(System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene disattivata la correzione del colore.</param>
        <summary>Disattiva la regolazione del colore per una categoria specificata. È possibile chiamare il metodo <see cref="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp" /> per ripristinare le impostazioni di regolazione del colore precedenti alla chiamata al metodo <see cref="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un valore gamma per la categoria predefinita, un altro valore gamma per la categoria di bitmap e ancora un altro valore gamma per la categoria penna.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetNoOp> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannel">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il canale di output CMYK.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
      </Parameters>
      <Docs>
        <param name="flags">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> che specifica il canale di output.</param>
        <summary>Imposta il canale di output CMYK per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodo per convertire un'immagine in uno spazio colore CMYK ed esaminare l'intensità di uno dei canali di colore CMYK. Si supponga, ad esempio, creare un <xref:System.Drawing.Imaging.ImageAttributes> e impostare il canale di output di bitmap <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Se si passa il percorso di tale <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo, viene calcolato il componente azzurro di ogni pixel e ogni pixel dell'immagine di rendering è una sfumatura di grigio che indica l'intensità del relativo canale azzurro. Allo stesso modo, è possibile eseguire il rendering di immagini che indicano l'intensità dei canali magenta, giallo e nero.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un canale di output per la categoria predefinita e un canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Per eseguire questo esempio, incollare il codice seguente in un Windows Form. Gestire il modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate `ShowOutputChannels`, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannel">
      <MemberSignature Language="C#" Value="public void SetOutputChannel (System.Drawing.Imaging.ColorChannelFlag flags, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannel(valuetype System.Drawing.Imaging.ColorChannelFlag flags, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannel(System.Drawing.Imaging.ColorChannelFlag,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannel (flags As ColorChannelFlag, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannel(System::Drawing::Imaging::ColorChannelFlag flags, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.Drawing.Imaging.ColorChannelFlag" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="flags">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorChannelFlag" /> che specifica il canale di output.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostato il canale di output.</param>
        <summary>Imposta il canale di output CMYK per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodo per convertire un'immagine in uno spazio colore CMYK ed esaminare l'intensità di uno dei canali di colore CMYK. Si supponga, ad esempio, creare un <xref:System.Drawing.Imaging.ImageAttributes> e impostare il canale di output di bitmap <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC>. Se si passa il percorso di tale <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo, viene calcolato il componente azzurro di ogni pixel e ogni pixel dell'immagine di rendering è una sfumatura di grigio che indica l'intensità del relativo canale azzurro. Allo stesso modo, è possibile eseguire il rendering di immagini che indicano l'intensità dei canali magenta, giallo e nero.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un canale di output per la categoria predefinita e un canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta il canale di output per la categoria bitmap passando <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a bitmap.  
  
   
  
## Examples  
 Nell'esempio di codice riportato di seguito viene illustrato come utilizzare il metodo <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A>. Per eseguire questo esempio, incollare il codice seguente in un Windows Form. Gestire il modulo <xref:System.Windows.Forms.Control.Paint> eventi e chiamate `ShowOutputChannels`, passando `e` come <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Drawing.Misc3#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.Misc3#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetOutputChannelColorProfile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta il file del profilo dei colori del canale di output.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nome del percorso di un file del profilo del colore. Se il file del profilo dei colori si trova nella directory %SystemRoot%\System32\Spool\Drivers\Color, il parametro può corrispondere al nome del file. In caso contrario, è necessario che il parametro corrisponda al nome completo del percorso.</param>
        <summary>Imposta il file del profilo del colore del canale di output per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> e <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metodi per convertire un'immagine in uno spazio colore CMYK (ciano-magenta-giallo-nero) ed esaminare l'intensità di uno dei CMYK canali di colore. Ad esempio, si supponga di che scrittura codice che esegue i passaggi seguenti:  
  
1.  Creare un <xref:System.Drawing.Image>.  
  
2.  Creare un <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
3.  Passare <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodo il <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
4.  Passare il nome del percorso di un file di profilo colori per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metodo il <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
5.  Passare i percorsi del <xref:System.Drawing.Image> e <xref:System.Drawing.Imaging.ImageAttributes> oggetti per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilizzerà il file di profilo dei colori per calcolare il componente azzurro di ogni pixel dell'immagine e ogni pixel dell'immagine di rendering sarà una sfumatura di grigio che indica l'intensità del relativo canale azzurro.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un file di profilo dei colori del canale di output per la categoria predefinita e un file di profilo dei colori del canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputChannelColorProfile">
      <MemberSignature Language="C#" Value="public void SetOutputChannelColorProfile (string colorProfileFilename, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputChannelColorProfile(string colorProfileFilename, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile(System.String,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOutputChannelColorProfile (colorProfileFilename As String, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutputChannelColorProfile(System::String ^ colorProfileFilename, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorProfileFilename" Type="System.String" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="colorProfileFilename">Nome del percorso di un file del profilo del colore. Se il file del profilo dei colori si trova nella directory %SystemRoot%\System32\Spool\Drivers\Color, il parametro può corrispondere al nome del file. In caso contrario, è necessario che il parametro corrisponda al nome completo del percorso.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostato il file del profilo dei colori del canale di output.</param>
        <summary>Imposta il file del profilo dei colori del canale di output per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 È possibile utilizzare il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> e <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metodi per convertire un'immagine in uno spazio colore CMYK (ciano-magenta-giallo-nero) ed esaminare l'intensità di uno dei CMYK canali di colore. Ad esempio, si supponga di che scrittura codice che esegue i passaggi seguenti:  
  
1.  Creare un <xref:System.Drawing.Image>.  
  
2.  Creare un <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
3.  Passare <xref:System.Drawing.Imaging.ColorChannelFlag.ColorChannelC> per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannel%2A> metodo il <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
4.  Passare il nome del percorso di un file di profilo colori per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> metodo il <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
5.  Passare i percorsi del <xref:System.Drawing.Image> e <xref:System.Drawing.Imaging.ImageAttributes> oggetti per il <xref:System.Drawing.Graphics.DrawImage%2A> metodo.  
  
 [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] utilizzerà il file di profilo dei colori per calcolare il componente azzurro di ogni pixel dell'immagine e ogni pixel dell'immagine di rendering sarà una sfumatura di grigio che indica l'intensità del relativo canale azzurro.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare un file di profilo dei colori del canale di output per la categoria predefinita e un file di profilo dei colori del canale di output diverso per la categoria di bitmap.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria bitmap, si applicano le impostazioni predefinite per la categoria bitmap.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta il file di profilo dei colori del canale di output per la categoria bitmap passando <xref:System.Drawing.Imaging.ColorAdjustType.Bitmap> per il <xref:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a bitmap.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetRemapTable">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la tabella di modifica del mapping dei colori.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
      </Parameters>
      <Docs>
        <param name="map">Matrice di coppie di colori del tipo <see cref="T:System.Drawing.Imaging.ColorMap" />. Ogni coppia di colori contiene un colore già presente (il primo valore) e il colore a cui esso verrà mappato (il secondo valore).</param>
        <summary>Imposta la tabella di modifica del mapping dei colori per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabella di riassociazione cromatica è una matrice di <xref:System.Drawing.Imaging.ColorMap> strutture. Ogni <xref:System.Drawing.Imaging.ColorMap> struttura dispone di due <xref:System.Drawing.Color> oggetti: uno che specifica un colore precedente e uno che specifica un nuovo colore corrispondente. Durante il rendering, qualsiasi colore che corrisponde a uno dei colori nella tabella di mapping precedenti diventa il nuovo colore corrispondente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una modifica del mapping dei colori per la categoria predefinita, una tabella di rimappatura dei colori per la categoria di bitmap e ancora una tabella di rimappatura dei colori diversi per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Crea un'immagine (un cerchio rosso), viene salvato circle2, verrà visualizzata l'immagine e disegnato sullo schermo.  
  
2.  Crea una mappa di colore che esegue il mapping di colore rosso per il colore verde.  
  
3.  Disegna l'immagine creata in precedenza la schermata, ma questa volta utilizzando la mappa colori.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRemapTable">
      <MemberSignature Language="C#" Value="public void SetRemapTable (System.Drawing.Imaging.ColorMap[] map, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRemapTable(class System.Drawing.Imaging.ColorMap[] map, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetRemapTable(System.Drawing.Imaging.ColorMap[],System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetRemapTable (map As ColorMap(), type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRemapTable(cli::array &lt;System::Drawing::Imaging::ColorMap ^&gt; ^ map, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="map" Type="System.Drawing.Imaging.ColorMap[]" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="map">Matrice di coppie di colori del tipo <see cref="T:System.Drawing.Imaging.ColorMap" />. Ogni coppia di colori contiene un colore già presente (il primo valore) e il colore a cui esso verrà mappato (il secondo valore).</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostata la tabella di modifica del mapping dei colori.</param>
        <summary>Imposta la tabella di modifica del mapping dei colori per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una tabella di riassociazione cromatica è una matrice di <xref:System.Drawing.Imaging.ColorMap> strutture. Ogni <xref:System.Drawing.Imaging.ColorMap> struttura dispone di due <xref:System.Drawing.Color> oggetti: uno che specifica un colore precedente e uno che specifica un nuovo colore corrispondente. Durante il rendering, qualsiasi colore che corrisponde a uno dei colori nella tabella di mapping precedenti diventa il nuovo colore corrispondente.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una modifica del mapping dei colori per la categoria predefinita, una tabella di rimappatura dei colori per la categoria di bitmap e ancora una tabella di rimappatura dei colori diversi per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta la tabella di rimappatura dei colori per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetRemapTable%28System.Drawing.Imaging.ColorMap%5B%5D%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetThreshold">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la soglia (intervallo di trasparenza).</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="threshold">Numero reale che specifica il valore soglia.</param>
        <summary>Imposta la soglia (intervallo di trasparenza) per la categoria predefinita.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La soglia è un valore compreso tra 0 e 1 che specifica un punto di cambio data per ogni componente di colore. Si supponga, ad esempio, la soglia è impostata su 0,7 e si supponga che si esegue il rendering un colore i cui rosso, verdi e blu componenti sono 230, 50 e 220, rispettivamente. Il componente rosso (230) è maggiore di 0, 7x255, verrà modificato in 255 (intensità completa). Il componente verde (50) è minore di 0, 7x255, verrà modificato il componente verde su 0. Il componente blu (220) è maggiore di 0, 7x255 verrà modificato il componente blu e 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una soglia per la categoria predefinita, una soglia per la categoria di bitmap e ancora un'altra soglia per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Apre un <xref:System.Drawing.Image> e disegnato sullo schermo.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> dell'oggetto e imposta la soglia utilizzando il <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> metodo.  
  
3.  Disegna l'immagine alla schermata utilizzando la soglia del <xref:System.Drawing.Imaging.ImageAttributes> oggetto.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetThreshold">
      <MemberSignature Language="C#" Value="public void SetThreshold (float threshold, System.Drawing.Imaging.ColorAdjustType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetThreshold(float32 threshold, valuetype System.Drawing.Imaging.ColorAdjustType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetThreshold(System.Single,System.Drawing.Imaging.ColorAdjustType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetThreshold (threshold As Single, type As ColorAdjustType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetThreshold(float threshold, System::Drawing::Imaging::ColorAdjustType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="threshold" Type="System.Single" />
        <Parameter Name="type" Type="System.Drawing.Imaging.ColorAdjustType" />
      </Parameters>
      <Docs>
        <param name="threshold">Valore soglia compreso tra 0 e 1, usato come punto di interruzione per ordinare i colori che verranno mappati a un valore massimo o minimo.</param>
        <param name="type">Elemento dell'oggetto <see cref="T:System.Drawing.Imaging.ColorAdjustType" /> da cui viene specificata la categoria per la quale viene impostata la soglia di colore.</param>
        <summary>Imposta la soglia (intervallo di trasparenza) per una categoria specificata.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La soglia è un valore compreso tra 0 e 1 che specifica un punto di cambio data per ogni componente di colore. Si supponga, ad esempio, la soglia è impostata su 0,7 e si supponga che si esegue il rendering un colore i cui rosso, verdi e blu componenti sono 230, 50 e 220, rispettivamente. Il componente rosso (230) è maggiore di 0, 7x255, verrà modificato in 255 (intensità completa). Il componente verde (50) è minore di 0, 7x255, verrà modificato il componente verde su 0. Il componente blu (220) è maggiore di 0, 7x255 verrà modificato il componente blu e 255.  
  
 Un <xref:System.Drawing.Imaging.ImageAttributes> oggetto mantiene le impostazioni di colore e delle gradazioni di grigio per cinque categorie di regolazione: predefinito, bitmap, pennello, penna e testo. Ad esempio, è possibile specificare una soglia per la categoria predefinita, una soglia per la categoria di bitmap e ancora un'altra soglia per la categoria penna.  
  
 Le impostazioni di regolazione del colore e regolazione delle gradazioni di grigio predefinite si applicano a tutte le categorie che non contengono le impostazioni di regolazione di propri. Ad esempio, se non si specifica alcuna impostazione di regolazione per la categoria penna, le impostazioni predefinite applicano a tale categoria.  
  
 Non appena si specifica un'impostazione di regolazione delle gradazioni di grigio per una determinata categoria o la regolazione del colore, le impostazioni di regolazione non più applicano alla categoria. Si supponga, ad esempio, che specificare una raccolta di impostazioni di regolazione per la categoria predefinita. Se si imposta la soglia per la categoria penna passando <xref:System.Drawing.Imaging.ColorAdjustType.Pen> per il <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%2A> (metodo), nessuna delle impostazioni di regolazione verranno applicate a penne.  
  
   
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetThreshold%28System.Single%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetWrapMode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Imposta la modalità di disposizione.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWrapMode (mode As WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento dell'oggetto <see cref="T:System.Drawing.Drawing2D.WrapMode" /> da cui viene specificato come usare le copie ripetute di un'immagine per affiancare un'area.</param>
        <summary>Imposta la modalità di disposizione usata per decidere come affiancare una trama all'interno di una forma o entro i limiti di quest'ultima. Una trama viene inserita all'interno di una forma per riempirla quando è di dimensioni minori rispetto alla forma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La chiamata di <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> è equivalente alla chiamata al metodo <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%2CSystem.Drawing.Color%29> e passando <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> per il `color` parametro. <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> Specifica il colore dei pixel all'esterno di un'immagine di rendering. Il colore è visibile se il parametro modalità è impostato su <xref:System.Drawing.Drawing2D.WrapMode.Clamp> e il rettangolo di origine passato al <xref:System.Drawing.Graphics.DrawImage%2A> metodo è più grande dell'immagine stessa.  
  
   
  
## Examples  
 Esempio di codice seguente è progettato per l'uso con Windows Form e richiede <xref:System.Windows.Forms.PaintEventArgs> `e`, ovvero un parametro del <xref:System.Windows.Forms.Control.Paint> gestore dell'evento. Nel codice vengono eseguite le seguenti azioni:  
  
1.  Apre un <xref:System.Drawing.Image> dal Circle3 file (un cerchio piccolo di colore rosso) e disegnato sullo schermo.  
  
2.  Crea un <xref:System.Drawing.Imaging.ImageAttributes> oggetto e imposta il <xref:System.Drawing.Drawing2D.WrapMode> enumerazione <xref:System.Drawing.Drawing2D.WrapMode.Tile>.  
  
3.  Crea un <xref:System.Drawing.TextureBrush> utilizzando l'immagine dal file Circle3.  
  
4.  Disegna un rettangolo sullo schermo che viene riempito con i cerchi piccoli di colore rosso.  
  
 [!code-cpp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicImaging.ImageAttributes#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImaging.ImageAttributes/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento dell'oggetto <see cref="T:System.Drawing.Drawing2D.WrapMode" /> da cui viene specificato come usare le copie ripetute di un'immagine per affiancare un'area.</param>
        <param name="color">Oggetto <see cref="T:System.Drawing.Imaging.ImageAttributes" /> che specifica il colore dei pixel all'esterno di un'immagine di rendering. Il colore è visibile, se il parametro modalità è impostato su <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> e il rettangolo di origine passato a <see cref="Overload:System.Drawing.Graphics.DrawImage" /> è più grande dell'immagine stessa.</param>
        <summary>Imposta la modalità di disposizione e il colore usati per decidere come affiancare una trama all'interno di una forma o nei limiti di quest'ultima. Una trama viene inserita all'interno di una forma per riempirla quando è di dimensioni minori rispetto alla forma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWrapMode">
      <MemberSignature Language="C#" Value="public void SetWrapMode (System.Drawing.Drawing2D.WrapMode mode, System.Drawing.Color color, bool clamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWrapMode(valuetype System.Drawing.Drawing2D.WrapMode mode, valuetype System.Drawing.Color color, bool clamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Imaging.ImageAttributes.SetWrapMode(System.Drawing.Drawing2D.WrapMode,System.Drawing.Color,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWrapMode(System::Drawing::Drawing2D::WrapMode mode, System::Drawing::Color color, bool clamp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Drawing.Drawing2D.WrapMode" />
        <Parameter Name="color" Type="System.Drawing.Color" />
        <Parameter Name="clamp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">Elemento dell'oggetto <see cref="T:System.Drawing.Drawing2D.WrapMode" /> da cui viene specificato come usare le copie ripetute di un'immagine per affiancare un'area.</param>
        <param name="color">Oggetto colore che specifica il colore dei pixel all'esterno di un'immagine di rendering. Il colore è visibile, se il parametro modalità è impostato su <see cref="F:System.Drawing.Drawing2D.WrapMode.Clamp" /> e il rettangolo di origine passato a <see cref="Overload:System.Drawing.Graphics.DrawImage" /> è più grande dell'immagine stessa.</param>
        <param name="clamp">Il parametro non ha alcun effetto. Impostarlo su <see langword="false" />.</param>
        <summary>Imposta la modalità di disposizione e il colore usati per decidere come affiancare una trama all'interno di una forma o nei limiti di quest'ultima. Una trama viene inserita all'interno di una forma per riempirla quando è di dimensioni minori rispetto alla forma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Per un esempio di codice, vedere il <xref:System.Drawing.Imaging.ImageAttributes.SetWrapMode%28System.Drawing.Drawing2D.WrapMode%29> metodo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>