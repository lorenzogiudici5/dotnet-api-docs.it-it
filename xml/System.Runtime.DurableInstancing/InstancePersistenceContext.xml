<Type Name="InstancePersistenceContext" FullName="System.Runtime.DurableInstancing.InstancePersistenceContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="774f08f307628a25a88866a93592fcaade22fb04" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="it-IT" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39959566" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class InstancePersistenceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InstancePersistenceContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstancePersistenceContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InstancePersistenceContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstancePersistenceContext sealed" />
  <TypeSignature Language="F#" Value="type InstancePersistenceContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8a165-101">Rappresenta informazioni sullo stato di esecuzione durante l'esecuzione di un comando di persistenza.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8a165-101">Represents execution state information while a persistence command is being executed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-102">Un'istanza di questa classe viene passata al metodo TryCommand delle implementazioni del provider di persistenza.</span><span class="sxs-lookup"><span data-stu-id="8a165-102">An instance of this class is passed to the TryCommand method of persistence provider implementations.</span></span> <span data-ttu-id="8a165-103">I provider di persistenza utilizzano questa classe per controllare la visualizzazione in memoria dell'istanza, nonch√© per indicare i risultati delle operazioni sull'archivio esterno che potrebbero influire sulla visualizzazione o su altro contesto in memoria.</span><span class="sxs-lookup"><span data-stu-id="8a165-103">Persistence providers use this class to inspect the in-memory view of the instance as well as indicate the results of operations on the external store which may affect the view or other in-memory context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void AssociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.AssociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.AssociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.AssociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8a165-104">L'identificatore di chiave dell'istanza per la chiave associata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-104">The instance key identifier  for the key that has been associated.</span>
          </span>
          <span data-ttu-id="8a165-105">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-105">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-106">Indica che il provider di persistenza ha associato correttamente una chiave all'istanza corrente nell'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-106">Indicates that the persistence provider has successfully associated a key to the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="8a165-107">L'identificatore della chiave viene specificato come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-107">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-108">La chiave di istanza deve essere non associata.</span><span class="sxs-lookup"><span data-stu-id="8a165-108">The instance key must be unassociated.</span></span> <span data-ttu-id="8a165-109">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-109">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginBindReclaimedLock">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginBindReclaimedLock (long instanceVersion, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginBindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginBindReclaimedLock (instanceVersion As Long, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginBindReclaimedLock(long instanceVersion, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginBindReclaimedLock : int64 * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginBindReclaimedLock (instanceVersion, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="8a165-110">La versione del blocco mantenuto sull'istanza oppure zero se il provider di persistenza non implementa le versioni di blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-110">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8a165-111">Il periodo di timeout per l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-111">The timeout period for the asynchronous operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8a165-112">Metodo da chiamare al termine dell'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-112">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a165-113">Informazioni sullo stato associate all'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-113">The state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-114">Iniziare un'operazione asincrona per associare un blocco esistente su un'istanza all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-114">Begin an asynchronous operation to bind an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="8a165-115">La versione del blocco esistente viene passata come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-115">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a165-116">Stato di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-116">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-117">Quando si tenta di acquisire un blocco, il provider di persistenza potrebbe decidere che l'istanza corrente √® gi√† bloccata nell'archivio corrente.</span><span class="sxs-lookup"><span data-stu-id="8a165-117">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="8a165-118">Se il token di blocco corrisponde al token di blocco dell'handle corrente, il provider di persistenza pu√≤ tentare di recuperare il blocco controllandone la versione e passandolo a BeginBindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="8a165-118">If the lock token matches the current handle‚Äôs lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BeginBindReclaimedLock.</span></span> <span data-ttu-id="8a165-119">Il provider di persistenza non deve apportare modifiche all'istanza finch√© il blocco non viene recuperato correttamente.</span><span class="sxs-lookup"><span data-stu-id="8a165-119">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="8a165-120">Se non sono associati altri handle al blocco, l'operazione BeginBindReclaimedLock ha esito positivo e l'handle corrente viene associato al blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-120">If no other handle is bound to the lock, then the BeginBindReclaimedLock operation succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="8a165-121">In caso contrario, BeginBindReclaimedLock o EndBindReclaimedLock genera InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="8a165-121">Otherwise, BeginBindReclaimedLock or EndBindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="8a165-122">Se i comandi sono in corso su altri handle, l'operazione potrebbe non essere completata durante l'attesa per il risultato di tali comandi per decidere se √® possibile recuperare il blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-122">If commands are in progress on other handles, the operation may not complete while waiting for the outcome of those commands to decide whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="8a165-123">√à necessario associare l'handle dell'istanza corrente a un'istanza e a un proprietario di blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-123">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="8a165-124">L'istanza non deve essere completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-124">The instance must not be completed.</span></span> <span data-ttu-id="8a165-125">Il token di blocco associato al proprietario di blocco viene utilizzato per identificare il proprietario del blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-125">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="8a165-126">Una volta associato un blocco a un handle, esso rimane associato per la durata dell'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-126">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="8a165-127">N√© il token di blocco n√© la versione dell'istanza possono essere modificati.</span><span class="sxs-lookup"><span data-stu-id="8a165-127">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginExecute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginExecute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="instancePersistenceContext.BeginExecute (command, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="8a165-128">Comando di persistenza da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-128">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8a165-129">Valore di timeout per l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-129">The time-out value for the operation.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="8a165-130">Delegato che riceve la notifica della ricezione asincrona riguardante il completamento di un'operazione di richiesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-130">The delegate that receives the notification of the asynchronous receive that a request operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="8a165-131">Informazioni sullo stato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-131">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-132">Inizia eseguendo un comando di persistenza in modo asincrono.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-132">Begins executing a persistence command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a165-133">Stato di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-133">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-134">Un provider di persistenza pu√≤ utilizzare questo metodo per eseguire sottocomandi come parte di un comando.</span><span class="sxs-lookup"><span data-stu-id="8a165-134">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="8a165-135">Il sottocomando sar√† eseguito utilizzando BeginTryCommand, simile ai comandi passati a InstanceStore.BeginExecute.</span><span class="sxs-lookup"><span data-stu-id="8a165-135">The sub-command will be executed using BeginTryCommand, similar to commands passed to InstanceStore.BeginExecute.</span></span> <span data-ttu-id="8a165-136">I comandi possono essere annidati, ma un comando non deve eseguire pi√π di un sottocomando alla volta.</span><span class="sxs-lookup"><span data-stu-id="8a165-136">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindAcquiredLock">
      <MemberSignature Language="C#" Value="public void BindAcquiredLock (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindAcquiredLock(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindAcquiredLock(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindAcquiredLock (instanceVersion As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindAcquiredLock(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.BindAcquiredLock : int64 -&gt; unit" Usage="instancePersistenceContext.BindAcquiredLock instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="8a165-137">La versione del blocco acquisito sull'istanza oppure zero se il provider di persistenza non implementa le versioni di blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-137">Version of the lock acquired on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-138">Associa un blocco appena acquisito su un'istanza all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-138">Binds a newly acquired lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="8a165-139">La versione del blocco acquisito viene passata come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-139">The version of the acquired lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-140">Se un provider di persistenza implementa le versioni di blocco, a ogni acquisizione di un blocco sull'istanza la versione deve essere incrementata di uno nell'archivio esterno.</span><span class="sxs-lookup"><span data-stu-id="8a165-140">If a persistence provider implements lock versioning, then each time a lock is acquired on the instance, the version must be incremented by one in the external store.</span></span> <span data-ttu-id="8a165-141">La prima volta che l'istanza viene bloccata, la versione deve essere 1.</span><span class="sxs-lookup"><span data-stu-id="8a165-141">The first time the instance is locked, the version should be 1.</span></span> <span data-ttu-id="8a165-142">Ogni acquisizione del blocco invalida il blocco precedente.</span><span class="sxs-lookup"><span data-stu-id="8a165-142">Each lock acquisition invalidates the previous lock.</span></span> <span data-ttu-id="8a165-143">√à necessario associare l'handle dell'istanza corrente a un'istanza e a un proprietario di blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-143">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="8a165-144">L'istanza non deve essere completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-144">The instance must not be completed.</span></span> <span data-ttu-id="8a165-145">Il token di blocco associato al proprietario di blocco viene utilizzato per identificare il proprietario del blocco</span><span class="sxs-lookup"><span data-stu-id="8a165-145">The lock token associated with the lock owner is used to identify the owner of the lock</span></span>  
  
 <span data-ttu-id="8a165-146">Una volta associato un blocco a un handle, esso rimane associato per la durata dell'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-146">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="8a165-147">N√© il token di blocco n√© la versione dell'istanza possono essere modificati.</span><span class="sxs-lookup"><span data-stu-id="8a165-147">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindEvent">
      <MemberSignature Language="C#" Value="public void BindEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindEvent (persistenceEvent As InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent);" />
      <MemberSignature Language="F#" Value="member this.BindEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent -&gt; unit" Usage="instancePersistenceContext.BindEvent persistenceEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="8a165-148">Oggetto <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> contenente informazioni sull'evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-148">An <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> object containing information about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-149">Associa un oggetto <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> a un handle di istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-149">Binds an <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> to an instance handle.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstance">
      <MemberSignature Language="C#" Value="public void BindInstance (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstance(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstance(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstance (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstance(Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.BindInstance : Guid -&gt; unit" Usage="instancePersistenceContext.BindInstance instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="8a165-150">Identificatore dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-150">An instance identifier.</span>
          </span>
          <span data-ttu-id="8a165-151">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-151">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-152">Associa un'istanza il cui identificatore viene specificato come parametro nell'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-152">Binds an instance whose identifier is specified as a parameter to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-153">Una volta associata un'istanza a un handle, essa rimane associata per la durata dell'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-153">Once an instance is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="8a165-154">Nessun'altra istanza pu√≤ essere associata all'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-154">No other instance can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindInstanceOwner">
      <MemberSignature Language="C#" Value="public void BindInstanceOwner (Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindInstanceOwner(valuetype System.Guid instanceOwnerId, valuetype System.Guid lockToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindInstanceOwner(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindInstanceOwner (instanceOwnerId As Guid, lockToken As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindInstanceOwner(Guid instanceOwnerId, Guid lockToken);" />
      <MemberSignature Language="F#" Value="member this.BindInstanceOwner : Guid * Guid -&gt; unit" Usage="instancePersistenceContext.BindInstanceOwner (instanceOwnerId, lockToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceOwnerId" Type="System.Guid" />
        <Parameter Name="lockToken" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceOwnerId">
          <span data-ttu-id="8a165-155">Identificatore per il proprietario dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-155">The identifier for the instance owner.</span>
          </span>
        </param>
        <param name="lockToken">
          <span data-ttu-id="8a165-156">Il token di blocco del proprietario dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-156">The lock token of the instance owner.</span>
          </span>
          <span data-ttu-id="8a165-157">√à possibile che un provider di persistenza scelga di utilizzare lo stesso valore per l'identificatore del proprietario di istanza e per il token di blocco del proprietario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-157">A persistence provider may choose to use the same value for the instance owner identifier and the owner‚Äôs lock token.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-158">Associa un proprietario di istanza all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-158">Binds an instance owner to the current instance handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-159">Una volta associato un proprietario di istanza a un handle, esso rimane associato per la durata dell'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-159">Once an instance owner is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="8a165-160">Nessun altro proprietario di istanza pu√≤ essere associato all'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-160">No other instance owner can ever be bound to the handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindReclaimedLock">
      <MemberSignature Language="C#" Value="public void BindReclaimedLock (long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindReclaimedLock(int64 instanceVersion, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BindReclaimedLock(System.Int64,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindReclaimedLock (instanceVersion As Long, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindReclaimedLock(long instanceVersion, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.BindReclaimedLock : int64 * TimeSpan -&gt; unit" Usage="instancePersistenceContext.BindReclaimedLock (instanceVersion, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="8a165-161">La versione del blocco mantenuto sull'istanza oppure zero se il provider di persistenza non implementa le versioni di blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-161">Version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8a165-162">Valore di timeout per l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-162">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-163">Associa un blocco esistente su un'istanza all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-163">Binds an existing lock on an instance to the current instance handle.</span>
          </span>
          <span data-ttu-id="8a165-164">La versione del blocco esistente viene passata come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-164">The version of the existing lock is passed as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-165">Quando si tenta di acquisire un blocco, il provider di persistenza potrebbe decidere che l'istanza corrente √® gi√† bloccata nell'archivio corrente.</span><span class="sxs-lookup"><span data-stu-id="8a165-165">When attempting to acquire a lock, the persistence provider may decide that the current instance is already locked in the current store.</span></span> <span data-ttu-id="8a165-166">Se il token di blocco corrisponde al token di blocco dell'handle corrente, il provider di persistenza pu√≤ tentare di recuperare il blocco controllandone la versione e passandolo a BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="8a165-166">If the lock token matches the current handle‚Äôs lock token, then the persistence provider can attempt to reclaim the lock by inspecting its version and passing it to BindReclaimedLock.</span></span> <span data-ttu-id="8a165-167">Il provider di persistenza non deve apportare modifiche all'istanza finch√© il blocco non viene recuperato correttamente.</span><span class="sxs-lookup"><span data-stu-id="8a165-167">The persistence provider must not make changes to the instance until the lock is successfully reclaimed.</span></span> <span data-ttu-id="8a165-168">Se non sono associati altri handle al blocco, BindReclaimedLock ha esito positivo e l'handle corrente viene associato al blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-168">If no other handle is bound to the lock, then BindReclaimedLock succeeds and the current handle becomes bound to the lock.</span></span> <span data-ttu-id="8a165-169">In caso contrario, BindReclaimedLock genera InstanceHandleConflictException.</span><span class="sxs-lookup"><span data-stu-id="8a165-169">Otherwise, BindReclaimedLock throws InstanceHandleConflictException.</span></span> <span data-ttu-id="8a165-170">Se i comandi sono in corso su altri handle, BindReclaimedLock pu√≤ bloccare l'attesa per il risultato di tali comandi prima di decidere se √® possibile recuperare il blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-170">If commands are in progress on other handles, BindReclaimedLock may block waiting for the outcome of those commands before deciding whether the lock can be reclaimed.</span></span>  
  
 <span data-ttu-id="8a165-171">√à necessario associare l'handle dell'istanza corrente a un'istanza e a un proprietario di blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-171">The current instance handle must be bound to an instance and a lock owner.</span></span> <span data-ttu-id="8a165-172">L'istanza non deve essere completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-172">The instance must not be completed.</span></span> <span data-ttu-id="8a165-173">Il token di blocco associato al proprietario di blocco viene utilizzato per identificare il proprietario del blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-173">The lock token associated with the lock owner is used to identify the owner of the lock.</span></span>  
  
 <span data-ttu-id="8a165-174">Una volta associato un blocco a un handle, esso rimane associato per la durata dell'handle.</span><span class="sxs-lookup"><span data-stu-id="8a165-174">Once a lock is bound to a handle, it remains bound for the lifetime of the handle.</span></span> <span data-ttu-id="8a165-175">N√© il token di blocco n√© la versione dell'istanza possono essere modificati.</span><span class="sxs-lookup"><span data-stu-id="8a165-175">Neither the lock token nor the instance version can be changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstance">
      <MemberSignature Language="C#" Value="public void CompletedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstance();" />
      <MemberSignature Language="F#" Value="member this.CompletedInstance : unit -&gt; unit" Usage="instancePersistenceContext.CompletedInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8a165-176">Indica che il provider di persistenza ha contrassegnato correttamente l'istanza corrente come completa nell'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-176">Indicates that the persistence provider has successfully marked the current instance as complete in the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-177">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-177">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="8a165-178">L'istanza non deve essere gi√† completata, bens√¨ deve essere inizializzata.</span><span class="sxs-lookup"><span data-stu-id="8a165-178">The instance must be initialized and not be already completed.</span></span> <span data-ttu-id="8a165-179">(Un'istanza √® inizializzata se in passato √® stato reso persistente su di essa un set di dati dell'istanza). √à necessario completare tutte le chiavi associate all'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-179">(An instance is initialized if a set of instance data has ever been persisted to it.) All of the keys associated to the instance must be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedInstanceKey">
      <MemberSignature Language="C#" Value="public void CompletedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompletedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CompletedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompletedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompletedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.CompletedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.CompletedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8a165-180">L'identificatore di chiave dell'istanza per la chiave completata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-180">The instance key identifier for the key that has been completed.</span>
          </span>
          <span data-ttu-id="8a165-181">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-181">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-182">Indica che il provider di persistenza ha contrassegnato correttamente una chiave come completa nell'archivio esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-182">Indicates that the persistence provider has successfully marked a key as complete in the external store.</span>
          </span>
          <span data-ttu-id="8a165-183">L'identificatore della chiave viene specificato come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-183">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-184">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-184">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="8a165-185">La chiave dell'istanza deve essere associata all'istanza corrente e non deve essere gi√† completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-185">The instance key must be associated to the current instance and not be already completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindReclaimedLockException">
      <MemberSignature Language="C#" Value="public Exception CreateBindReclaimedLockException (long instanceVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception CreateBindReclaimedLockException(int64 instanceVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.CreateBindReclaimedLockException(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBindReclaimedLockException (instanceVersion As Long) As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ CreateBindReclaimedLockException(long instanceVersion);" />
      <MemberSignature Language="F#" Value="member this.CreateBindReclaimedLockException : int64 -&gt; Exception" Usage="instancePersistenceContext.CreateBindReclaimedLockException instanceVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceVersion" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="instanceVersion">
          <span data-ttu-id="8a165-186">La versione del blocco mantenuto sull'istanza oppure zero se il provider di persistenza non implementa le versioni di blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-186">The version of the lock held on the instance, or zero if the persistence provider does not implement lock versions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-187">Crea un'istanza di un'eccezione che pu√≤ essere generata da TryCommand per attivare il comportamento di BindReclaimedLock.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-187">Creates an instance of an exception which can be thrown from TryCommand to trigger BindReclaimedLock behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8a165-188">Eccezione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-188">An exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-189">Codice di esempio:</span><span class="sxs-lookup"><span data-stu-id="8a165-189">Sample code:</span></span>  
  
```  
  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    throw context.CreateBindReclaimedLockException(5);  
}  
is equivalent to  
protected override bool TryCommand(InstancePersistenceContext context, InstancePersistenceCommand command, TimeSpan timeout)  
{  
    context.BindReclaimedLock(5, timeout);  
    throw new OperationCanceledException();  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBindReclaimedLock">
      <MemberSignature Language="C#" Value="public void EndBindReclaimedLock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBindReclaimedLock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndBindReclaimedLock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBindReclaimedLock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBindReclaimedLock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndBindReclaimedLock : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndBindReclaimedLock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8a165-190">Risultato dell'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-190">The result of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-191">Termina l'operazione asincrona avviata dal metodo <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-191">Ends the asynchronous operation started by the <see cref="M:System.Runtime.DurableInstancing.InstancePersistenceContext.BeginBindReclaimedLock(System.Int64,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public void EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndExecute (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndExecute(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndExecute : IAsyncResult -&gt; unit" Usage="instancePersistenceContext.EndExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="8a165-192">Stato di un'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-192">The status of an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-193">Termina l'operazione asincrona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-193">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.Execute(System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (command As InstancePersistenceCommand, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Execute : System.Runtime.DurableInstancing.InstancePersistenceCommand * TimeSpan -&gt; unit" Usage="instancePersistenceContext.Execute (command, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="8a165-194">Comando di persistenza da eseguire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-194">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="8a165-195">Valore di timeout per l'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-195">The time-out value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-196">Esegue un comando di persistenza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-196">Executes a persistence command.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-197">Un provider di persistenza pu√≤ utilizzare questo metodo per eseguire sottocomandi come parte di un comando.</span><span class="sxs-lookup"><span data-stu-id="8a165-197">A persistence provider can use this method to execute sub-commands as part of a command.</span></span> <span data-ttu-id="8a165-198">Il sottocomando sar√† eseguito utilizzando TryCommand, simile ai comandi passati a InstanceStore.Execute.</span><span class="sxs-lookup"><span data-stu-id="8a165-198">The sub-command will be executed using TryCommand, similar to commands passed to InstanceStore.Execute.</span></span> <span data-ttu-id="8a165-199">I comandi possono essere annidati, ma un comando non deve eseguire pi√π di un sottocomando alla volta.</span><span class="sxs-lookup"><span data-stu-id="8a165-199">Commands can be nested, but a command must not execute more than one sub-command at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle InstanceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceHandle InstanceHandle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceHandle As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceHandle ^ InstanceHandle { System::Runtime::DurableInstancing::InstanceHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceHandle : System.Runtime.DurableInstancing.InstanceHandle" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a165-200">Ottiene l'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-200">Gets the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a165-201">L'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-201">The current instance handle.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceVersion">
      <MemberSignature Language="C#" Value="public long InstanceVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceVersion As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceVersion { long get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceVersion : int64" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a165-202">Ottiene la versione del blocco mantenuto sull'istanza corrente dall'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-202">Gets the version of the lock held on the current instance by the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a165-203">La versione del blocco dell'istanza associato all'handle dell'istanza corrente o -1 se l'handle non √® associato a un blocco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-203">The version of the instance lock bound to the current instance handle, or -1 if the handle isn‚Äôt bound to a lock.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-204">Il provider di persistenza deve controllare questo valore rispetto alla versione del blocco mantenuto su un'istanza nell'archivio di istanze quando viene eseguita un'operazione che richiede un blocco (ad esempio, la persistenza dei dati dell'istanza) mediante un handle associato al blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-204">The persistence provider should check this value against the lock version of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="8a165-205">Se la versione del blocco non corrisponde, il comando non riesce e genera InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="8a165-205">If the lock version doesn‚Äôt match, the command should fail with InstanceLockLostException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceView">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView InstanceView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceView InstanceView" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceView As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceView ^ InstanceView { System::Runtime::DurableInstancing::InstanceView ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceView : System.Runtime.DurableInstancing.InstanceView" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.InstanceView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a165-206">Ottiene l'oggetto visualizzazione dell'istanza che rappresenta lo stato in memoria dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-206">Gets the instance view object that represents the in-memory state of the current instance.</span>
          </span>
          <span data-ttu-id="8a165-207">Questa visualizzazione riflette gli aggiornamenti man mano che vengono apportati dal comando in esecuzione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-207">This view reflects updates as they are made by the command in progress.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a165-208">Oggetto visualizzazione dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-208">The instance view object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadedInstance">
      <MemberSignature Language="C#" Value="public void LoadedInstance (System.Runtime.DurableInstancing.InstanceState state, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, System.Collections.Generic.IDictionary&lt;Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadedInstance(valuetype System.Runtime.DurableInstancing.InstanceState state, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceData, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; instanceMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; associatedInstanceKeyMetadata, class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt;&gt; completedInstanceKeyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.LoadedInstance(System.Runtime.DurableInstancing.InstanceState,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}},System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue}})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadedInstance (state As InstanceState, instanceData As IDictionary(Of XName, InstanceValue), instanceMetadata As IDictionary(Of XName, InstanceValue), associatedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)), completedInstanceKeyMetadata As IDictionary(Of Guid, IDictionary(Of XName, InstanceValue)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadedInstance(System::Runtime::DurableInstancing::InstanceState state, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceData, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ instanceMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ associatedInstanceKeyMetadata, System::Collections::Generic::IDictionary&lt;Guid, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^&gt; ^ completedInstanceKeyMetadata);" />
      <MemberSignature Language="F#" Value="member this.LoadedInstance : System.Runtime.DurableInstancing.InstanceState * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; * System.Collections.Generic.IDictionary&lt;Guid, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt;&gt; -&gt; unit" Usage="instancePersistenceContext.LoadedInstance (state, instanceData, instanceMetadata, associatedInstanceKeyMetadata, completedInstanceKeyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Runtime.DurableInstancing.InstanceState" />
        <Parameter Name="instanceData" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="instanceMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="associatedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
        <Parameter Name="completedInstanceKeyMetadata" Type="System.Collections.Generic.IDictionary&lt;System.Guid,System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="8a165-209">Informazioni sullo stato dell'istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-209">The instance state information.</span>
          </span>
        </param>
        <param name="instanceData">
          <span data-ttu-id="8a165-210">Dati dell'istanza come dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-210">The instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="instanceMetadata">
          <span data-ttu-id="8a165-211">Metadati dell'istanza come raccolta di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-211">Instance metadata as a collection of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="associatedInstanceKeyMetadata">
          <span data-ttu-id="8a165-212">Metadati della chiave di istanza associata come dizionario di metadati degli identificatori di istanza e chiavi di istanza, ovvero un dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-212">Associated instance key metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="completedInstanceKeyMetadata">
          <span data-ttu-id="8a165-213">Metadati dell'istanza completata come dizionario di metadati degli identificatori di istanza e chiavi di istanza, ovvero un dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-213">Completed instance metadata as a dictionary of instance identifier and instance key metadata, which is a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-214">Indica che il provider di persistenza ha recuperato correttamente l'istanza corrente dall'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-214">Indicates that the persistence provider has successfully retrieved the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-215">√à necessario associare l'handle dell'istanza corrente a un'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-215">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="8a165-216">Se l'handle dell'istanza viene associato a un blocco oppure se l'istanza caricata √® contrassegnata come completa, i dati caricati sono considerati coerenti; in caso contrario, vengono considerati incerti.</span><span class="sxs-lookup"><span data-stu-id="8a165-216">If the instance handle is bound to a lock or the loaded instance is marked as complete, the loaded data is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockToken">
      <MemberSignature Language="C#" Value="public Guid LockToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LockToken" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LockToken As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LockToken { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.LockToken : Guid" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.LockToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a165-217">Ottiene il token di blocco del proprietario dell'istanza associato all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-217">Gets the lock token of the instance owner bound to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a165-218">Il token di blocco associato all'handle dell'istanza corrente o Guid.Empty se l'handle non √® associato a un proprietario di istanza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-218">The lock token bound to the current instance handle, or Guid.Empty if the handle isn‚Äôt bound to an instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-219">Il provider di persistenza deve controllare questo valore rispetto al token di blocco mantenuto su un'istanza nell'archivio di istanze quando viene eseguita un'operazione che richiede un blocco (ad esempio, la persistenza dei dati dell'istanza) mediante un handle associato al blocco.</span><span class="sxs-lookup"><span data-stu-id="8a165-219">The persistence provider should check this value against the lock token of the lock held on an instance in the instance store when performing an operation that requires a lock (such as persisting instance data) using a handle bound to the lock.</span></span> <span data-ttu-id="8a165-220">Se il token di blocco non corrisponde, il comando non riesce e genera InstanceLockLostException.</span><span class="sxs-lookup"><span data-stu-id="8a165-220">If the lock token doesn‚Äôt match, the command should fail with InstanceLockLostException.</span></span>  
  
 <span data-ttu-id="8a165-221">Il provider di persistenza deve utilizzare questo valore come token di blocco quando acquisisce un nuovo blocco su un'istanza (ad esempio, rendere persistenti i dati dell'istanza mediante un handle non ancora associato a un blocco).</span><span class="sxs-lookup"><span data-stu-id="8a165-221">The persistence provider should use this value as the lock token when acquiring a new lock on an instance (such as persisting instance data using a handle not already bound to a lock).</span></span> <span data-ttu-id="8a165-222">Se l'istanza √® gi√† bloccata nell'archivio di istanze e il token di blocco corrisponde a questo token, il provider di persistenza pu√≤ tentare di recuperare l'istanza utilizzando BindReclaimedLock.</span><span class="sxs-lookup"><span data-stu-id="8a165-222">If the instance is already locked in the instance store and the lock token matches this lock token, the persistence provider can attempt to reclaim the instance using BindReclaimedLock.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedInstance">
      <MemberSignature Language="C#" Value="public void PersistedInstance (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PersistedInstance(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.PersistedInstance(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue})" />
      <MemberSignature Language="VB.NET" Value="Public Sub PersistedInstance (data As IDictionary(Of XName, InstanceValue))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PersistedInstance(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.PersistedInstance : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; -&gt; unit" Usage="instancePersistenceContext.PersistedInstance data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="8a165-223">I dati dell'istanza come dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-223">Instance data as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-224">Indica che il provider di persistenza ha reso correttamente persistente un set di dati dell'istanza nell'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-224">Indicates that the persistence provider has successfully persisted a set of instance data to the instance store.</span>
          </span>
          <span data-ttu-id="8a165-225">Questo produce l'inizializzazione dell'istanza, se non era gi√† stata inizializzata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-225">This has the effect of initializing the instance if it wasn‚Äôt already.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-226">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-226">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="8a165-227">Ogni set di dati dell'istanza sostituisce completamente il set precedente.</span><span class="sxs-lookup"><span data-stu-id="8a165-227">Each set of instance data completely replaces the previous set.</span></span> <span data-ttu-id="8a165-228">√à possibile che il set di dati dell'istanza sia null, che corrisponde a vuoto.</span><span class="sxs-lookup"><span data-stu-id="8a165-228">The set of instance data may be null ‚Äì this is the same as empty.</span></span> <span data-ttu-id="8a165-229">Se si rende persistente un set di dati dell'istanza null, si elimina il set esistente di dati dell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-229">Persisting a null set of instance data deletes the existing set of instance data.</span></span> <span data-ttu-id="8a165-230">(Rendere persistente un set di dati dell'istanza non ha effetti sui metadati dell'istanza).</span><span class="sxs-lookup"><span data-stu-id="8a165-230">(Persisting a set of instance data has no effect on instance metadata.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueriedInstanceStore">
      <MemberSignature Language="C#" Value="public void QueriedInstanceStore (System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueriedInstanceStore(class System.Runtime.DurableInstancing.InstanceStoreQueryResult queryResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.QueriedInstanceStore(System.Runtime.DurableInstancing.InstanceStoreQueryResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueriedInstanceStore (queryResult As InstanceStoreQueryResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueriedInstanceStore(System::Runtime::DurableInstancing::InstanceStoreQueryResult ^ queryResult);" />
      <MemberSignature Language="F#" Value="member this.QueriedInstanceStore : System.Runtime.DurableInstancing.InstanceStoreQueryResult -&gt; unit" Usage="instancePersistenceContext.QueriedInstanceStore queryResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryResult" Type="System.Runtime.DurableInstancing.InstanceStoreQueryResult" />
      </Parameters>
      <Docs>
        <param name="queryResult">
          <span data-ttu-id="8a165-231">Risultati di una query eseguita su un archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-231">The results of a query against an instance store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-232">Aggiunge l'oggetto <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passato come parametro a un elenco di oggetti <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> in <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-232">Adds the <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> passed as a parameter to a list of <see cref="T:System.Runtime.DurableInstancing.InstanceStoreQueryResult" /> objects in an <see cref="T:System.Runtime.DurableInstancing.InstanceView" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceKeyMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceKeyMetadata (Guid key, System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceKeyMetadata(valuetype System.Guid key, class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceKeyMetadata(System.Guid,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceKeyMetadata (key As Guid, metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceKeyMetadata(Guid key, System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceKeyMetadata : Guid * System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceKeyMetadata (key, metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8a165-233">L'identificatore di chiave dell'istanza per la chiave di cui sono stati letti i metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-233">The instance key identifier for the key whose metadata was read.</span>
          </span>
          <span data-ttu-id="8a165-234">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-234">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="metadata">
          <span data-ttu-id="8a165-235">I metadati come dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-235">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="8a165-236">
            <see langword="True" /> se i metadati rappresentano tutti i metadati associati alla chiave di istanza, in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-236">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance key, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-237">Indica che il provider di persistenza ha letto correttamente alcuni metadati della chiave dell'istanza per una chiave associata all'istanza corrente dall'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-237">Indicates that the persistence provider has successfully read some instance key metadata for a key associated to the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-238">√à necessario associare l'handle dell'istanza corrente a un'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-238">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="8a165-239">Se l'handle dell'istanza viene associato a un blocco oppure se l'istanza corrente √® contrassegnata come completa, i metadati sono considerati coerenti; in caso contrario, vengono considerati incerti.</span><span class="sxs-lookup"><span data-stu-id="8a165-239">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="8a165-240">I metadati come dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-240">The metadata as a dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="8a165-241">
            <see langword="True" /> se i metadati rappresentano tutti i metadati associati all'istanza, in caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-241">
              <see langword="True" /> if the metadata represents all of the metadata associated to the instance, otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-242">Indica che il provider di persistenza ha letto correttamente alcuni metadati dell'istanza per l'istanza corrente dall'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-242">Indicates that the persistence provider has successfully read some instance metadata for the current instance from the instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadInstanceOwnerMetadata">
      <MemberSignature Language="C#" Value="public void ReadInstanceOwnerMetadata (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadInstanceOwnerMetadata(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, class System.Runtime.DurableInstancing.InstanceValue&gt; metadata, bool complete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.ReadInstanceOwnerMetadata(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadInstanceOwnerMetadata (metadata As IDictionary(Of XName, InstanceValue), complete As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadInstanceOwnerMetadata(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Runtime::DurableInstancing::InstanceValue ^&gt; ^ metadata, bool complete);" />
      <MemberSignature Language="F#" Value="member this.ReadInstanceOwnerMetadata : System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName, System.Runtime.DurableInstancing.InstanceValue&gt; * bool -&gt; unit" Usage="instancePersistenceContext.ReadInstanceOwnerMetadata (metadata, complete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue&gt;" />
        <Parameter Name="complete" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadata">
          <span data-ttu-id="8a165-243">Dizionario di oggetti <see cref="T:System.Xml.Linq.XName" /> e <see cref="T:System.Runtime.DurableInstancing.InstanceValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-243">The dictionary of <see cref="T:System.Xml.Linq.XName" /> and <see cref="T:System.Runtime.DurableInstancing.InstanceValue" /> objects.</span>
          </span>
        </param>
        <param name="complete">
          <span data-ttu-id="8a165-244">Valore che consente di specificare se la coerenza deve essere impostata su <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> o <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-244">The value to specify whether the consistency to be set to <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.InDoubt" /> or <see cref="F:System.Runtime.DurableInstancing.InstanceValueConsistency.Partial" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-245">Imposta i metadati del proprietario dell'istanza utilizzando i dati passati nel parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-245">Sets the instance owner metadata using the data passed in the parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-246">√à necessario associare l'handle dell'istanza corrente a un'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-246">The current instance handle must be bound to an instance.</span></span> <span data-ttu-id="8a165-247">Se l'handle dell'istanza viene associato a un blocco oppure se l'istanza corrente √® contrassegnata come completa, i metadati sono considerati coerenti; in caso contrario, vengono considerati incerti.</span><span class="sxs-lookup"><span data-stu-id="8a165-247">If the instance handle is bound to a lock or the current instance is marked as complete, the metadata is considered to be consistent; otherwise, it is considered to be in doubt.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCancellationHandler">
      <MemberSignature Language="C#" Value="public void SetCancellationHandler (Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCancellationHandler(class System.Action`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceContext&gt; cancellationHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.SetCancellationHandler(System.Action{System.Runtime.DurableInstancing.InstancePersistenceContext})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCancellationHandler (cancellationHandler As Action(Of InstancePersistenceContext))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCancellationHandler(Action&lt;System::Runtime::DurableInstancing::InstancePersistenceContext ^&gt; ^ cancellationHandler);" />
      <MemberSignature Language="F#" Value="member this.SetCancellationHandler : Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt; -&gt; unit" Usage="instancePersistenceContext.SetCancellationHandler cancellationHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationHandler" Type="System.Action&lt;System.Runtime.DurableInstancing.InstancePersistenceContext&gt;" />
      </Parameters>
      <Docs>
        <param name="cancellationHandler">
          <span data-ttu-id="8a165-248">Riferimento a una funzione da chiamare.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-248">The reference to a function to be called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-249">Imposta il gestore di annullamento da chiamare quando viene richiesto l'annullamento di un'operazione.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-249">Sets the cancellation handler to be called when the cancel of an operation is requested.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-250">Se viene chiamato il gestore di annullamento, il provider di persistenza deve annullare tutte le operazioni in sospeso e deve generare OperationCanceledException da TryCommand per indicare che il comando di persistenza √® stato interrotto prima del completamento.</span><span class="sxs-lookup"><span data-stu-id="8a165-250">If the cancellation handler is called, the persistence provider should cancel all pending operations and throw OperationCanceledException from TryCommand to indicate that the persistence command was interrupted before it could be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnassociatedInstanceKey">
      <MemberSignature Language="C#" Value="public void UnassociatedInstanceKey (Guid key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnassociatedInstanceKey(valuetype System.Guid key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.UnassociatedInstanceKey(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnassociatedInstanceKey (key As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnassociatedInstanceKey(Guid key);" />
      <MemberSignature Language="F#" Value="member this.UnassociatedInstanceKey : Guid -&gt; unit" Usage="instancePersistenceContext.UnassociatedInstanceKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8a165-251">L'identificatore di chiave dell'istanza per la chiave dissociata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-251">The instance key identifier for the key that has been unassociated.</span>
          </span>
          <span data-ttu-id="8a165-252">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-252">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-253">Indica che il provider di persistenza ha dissociato correttamente una chiave dall'istanza corrente nell'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-253">Indicates that the persistence provider has successfully disassociated a key from the current instance in the instance store.</span>
          </span>
          <span data-ttu-id="8a165-254">L'identificatore della chiave viene specificato come parametro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-254">The identifier of the key is specified as a parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-255">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-255">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="8a165-256">La chiave dell'istanza deve essere associata all'istanza corrente e deve essere contrassegnata come completa.</span><span class="sxs-lookup"><span data-stu-id="8a165-256">The instance key must be associated to the current instance and must be marked complete.</span></span> <span data-ttu-id="8a165-257">L'istanza corrente non deve essere contrassegnata come completa.</span><span class="sxs-lookup"><span data-stu-id="8a165-257">The current instance must not be marked complete.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserContext">
      <MemberSignature Language="C#" Value="public object UserContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserContext : obj" Usage="System.Runtime.DurableInstancing.InstancePersistenceContext.UserContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8a165-258">Ottiene le informazioni sul contesto utente allegate all'handle dell'istanza corrente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-258">Gets the user context information attached to the current instance handle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8a165-259">Informazioni sul contesto dell'utente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-259">The user context information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-260">L'oggetto corrisponde a quello restituito da InstanceStore.OnNewInstanceHandle per l'handle dell'istanza corrente.</span><span class="sxs-lookup"><span data-stu-id="8a165-260">The object is the one that is returned from InstanceStore.OnNewInstanceHandle for the current instance handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceKeyMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceKeyMetadataValue (Guid key, System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceKeyMetadataValue(valuetype System.Guid key, class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceKeyMetadataValue(System.Guid,System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceKeyMetadataValue (key As Guid, name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceKeyMetadataValue(Guid key, System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceKeyMetadataValue : Guid * System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceKeyMetadataValue (key, name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Guid" />
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="8a165-261">L'identificatore di chiave dell'istanza per la chiave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-261">The instance key identifier for the key.</span>
          </span>
          <span data-ttu-id="8a165-262">Non deve corrispondere a Guid.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-262">Must not be Guid.Empty.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="8a165-263">Nome della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-263">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8a165-264">Valore della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-264">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-265">Indica che il provider di persistenza ha scritto correttamente un valore di metadati per una chiave dell'istanza associata all'istanza corrente nell'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-265">Indicates that the persistence provider has successfully written a metadata value for an instance key that is associated with the current instance to the instance store</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-266">L'handle dell'istanza corrente deve essere associato a un'istanza e a un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-266">The current instance handle must be bound to an instance as well as a lock on that instance.</span></span> <span data-ttu-id="8a165-267">La chiave dell'istanza deve essere associata all'istanza corrente e non deve essere completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-267">The instance key must be associated with the current instance and must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a165-268">Nome della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-268">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8a165-269">Valore della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-269">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-270">Indica che il provider di persistenza ha scritto correttamente un valore di metadati per l'istanza corrente sull'archivio di istanze esterno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-270">Indicates that the persistence provider has successfully written a metadata value for the current instance to the external instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-271">L'handle dell'istanza corrente deve essere associato a un'istanza e deve avere un blocco su quell'istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-271">The current instance handle must be bound to an instance as well as has a lock on that instance.</span></span> <span data-ttu-id="8a165-272">L'istanza non deve essere completata.</span><span class="sxs-lookup"><span data-stu-id="8a165-272">The instance must not be completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WroteInstanceOwnerMetadataValue">
      <MemberSignature Language="C#" Value="public void WroteInstanceOwnerMetadataValue (System.Xml.Linq.XName name, System.Runtime.DurableInstancing.InstanceValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WroteInstanceOwnerMetadataValue(class System.Xml.Linq.XName name, class System.Runtime.DurableInstancing.InstanceValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstancePersistenceContext.WroteInstanceOwnerMetadataValue(System.Xml.Linq.XName,System.Runtime.DurableInstancing.InstanceValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WroteInstanceOwnerMetadataValue (name As XName, value As InstanceValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WroteInstanceOwnerMetadataValue(System::Xml::Linq::XName ^ name, System::Runtime::DurableInstancing::InstanceValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.WroteInstanceOwnerMetadataValue : System.Xml.Linq.XName * System.Runtime.DurableInstancing.InstanceValue -&gt; unit" Usage="instancePersistenceContext.WroteInstanceOwnerMetadataValue (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Xml.Linq.XName" />
        <Parameter Name="value" Type="System.Runtime.DurableInstancing.InstanceValue" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8a165-273">Nome della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-273">The name of the metadata property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8a165-274">Valore della propriet√† dei metadati.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-274">The value of the metadata property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8a165-275">Indica che il provider di persistenza ha scritto correttamente un valore di metadati per il proprietario dell'istanza corrente sull'archivio di istanze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8a165-275">Indicates that the persistence provider has successfully written a metadata value for the current instance owner to the instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a165-276">√à necessario associare l'handle dell'istanza corrente a un proprietario di istanza.</span><span class="sxs-lookup"><span data-stu-id="8a165-276">The current instance handle must be bound to an instance owner.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>